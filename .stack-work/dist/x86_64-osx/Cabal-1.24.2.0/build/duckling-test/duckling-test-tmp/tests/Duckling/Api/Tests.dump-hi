
==================== FINAL INTERFACE ====================
2019-03-14 03:14:35.250464 UTC

interface main@main:Duckling.Api.Tests 8002
  interface hash: 1e9c99a32cda1a6cfd44b00cb5b6ef24
  ABI hash: 960193244fc2e482099c46928cdcd178
  export-list hash: 6a6cb3725ca14b181c55a7374e4922ee
  orphan hash: f1b0bf80eef46822fc3ff9052e9eb51f
  flag hash: 4d475f8a6166d2e941936bd496b4ac56
  sig of: Nothing
  used TH splices: False
  where
exports:
  Duckling.Api.Tests.tests
module dependencies: Duckling.Testing.Asserts
package dependencies: aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k
                      ansi-terminal-0.6.3.1@ansi-terminal-0.6.3.1-3RTqikoQf47ajVD9m8zgB
                      ansi-wl-pprint-0.6.7.3@ansi-wl-pprint-0.6.7.3-A79v826bgPr574HtaZPPqC
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      clock-0.7.2@clock-0.7.2-8dRNleB7rysIZAOReuhpZA
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      dependent-sum-0.4@dependent-sum-0.4-32kCW1hJUMSBd03CvIwqZl
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1
                      extra-1.5.3@extra-1.5.3-DgI7Z6Dwkeh8JGXDlNC5BL
                      generic-deriving-1.11.2@generic-deriving-1.11.2-FTRmVS5RM6G7R2MgyiZHgW
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-EqIYOWOFTvf23sT5QTYn9U
                      parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      process-1.4.3.0@process-1.4.3.0
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      regex-base-0.93.2@regex-base-0.93.2-AYjYAsBidAc8f5XNm9b2Aa
                      regex-pcre-0.94.4@regex-pcre-0.94.4-Dlv5UOV35E3Fsya0hon6HM
                      regex-tdfa-1.2.2@regex-tdfa-1.2.2-CuFri6F1SLwFkkN6cPEwX5
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      tasty-0.11.3@tasty-0.11.3-70FgRohyKVSBrTVBDiKym5
                      tasty-hunit-0.9.2@tasty-hunit-0.9.2-Rlwyh85h61dqrsDptS53
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI
                      th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      timezone-series-0.1.8@timezone-series-0.1.8-4K4l0A0wjZPUt7r2oV8PT
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unbounded-delays-0.1.1.0@unbounded-delays-0.1.1.0-8pvOsE97fmS7WDAN5vUbqX
                      unix-2.7.2.1@unix-2.7.2.1
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         dependent-sum-0.4@dependent-sum-0.4-32kCW1hJUMSBd03CvIwqZl:Data.GADT.Compare
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         regex-base-0.93.2@regex-base-0.93.2-AYjYAsBidAc8f5XNm9b2Aa:Text.Regex.Base.Context
         regex-pcre-0.94.4@regex-pcre-0.94.4-Dlv5UOV35E3Fsya0hon6HM:Text.Regex.PCRE.ByteString
         regex-pcre-0.94.4@regex-pcre-0.94.4-Dlv5UOV35E3Fsya0hon6HM:Text.Regex.PCRE.ByteString.Lazy
         regex-pcre-0.94.4@regex-pcre-0.94.4-Dlv5UOV35E3Fsya0hon6HM:Text.Regex.PCRE.Sequence
         regex-pcre-0.94.4@regex-pcre-0.94.4-Dlv5UOV35E3Fsya0hon6HM:Text.Regex.PCRE.String
         regex-tdfa-1.2.2@regex-tdfa-1.2.2-CuFri6F1SLwFkkN6cPEwX5:Text.Regex.TDFA.ByteString
         regex-tdfa-1.2.2@regex-tdfa-1.2.2-CuFri6F1SLwFkkN6cPEwX5:Text.Regex.TDFA.ByteString.Lazy
         regex-tdfa-1.2.2@regex-tdfa-1.2.2-CuFri6F1SLwFkkN6cPEwX5:Text.Regex.TDFA.Sequence
         regex-tdfa-1.2.2@regex-tdfa-1.2.2-CuFri6F1SLwFkkN6cPEwX5:Text.Regex.TDFA.String
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Applicative
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Concurrent
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Exception
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Monad.ST
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Array
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Bool
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.ByteString
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Char
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Complex
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Data
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Dynamic
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Either
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Fixed
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Floating
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Compose
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Identity
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Product
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Sum
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Integral
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.List
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.List.NonEmpty
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Maybe
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Monoid
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Ord
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Proxy
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Ratio
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Semigroup
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Text
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Tuple
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Type.Coercion
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Type.Equality
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Typeable
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Version
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Void
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Foreign.C.Types
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Foreign.Ptr
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Event
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Fingerprint
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Generics
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.RTS.Flags
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Stack
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.StaticPtr
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Stats
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.TypeLits
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Numeric.Natural
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.System.Exit
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.System.IO
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.System.Posix.Types
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Text.Read
         th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI:Language.Haskell.TH.Lift
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         clock-0.7.2@clock-0.7.2-8dRNleB7rysIZAOReuhpZA:System.Clock
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.AmountOfMoney.Types
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.CreditCardNumber.Types
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Distance.Types
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Duration.Types
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Email.Types
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Gender.Types
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Identity.Types
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Locale
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Numeral.Types
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Ordinal.Types
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.PhoneNumber.Types
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Quantity.Types
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Regex.Types
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Region
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Temperature.Types
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Time.Types
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.TimeGrain.Types
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Types
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Url.Types
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Volume.Types
                         duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Weight.Types
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         tasty-0.11.3@tasty-0.11.3-70FgRohyKVSBrTVBDiKym5:Test.Tasty.Core
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.FromStringTextShow
                         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Options
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  dependent-sum-0.4@dependent-sum-0.4-32kCW1hJUMSBd03CvIwqZl:Data.Some ffcc59e6963bb1cc24b7856886ba8efa
import  -/  duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Api b20292b61b548d938c5eea3cefc0e134
import  -/  duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Dimensions.Types 0550b66ebec07a66dfc3ea4104e21efe
import  -/  duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Locale 020bf273f3f9b80348357a6a6745b7ad
import  -/  duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Numeral.Types 5130bfd045a9ca6085fec0a42ae9c523
import  -/  duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Testing.Types a43f67fb62d50f033116bd615019c103
import  -/  duckling-0.1.6.1@duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Types 801e304eb17ff8eb30c8b6726b1646d0
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  Duckling.Testing.Asserts 075282b57fa4cb114d9d3b6a3d9f12dd
  exports: 86cc990b5777118634dd86bb302deccb
  analyzedFirstTest 2689c4255fde13abce093139ea24a5f9
import  -/  tasty-0.11.3@tasty-0.11.3-70FgRohyKVSBrTVBDiKym5:Test.Tasty 2483912dfb113e5fc6f53f957b1bdd0a
import  -/  tasty-0.11.3@tasty-0.11.3-70FgRohyKVSBrTVBDiKym5:Test.Tasty.Core bcfa94dbd03db9aa2fa206327c648570
import  -/  tasty-hunit-0.9.2@tasty-hunit-0.9.2-Rlwyh85h61dqrsDptS53:Test.Tasty.HUnit 025c1c65eeabd1e4863d72003142afc2
import  -/  tasty-hunit-0.9.2@tasty-hunit-0.9.2-Rlwyh85h61dqrsDptS53:Test.Tasty.HUnit.Orig bc50545a29476cbf7eabeccd793dcc64
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text f7d3d648ffeef1043fe2e522e7e66c1b
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Internal 9bfcbbbe07ecef48f631025a838df7da
import  -/  unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base 05331f9dbdce4e8225c18ce1a8ba2f88
import  -/  unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Strict 74fd7b14a4a2f9eaf95c7dc9a18e61b1
import  -/  unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet 5f58e144114dc7a5de72a4ecdcadde39
d304ad6a27492354719e6c8ad1aab844
  $s$fEqHashSet ::
    GHC.Classes.Eq
      (Data.HashSet.HashSet (Data.Some.Some Duckling.Types.Dimension))
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.HashSet.HashSet (Data.Some.Some Duckling.Types.Dimension))
                  Duckling.Api.Tests.$s$fEqHashSet_$s$fEqHashSet_$c==
                  Duckling.Api.Tests.$s$fEqHashSet_$s$fEqHashSet_$c/= -}
bb8cd9ca6a1975a68ae4d229dbede79e
  $s$fEqHashSet_$s$fEqHashSet_$c/= ::
    Data.HashSet.HashSet (Data.Some.Some Duckling.Types.Dimension)
    -> Data.HashSet.HashSet (Data.Some.Some Duckling.Types.Dimension)
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Data.HashSet.HashSet
                           (Data.Some.Some Duckling.Types.Dimension))
                   (y :: Data.HashSet.HashSet
                           (Data.Some.Some Duckling.Types.Dimension)) ->
                 GHC.Classes.not
                   (Data.HashMap.Base.equalKeys
                      @ (Data.Some.Some Duckling.Types.Dimension)
                      @ (Data.Some.Some Duckling.Types.Dimension)
                      @ ()
                      @ ()
                      Duckling.Api.Tests.$s$fEqHashSet_$s$fEqSome_$c==
                      x `cast`
                      (Data.HashSet.N:HashSet[0]
                           <Data.Some.Some Duckling.Types.Dimension>_N)
                      y `cast`
                      (Data.HashSet.N:HashSet[0]
                           <Data.Some.Some Duckling.Types.Dimension>_N))) -}
d0705b917dcf5ec21e997be5a27a9969
  $s$fEqHashSet_$s$fEqHashSet_$c== ::
    Data.HashSet.HashSet (Data.Some.Some Duckling.Types.Dimension)
    -> Data.HashSet.HashSet (Data.Some.Some Duckling.Types.Dimension)
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (ds :: Data.HashSet.HashSet
                            (Data.Some.Some Duckling.Types.Dimension))
                   (ds1 :: Data.HashSet.HashSet
                             (Data.Some.Some Duckling.Types.Dimension)) ->
                 Data.HashMap.Base.equalKeys
                   @ (Data.Some.Some Duckling.Types.Dimension)
                   @ (Data.Some.Some Duckling.Types.Dimension)
                   @ ()
                   @ ()
                   Duckling.Api.Tests.$s$fEqHashSet_$s$fEqSome_$c==
                   ds
                     `cast`
                   (Data.HashSet.N:HashSet[0]
                        <Data.Some.Some Duckling.Types.Dimension>_N)
                   ds1
                     `cast`
                   (Data.HashSet.N:HashSet[0]
                        <Data.Some.Some Duckling.Types.Dimension>_N)) -}
fa1e712cc65a63bea408f2939da77991
  $s$fEqHashSet_$s$fEqSome_$c== ::
    Data.Some.Some Duckling.Types.Dimension
    -> Data.Some.Some Duckling.Types.Dimension -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Data.Some.Some Duckling.Types.Dimension)
                   (ds1 :: Data.Some.Some Duckling.Types.Dimension) ->
                 case ds of wild { Data.Some.This t0 x ->
                 case ds1 of wild1 { Data.Some.This t10 y ->
                 case Duckling.Types.$fEqCandidate_$cgeq @ t0 @ t10 x y of wild2 {
                   GHC.Base.Nothing -> GHC.Types.False
                   GHC.Base.Just ipv -> GHC.Types.True } } }) -}
900487bc4cde03549c753d7a28c756ba
  $s$fEqSome ::
    GHC.Classes.Eq (Data.Some.Some Duckling.Types.Dimension)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Some.Some Duckling.Types.Dimension)
                  Duckling.Api.Tests.$s$fEqHashSet_$s$fEqSome_$c==
                  Duckling.Api.Tests.$s$fEqSome_$s$fEqSome_$c/= -}
17e19d11363c3d76145fbd5fe883a4e5
  $s$fEqSome_$s$fEqSome_$c/= ::
    Data.Some.Some Duckling.Types.Dimension
    -> Data.Some.Some Duckling.Types.Dimension -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Data.Some.Some Duckling.Types.Dimension)
                   (y :: Data.Some.Some Duckling.Types.Dimension) ->
                 GHC.Classes.not
                   (Duckling.Api.Tests.$s$fEqHashSet_$s$fEqSome_$c== x y)) -}
81b777ab42bbbb43b393c82699bb21b9
  $s$fEq[] :: GHC.Classes.Eq [Duckling.Types.ResolvedToken]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Duckling.Types.ResolvedToken]
                  (GHC.Classes.$fEq[]_$c==
                     @ Duckling.Types.ResolvedToken
                     Duckling.Types.$fEqResolvedToken)
                  Duckling.Api.Tests.$s$fEq[]_$s$fEq[]_$c/= -}
2084b02d565689f040b99791046fab1c
  $s$fEq[]1 ::
    GHC.Classes.Eq [Data.Some.Some Duckling.Types.Dimension]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Data.Some.Some Duckling.Types.Dimension]
                  (GHC.Classes.$fEq[]_$c==
                     @ (Data.Some.Some Duckling.Types.Dimension)
                     Duckling.Api.Tests.$s$fEq[]2)
                  Duckling.Api.Tests.$s$fEq[]_$s$fEq[]_$c/=1 -}
7f5651cbda273e21209f6b73d9f80582
  $s$fEq[]2 ::
    GHC.Classes.Eq (Data.Some.Some Duckling.Types.Dimension)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Duckling.Api.Tests.$s$fEqSome -}
52a9153a18491e9d0a41b3f9d44c6ee5
  $s$fEq[]_$s$fEq[]_$c/= ::
    [Duckling.Types.ResolvedToken]
    -> [Duckling.Types.ResolvedToken] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [Duckling.Types.ResolvedToken])
                   (y :: [Duckling.Types.ResolvedToken]) ->
                 GHC.Classes.not
                   (GHC.Classes.$fEq[]_$c==
                      @ Duckling.Types.ResolvedToken
                      Duckling.Types.$fEqResolvedToken
                      x
                      y)) -}
0eb36aa9993745172865d94587c10179
  $s$fEq[]_$s$fEq[]_$c/=1 ::
    [Data.Some.Some Duckling.Types.Dimension]
    -> [Data.Some.Some Duckling.Types.Dimension] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [Data.Some.Some Duckling.Types.Dimension])
                   (y :: [Data.Some.Some Duckling.Types.Dimension]) ->
                 GHC.Classes.not
                   (GHC.Classes.$fEq[]_$c==
                      @ (Data.Some.Some Duckling.Types.Dimension)
                      Duckling.Api.Tests.$s$fEq[]2
                      x
                      y)) -}
19d5bff441b1a997e4f242dca7a52d2f
  $s$fShowHashSet ::
    GHC.Show.Show
      (Data.HashSet.HashSet (Data.Some.Some Duckling.Types.Dimension))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.HashSet.HashSet (Data.Some.Some Duckling.Types.Dimension))
                  (Data.HashSet.$fShowHashSet_$cshowsPrec
                     @ (Data.Some.Some Duckling.Types.Dimension)
                     Duckling.Api.Tests.$s$fShowHashSet1)
                  Duckling.Api.Tests.$s$fShowHashSet_$s$fShowHashSet_$cshow
                  Duckling.Api.Tests.$s$fShowHashSet_$s$fShowHashSet_$cshowList -}
bb3a86af960d38719d2baf399ad3e2ce
  $s$fShowHashSet1 ::
    GHC.Show.Show (Data.Some.Some Duckling.Types.Dimension)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Duckling.Api.Tests.$s$fShowHashSet_$s$fShowSome -}
4b856c4192d730a98057025a318a83e0
  $s$fShowHashSet_$s$fShowHashSet_$cshow ::
    Data.HashSet.HashSet (Data.Some.Some Duckling.Types.Dimension)
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.HashSet.HashSet
                           (Data.Some.Some Duckling.Types.Dimension)) ->
                 Data.HashSet.$fShowHashSet_$cshowsPrec
                   @ (Data.Some.Some Duckling.Types.Dimension)
                   Duckling.Api.Tests.$s$fShowHashSet1
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
f3d00370d3d211ba426139b05c0b4643
  $s$fShowHashSet_$s$fShowHashSet_$cshowList ::
    [Data.HashSet.HashSet (Data.Some.Some Duckling.Types.Dimension)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Data.HashSet.HashSet
                             (Data.Some.Some Duckling.Types.Dimension)])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.HashSet.HashSet (Data.Some.Some Duckling.Types.Dimension))
                   (Data.HashSet.$fShowHashSet_$cshowsPrec
                      @ (Data.Some.Some Duckling.Types.Dimension)
                      Duckling.Api.Tests.$s$fShowHashSet1
                      GHC.Show.shows22)
                   ls
                   s) -}
e8ec611dd5fd044c183b37e84334d8e1
  $s$fShowHashSet_$s$fShowSome ::
    GHC.Show.Show (Data.Some.Some Duckling.Types.Dimension)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Some.Some Duckling.Types.Dimension)
                  (Data.Some.$fShowSome_$cshowsPrec
                     @ *
                     @ Duckling.Types.Dimension
                     Duckling.Types.$fGShowTYPEDimension_$cgshowsPrec
                       `cast`
                     (Sym (Data.GADT.Show.N:GShow[0]
                               <*>_N <Duckling.Types.Dimension>_N)))
                  Duckling.Api.Tests.$s$fShowHashSet_$s$fShowSome_$cshow
                  Duckling.Api.Tests.$s$fShowHashSet_$s$fShowSome_$cshowList -}
0e620e4062a0d1478e17cb765c4a492b
  $s$fShowHashSet_$s$fShowSome_$cshow ::
    Data.Some.Some Duckling.Types.Dimension -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Some.Some Duckling.Types.Dimension) ->
                 case x of wild { Data.Some.This t0 thing ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n Data.Some.$fReadSome6)
                   (Duckling.Types.$fGShowTYPEDimension_$cgshowsPrec
                      @ t0
                      Data.Some.$fReadSome4
                      thing
                      (GHC.Types.[] @ GHC.Types.Char)) }) -}
4bfc675bb5c5441ec29d4ee5d94085b4
  $s$fShowHashSet_$s$fShowSome_$cshowList ::
    [Data.Some.Some Duckling.Types.Dimension] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Data.Some.Some Duckling.Types.Dimension])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Some.Some Duckling.Types.Dimension)
                   (Data.Some.$fShowSome_$cshowsPrec
                      @ *
                      @ Duckling.Types.Dimension
                      Duckling.Types.$fGShowTYPEDimension_$cgshowsPrec
                        `cast`
                      (Sym (Data.GADT.Show.N:GShow[0]
                                <*>_N <Duckling.Types.Dimension>_N))
                      GHC.Show.shows22)
                   ls
                   s) -}
59f8b684b622f745b6dd4276e0696215
  $s$fShow[] :: GHC.Show.Show [Duckling.Types.ResolvedToken]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Duckling.Types.ResolvedToken]
                  Duckling.Api.Tests.$s$fShow[]_$s$fShow[]_$cshowsPrec
                  Duckling.Api.Tests.$s$fShow[]_$s$fShow[]_$cshow
                  Duckling.Api.Tests.$s$fShow[]_$s$fShow[]_$cshowList -}
3e6d81074b45c4a5a608db68a738e490
  $s$fShow[]1 ::
    GHC.Show.Show [Data.Some.Some Duckling.Types.Dimension]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Data.Some.Some Duckling.Types.Dimension]
                  Duckling.Api.Tests.$s$fShow[]_$s$fShow[]_$cshowsPrec1
                  Duckling.Api.Tests.$s$fShow[]2
                  Duckling.Api.Tests.$s$fShow[]_$s$fShow[]_$cshowList1 -}
a129bb2121f7f1122638fdd8d30c3363
  $s$fShow[]2 ::
    [Data.Some.Some Duckling.Types.Dimension] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: [Data.Some.Some Duckling.Types.Dimension]) ->
                 GHC.Show.showList__
                   @ (Data.Some.Some Duckling.Types.Dimension)
                   Duckling.Api.Tests.$s$fShow[]3
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
55ce186c16b2b8f38a453589ddd53deb
  $s$fShow[]3 ::
    Data.Some.Some Duckling.Types.Dimension -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w2 :: Data.Some.Some Duckling.Types.Dimension) ->
                 Data.Some.$w$cshowsPrec
                   @ *
                   @ Duckling.Types.Dimension
                   Duckling.Types.$fGShowTYPEDimension_$cshowsPrec
                     `cast`
                   (Sym (Data.GADT.Show.N:GShow[0]
                             <*>_N <Duckling.Types.Dimension>_N))
                   0#
                   w2) -}
b35211bfd4a7496c7b1ee5243e93b274
  $s$fShow[]_$s$fShow[]_$cshow ::
    [Duckling.Types.ResolvedToken] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Duckling.Types.ResolvedToken]) ->
                 Duckling.Types.$fShowResolvedToken_$cshowList
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
e4e66500e81b886489728273cd52dba9
  $s$fShow[]_$s$fShow[]_$cshowList ::
    [[Duckling.Types.ResolvedToken]] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [[Duckling.Types.ResolvedToken]])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ [Duckling.Types.ResolvedToken]
                   Duckling.Types.$fShowResolvedToken_$cshowList
                   eta
                   eta1) -}
96009b74493f3afc553df8ce12c7c4db
  $s$fShow[]_$s$fShow[]_$cshowList1 ::
    [[Data.Some.Some Duckling.Types.Dimension]] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [[Data.Some.Some Duckling.Types.Dimension]])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ [Data.Some.Some Duckling.Types.Dimension]
                   Duckling.Api.Tests.$s$fShowHashSet_$s$fShowSome_$cshowList
                   eta
                   eta1) -}
b40b5fb8853aef65af6f06821c62ccb8
  $s$fShow[]_$s$fShow[]_$cshowsPrec ::
    GHC.Types.Int -> [Duckling.Types.ResolvedToken] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: GHC.Types.Int)
                   (eta :: [Duckling.Types.ResolvedToken])
                   (eta1 :: GHC.Base.String) ->
                 Duckling.Types.$fShowResolvedToken_$cshowList eta eta1) -}
b61d7ca2677162e48f962c2f29de65bd
  $s$fShow[]_$s$fShow[]_$cshowsPrec1 ::
    GHC.Types.Int
    -> [Data.Some.Some Duckling.Types.Dimension] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: GHC.Types.Int)
                   (eta :: [Data.Some.Some Duckling.Types.Dimension])
                   (eta1 :: GHC.Base.String) ->
                 Duckling.Api.Tests.$s$fShowHashSet_$s$fShowSome_$cshowList
                   eta
                   eta1) -}
c42e71d69b9d93b67a7d50dc13e575fe
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Duckling.Api.Tests.$trModule2
                   Duckling.Api.Tests.$trModule1) -}
17fd00ccae0ca729f84726c004a418cd
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Duckling.Api.Tests"#) -}
24d7eaabd81277cf35922f9e0e56e833
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
8872febba13b730d191787cd91a8f22e
  $wf ::
    Data.Text.Internal.Text
    -> [Data.Some.Some Duckling.Types.Dimension]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U(U,U,U)><L,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Data.Text.Internal.Text)
                   (ww1 :: [Data.Some.Some Duckling.Types.Dimension])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   tokens :: [Duckling.Types.ResolvedToken]
                   = Duckling.Api.$wanalyze
                       ww
                       Duckling.Testing.Types.testContext2
                         `cast`
                       (Sym (Duckling.Resolve.N:DucklingTime[0]))
                       Duckling.Testing.Types.testContext1
                       GHC.Types.False `cast` (Sym (Duckling.Resolve.N:Options[0]))
                       (Duckling.Api.Tests.tests_go1
                          ww1
                          (Data.HashMap.Base.Empty
                             @ (Data.Some.Some Duckling.Types.Dimension)
                             @ ()))
                         `cast`
                       (Sym (Data.HashSet.N:HashSet[0]
                                 <Data.Some.Some Duckling.Types.Dimension>_N))
                 } in
                 Test.Tasty.HUnit.Orig.@=?2
                   @ [Duckling.Types.ResolvedToken]
                   Duckling.Api.Tests.$s$fEq[]
                   Duckling.Api.Tests.$s$fShow[]
                   Duckling.Api.Tests.tests45
                   (GHC.Base.map
                      @ (Duckling.Types.Range, Duckling.Types.ResolvedToken)
                      @ Duckling.Types.ResolvedToken
                      (Data.Tuple.snd
                         @ Duckling.Types.Range
                         @ Duckling.Types.ResolvedToken)
                      (Data.OldList.sortBy
                         @ (Duckling.Types.Range, Duckling.Types.ResolvedToken)
                         Duckling.Api.Tests.tests44
                         (GHC.Base.map
                            @ Duckling.Types.ResolvedToken
                            @ (Duckling.Types.Range, Duckling.Types.ResolvedToken)
                            Duckling.Api.Tests.tests43
                            tokens)))
                   tokens
                   w) -}
621d6b04aa68861e644d3f84db8ef077
  $wf1 ::
    Data.Text.Internal.Text
    -> [Data.Some.Some Duckling.Types.Dimension]
    -> [Data.Some.Some Duckling.Types.Dimension]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U(U,U,U)><L,1*U><L,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: Data.Text.Internal.Text)
                   (ww1 :: [Data.Some.Some Duckling.Types.Dimension])
                   (ww2 :: [Data.Some.Some Duckling.Types.Dimension])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Test.Tasty.HUnit.Orig.@=?2
                   @ [Data.Some.Some Duckling.Types.Dimension]
                   Duckling.Api.Tests.$s$fEq[]1
                   Duckling.Api.Tests.$s$fShow[]1
                   (GHC.CString.unpackAppendCString#
                      "wrong winners for "#
                      (Data.Text.Show.$fShowText_$cshow ww))
                   ww2
                   (GHC.Base.map
                      @ Duckling.Types.ResolvedToken
                      @ (Data.Some.Some Duckling.Types.Dimension)
                      Duckling.Api.Tests.tests66
                      (Duckling.Api.$wanalyze
                         ww
                         Duckling.Testing.Types.testContext2
                           `cast`
                         (Sym (Duckling.Resolve.N:DucklingTime[0]))
                         Duckling.Testing.Types.testContext1
                         GHC.Types.False `cast` (Sym (Duckling.Resolve.N:Options[0]))
                         (Duckling.Api.Tests.tests_go2
                            ww1
                            (Data.HashMap.Base.Empty
                               @ (Data.Some.Some Duckling.Types.Dimension)
                               @ ()))
                           `cast`
                         (Sym (Data.HashSet.N:HashSet[0]
                                   <Data.Some.Some Duckling.Types.Dimension>_N))))
                   w) -}
29ea8120ee94821b21d9689329d8e067
  $wpoly_go1 ::
    GHC.Prim.Word#
    -> Duckling.Locale.Lang
    -> GHC.Prim.Int#
    -> Data.HashMap.Base.HashMap Duckling.Locale.Lang v
    -> GHC.Base.Maybe v
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><S,1*H><L,U><S,1*U>,
     Inline: [0] -}
13f8cd1df2dbe164ce42c843f9c03b35
  tests :: Test.Tasty.Core.TestTree
  {- Strictness: m2,
     Unfolding: (Test.Tasty.Core.TestGroup
                   Duckling.Api.Tests.tests87
                   Duckling.Api.Tests.tests1) -}
9354558b678425236437e559f8620530
  tests1 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Duckling.Api.Tests.tests69
                   Duckling.Api.Tests.tests2) -}
4a9260f5048b9c4eb37f16eb3b38ac58
  tests10 :: Test.Tasty.HUnit.Orig.HUnitFailure
  {- Unfolding: (Test.Tasty.HUnit.Orig.HUnitFailure
                   Duckling.Api.Tests.tests11) -}
80281ebc0e3cf66015363c31b1c557df
  tests11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "no dimensions for "#
                   Duckling.Locale.$fReadLang4) -}
84e0bebb86929bd25afe79f4a21d735e
  tests12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Supported Dimensions Test"#) -}
adc6fe6f3702805dde17d97ed4edc036
  tests13 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Duckling.Api.Tests.tests33
                   Duckling.Api.Tests.tests14
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
841b5987b51bccde294d2ca01062f3ec
  tests14 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta1 :: GHC.Prim.State#
                              GHC.Prim.RealWorld)[OneShot] ->
                 case Duckling.Testing.Asserts.$wanalyzedFirstTest
                        Duckling.Testing.Types.testContext2
                          `cast`
                        (Sym (Duckling.Resolve.N:DucklingTime[0]))
                        Duckling.Testing.Types.testContext1
                        GHC.Types.False `cast` (Sym (Duckling.Resolve.N:Options[0]))
                        Duckling.Api.Tests.tests32
                        Duckling.Api.Tests.tests30
                        Duckling.Api.Tests.tests29
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case Duckling.Testing.Asserts.$wanalyzedFirstTest
                        Duckling.Testing.Types.testContext2
                          `cast`
                        (Sym (Duckling.Resolve.N:DucklingTime[0]))
                        Duckling.Testing.Types.testContext1
                        GHC.Types.False `cast` (Sym (Duckling.Resolve.N:Options[0]))
                        Duckling.Api.Tests.tests28
                        Duckling.Api.Tests.tests30
                        Duckling.Api.Tests.tests27
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Duckling.Testing.Asserts.$wanalyzedFirstTest
                        Duckling.Testing.Types.testContext2
                          `cast`
                        (Sym (Duckling.Resolve.N:DucklingTime[0]))
                        Duckling.Testing.Types.testContext1
                        GHC.Types.False `cast` (Sym (Duckling.Resolve.N:Options[0]))
                        Duckling.Api.Tests.tests26
                        Duckling.Api.Tests.tests30
                        Duckling.Api.Tests.tests27
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case Duckling.Testing.Asserts.$wanalyzedFirstTest
                        Duckling.Testing.Types.testContext2
                          `cast`
                        (Sym (Duckling.Resolve.N:DucklingTime[0]))
                        Duckling.Testing.Types.testContext1
                        GHC.Types.False `cast` (Sym (Duckling.Resolve.N:Options[0]))
                        Duckling.Api.Tests.tests25
                        Duckling.Api.Tests.tests23
                        Duckling.Api.Tests.tests22
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case Duckling.Testing.Asserts.$wanalyzedFirstTest
                        Duckling.Testing.Types.testContext2
                          `cast`
                        (Sym (Duckling.Resolve.N:DucklingTime[0]))
                        Duckling.Testing.Types.testContext1
                        GHC.Types.False `cast` (Sym (Duckling.Resolve.N:Options[0]))
                        Duckling.Api.Tests.tests21
                        Duckling.Api.Tests.tests23
                        Duckling.Api.Tests.tests20
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case Duckling.Testing.Asserts.$wanalyzedFirstTest
                        Duckling.Testing.Types.testContext2
                          `cast`
                        (Sym (Duckling.Resolve.N:DucklingTime[0]))
                        Duckling.Testing.Types.testContext1
                        GHC.Types.False `cast` (Sym (Duckling.Resolve.N:Options[0]))
                        Duckling.Api.Tests.tests19
                        Duckling.Api.Tests.tests23
                        Duckling.Api.Tests.tests22
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 case Duckling.Testing.Asserts.$wanalyzedFirstTest
                        Duckling.Testing.Types.testContext2
                          `cast`
                        (Sym (Duckling.Resolve.N:DucklingTime[0]))
                        Duckling.Testing.Types.testContext1
                        GHC.Types.False `cast` (Sym (Duckling.Resolve.N:Options[0]))
                        Duckling.Api.Tests.tests18
                        Duckling.Api.Tests.tests16
                        Duckling.Api.Tests.tests15
                        ipv10 of ds7 { (#,#) ipv12 ipv13 ->
                 (# ipv12, GHC.Types.[] @ GHC.Types.Char #) } } } } } } }) -}
7ca711f9faefa3845d333a62f501a362
  tests15 ::
    Duckling.Resolve.Context
    -> Duckling.Types.ResolvedToken -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (ds :: Duckling.Resolve.Context)[OneShot]
                   (ds1 :: Duckling.Types.ResolvedToken)[OneShot] ->
                 case ds1 of wild { Duckling.Types.Resolved ds2 ds3 ds4 ds5 ->
                 case ds2 of ww5 { Duckling.Types.Range ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 case ww9 of wild1 {
                   DEFAULT -> GHC.Types.False
                   3#
                   -> case ww7 of wild2 { GHC.Types.I# y ->
                      case y of wild3 {
                        DEFAULT -> GHC.Types.False 5# -> GHC.Types.True } } } } } }) -}
459388cf42a071761e0d236a031fe7ff
  tests16 :: [Data.Some.Some Duckling.Types.Dimension]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.Some.Some Duckling.Types.Dimension)
                   Duckling.Api.Tests.tests17
                   (GHC.Types.[] @ (Data.Some.Some Duckling.Types.Dimension))) -}
673a6a323bb210f99acb239ce2cb15a9
  tests17 :: Data.Some.Some Duckling.Types.Dimension
  {- HasNoCafRefs,
     Unfolding: (Data.Some.This
                   @ *
                   @ Duckling.Types.Dimension
                   @ Duckling.Numeral.Types.NumeralData
                   Duckling.Types.$WNumeral) -}
b733c6e75854e46487c99c7b277d838f
  tests18 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "   42\n\
                   \\n"#) -}
4dbc98ece3685a39af35113233c4fa48
  tests19 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "  \\228\\184\\139\\229\\145\\168 "#) -}
3e36b51eba4a500bcb5c51b4d7382744
  tests2 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Duckling.Api.Tests.tests34
                   Duckling.Api.Tests.tests3) -}
e177f8621d398106efcb07d1da537ae5
  tests20 ::
    Duckling.Resolve.Context
    -> Duckling.Types.ResolvedToken -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (ds :: Duckling.Resolve.Context)[OneShot]
                   (ds1 :: Duckling.Types.ResolvedToken)[OneShot] ->
                 case ds1 of wild { Duckling.Types.Resolved ds2 ds3 ds4 ds5 ->
                 case ds2 of ww5 { Duckling.Types.Range ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 case ww9 of wild1 {
                   DEFAULT -> GHC.Types.False
                   3#
                   -> case ww7 of wild2 { GHC.Types.I# y ->
                      case y of wild3 {
                        DEFAULT -> GHC.Types.False 6# -> GHC.Types.True } } } } } }) -}
25256ffd60688375380db7d90487c126
  tests21 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "   \\230\\152\\159\\230\\156\\159\\228\\184\\128  "#) -}
67aab431c3c1e51658ff42ef54dd8d17
  tests22 ::
    Duckling.Resolve.Context
    -> Duckling.Types.ResolvedToken -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (ds :: Duckling.Resolve.Context)[OneShot]
                   (ds1 :: Duckling.Types.ResolvedToken)[OneShot] ->
                 case ds1 of wild { Duckling.Types.Resolved ds2 ds3 ds4 ds5 ->
                 case ds2 of ww5 { Duckling.Types.Range ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 case ww9 of wild1 {
                   DEFAULT -> GHC.Types.False
                   2#
                   -> case ww7 of wild2 { GHC.Types.I# y ->
                      case y of wild3 {
                        DEFAULT -> GHC.Types.False 4# -> GHC.Types.True } } } } } }) -}
ba8247ebd2295c42ce4ae3eda7cfd167
  tests23 :: [Data.Some.Some Duckling.Types.Dimension]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.Some.Some Duckling.Types.Dimension)
                   Duckling.Api.Tests.tests24
                   (GHC.Types.[] @ (Data.Some.Some Duckling.Types.Dimension))) -}
0081e2d09428ecf3a9a88953af79ab3d
  tests24 :: Data.Some.Some Duckling.Types.Dimension
  {- HasNoCafRefs,
     Unfolding: (Data.Some.This
                   @ *
                   @ Duckling.Types.Dimension
                   @ Duckling.Time.Types.TimeData
                   Duckling.Types.$WTime) -}
df0b20b553d75fd1290db0c07a2b4508
  tests25 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "  \\231\\142\\176\\229\\156\\168"#) -}
3521e79bb4fd643e6637a96cd52e2ba2
  tests26 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# " -3233763377"#) -}
499ace135ec07b14746efbec77062e0c
  tests27 ::
    Duckling.Resolve.Context
    -> Duckling.Types.ResolvedToken -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (ds :: Duckling.Resolve.Context)[OneShot]
                   (ds1 :: Duckling.Types.ResolvedToken)[OneShot] ->
                 case ds1 of wild { Duckling.Types.Resolved ds2 ds3 ds4 ds5 ->
                 case ds2 of ww5 { Duckling.Types.Range ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 case ww9 of wild1 {
                   DEFAULT -> GHC.Types.False
                   2#
                   -> case ww7 of wild2 { GHC.Types.I# y ->
                      case y of wild3 {
                        DEFAULT -> GHC.Types.False 12# -> GHC.Types.True } } } } } }) -}
1d9f625d335c3fc9ea34040630beee0c
  tests28 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "  3233763377  "#) -}
c30d7b11b6dbe262e61cd2b68a6f24c3
  tests29 ::
    Duckling.Resolve.Context
    -> Duckling.Types.ResolvedToken -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (ds :: Duckling.Resolve.Context)[OneShot]
                   (ds1 :: Duckling.Types.ResolvedToken)[OneShot] ->
                 case ds1 of wild { Duckling.Types.Resolved ds2 ds3 ds4 ds5 ->
                 case ds2 of ww5 { Duckling.Types.Range ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 case ww9 of wild1 {
                   DEFAULT -> GHC.Types.False
                   13#
                   -> case ww7 of wild2 { GHC.Types.I# y ->
                      case y of wild3 {
                        DEFAULT -> GHC.Types.False 23# -> GHC.Types.True } } } } } }) -}
d954ab445fd87960d12676b432a36fb5
  tests3 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Duckling.Api.Tests.tests13
                   Duckling.Api.Tests.tests4) -}
f951264b91e72198dc0d75b99edbe1ec
  tests30 :: [Data.Some.Some Duckling.Types.Dimension]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.Some.Some Duckling.Types.Dimension)
                   Duckling.Api.Tests.tests31
                   (GHC.Types.[] @ (Data.Some.Some Duckling.Types.Dimension))) -}
4f987d376ea05e30157bfe36191366b2
  tests31 :: Data.Some.Some Duckling.Types.Dimension
  {- HasNoCafRefs,
     Unfolding: (Data.Some.This
                   @ *
                   @ Duckling.Types.Dimension
                   @ Duckling.PhoneNumber.Types.PhoneNumberData
                   Duckling.Types.$WPhoneNumber) -}
74118543f5444645ded682a1cbf6e853
  tests32 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "order status 3233763377"#) -}
d1ef27097f55e1497a106dc18d2dbfe2
  tests33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Range Tests"#) -}
84ae008391bba9866f04e6464002b42e
  tests34 :: Test.Tasty.Core.TestTree
  {- Strictness: m2,
     Unfolding: (Test.Tasty.Core.TestGroup
                   Duckling.Api.Tests.tests68
                   Duckling.Api.Tests.tests35) -}
310e02df5be7746711fe9eb1df0bc465
  tests35 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Duckling.Api.Tests.tests47
                   Duckling.Api.Tests.tests36) -}
2bf66ed21f2987f1e5d608ba04b04703
  tests36 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Duckling.Api.Tests.tests37
                   (GHC.Types.[] @ Test.Tasty.Core.TestTree)) -}
4b4afc372ef6e23a1dd73173b58c9e7a
  tests37 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Duckling.Api.Tests.tests46
                   Duckling.Api.Tests.tests38
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
e19e5de0f75fde81ef1f4ebeb74451d3
  tests38 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta1 :: GHC.Prim.State#
                              GHC.Prim.RealWorld)[OneShot] ->
                 case Duckling.Api.Tests.$wf
                        Duckling.Api.Tests.tests42
                        Duckling.Api.Tests.tests23
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case Duckling.Api.Tests.$wf
                        Duckling.Api.Tests.tests41
                        Duckling.Api.Tests.tests16
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Duckling.Api.Tests.$wf
                        Duckling.Api.Tests.tests40
                        Duckling.Api.Tests.tests39
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 (# ipv4, GHC.Types.[] @ GHC.Types.Char #) } } }) -}
3817713456dc8908e3db611053c55bf0
  tests39 :: [Data.Some.Some Duckling.Types.Dimension]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.Some.Some Duckling.Types.Dimension)
                   Duckling.Api.Tests.tests17
                   Duckling.Api.Tests.tests23) -}
cda833ff65f46b1a97effd7319c57f15
  tests4 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Duckling.Api.Tests.tests5
                   (GHC.Types.[] @ Test.Tasty.Core.TestTree)) -}
344d6751d4cc537f6fb9e07d842c31d1
  tests40 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "42 today 23 tomorrow"#) -}
505762d79d4b8a18caa79cd4891046aa
  tests41 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "321 12 3456 ... 7"#) -}
ab88837331894ca58c6add95675009c5
  tests42 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "tomorrow at 5PM or 8PM"#) -}
7ad63bd1eb5514502a4319e17b63534e
  tests43 ::
    Duckling.Types.ResolvedToken
    -> (Duckling.Types.Range, Duckling.Types.ResolvedToken)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (x :: Duckling.Types.ResolvedToken) ->
                 case x of wild { Duckling.Types.Resolved ds1 ds2 ds3 ds4 ->
                 case ds1 of y { Duckling.Types.Range ipv ipv1 -> (y, wild) } }) -}
a899f90ef181ec56662c958059156919
  tests44 ::
    (Duckling.Types.Range, Duckling.Types.ResolvedToken)
    -> (Duckling.Types.Range, Duckling.Types.ResolvedToken)
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (x :: (Duckling.Types.Range,
                          Duckling.Types.ResolvedToken))
                   (y :: (Duckling.Types.Range,
                          Duckling.Types.ResolvedToken))[OneShot] ->
                 case x of wild { (,) x1 ds1 ->
                 case y of wild1 { (,) x2 ds2 ->
                 Duckling.Types.$fOrdRange_$ccompare x1 x2 } }) -}
4226952289040e287e547d14abcb988b
  tests45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "wrong ordering"#) -}
a38be8ce4a40ffe9305c5c2b76e9ba72
  tests46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Rank Order Tests"#) -}
15c1289c3f071092953d03a5f8fc700f
  tests47 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Duckling.Api.Tests.tests67
                   Duckling.Api.Tests.tests48
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
af77832f26ab38bd5c8f40725602b6dc
  tests48 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta1 :: GHC.Prim.State#
                              GHC.Prim.RealWorld)[OneShot] ->
                 case Duckling.Api.Tests.$wf1
                        Duckling.Api.Tests.tests65
                        Duckling.Api.Tests.tests64
                        Duckling.Api.Tests.tests63
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case Duckling.Api.Tests.$wf1
                        Duckling.Api.Tests.tests62
                        Duckling.Api.Tests.tests59
                        Duckling.Api.Tests.tests55
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Duckling.Api.Tests.$wf1
                        Duckling.Api.Tests.tests54
                        Duckling.Api.Tests.tests39
                        Duckling.Api.Tests.tests52
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case Duckling.Api.Tests.$wf1
                        Duckling.Api.Tests.tests53
                        Duckling.Api.Tests.tests39
                        Duckling.Api.Tests.tests51
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case Duckling.Api.Tests.$wf1
                        Duckling.Api.Tests.tests50
                        Duckling.Api.Tests.tests23
                        Duckling.Api.Tests.tests23
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case Duckling.Api.Tests.$wf1
                        Duckling.Api.Tests.tests50
                        Duckling.Api.Tests.tests49
                        Duckling.Api.Tests.tests23
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 case Duckling.Api.Tests.$wf1
                        Duckling.Api.Tests.tests50
                        (GHC.Types.[] @ (Data.Some.Some Duckling.Types.Dimension))
                        Duckling.Api.Tests.tests23
                        ipv10 of ds7 { (#,#) ipv12 ipv13 ->
                 (# ipv12, GHC.Types.[] @ GHC.Types.Char #) } } } } } } }) -}
262476651c05a3415d5b38fea4cb78bb
  tests49 :: [Data.Some.Some Duckling.Types.Dimension]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.Some.Some Duckling.Types.Dimension)
                   Duckling.Api.Tests.tests24
                   Duckling.Api.Tests.tests16) -}
bb5871f5ce8ccf12df3631da7df5d0cf
  tests5 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Duckling.Api.Tests.tests12
                   Duckling.Api.Tests.tests6
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
814851fc565d6f0fbe59a0d95b96d847
  tests50 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\\229\\144\\142\\229\\164\\169 5pm"#) -}
663ba05cd2e473e30711ba4b647cf0bc
  tests51 :: [Data.Some.Some Duckling.Types.Dimension]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.Some.Some Duckling.Types.Dimension)
                   Duckling.Api.Tests.tests24
                   Duckling.Api.Tests.tests52) -}
178a52d6faf56aadfb20c23a1a8110a0
  tests52 :: [Data.Some.Some Duckling.Types.Dimension]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.Some.Some Duckling.Types.Dimension)
                   Duckling.Api.Tests.tests24
                   Duckling.Api.Tests.tests23) -}
451150a1d1560460e0252a15e32662a5
  tests53 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\\230\\152\\159\\230\\156\\159\\228\\186\\140\\230\\136\\150\\232\\128\\133\\230\\152\\159\\230\\156\\159\\228\\184\\137\\230\\136\\150\\232\\128\\133\\228\\184\\139\\229\\145\\168"#) -}
6ee2f83e49f3cc7f2f11d4a8d53cebbf
  tests54 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\\228\\187\\138\\229\\164\\169\\229\\183\\165\\228\\189\\156...\\229\\146\\140\\230\\152\\142\\229\\164\\1699pm"#) -}
ab8da93e82e9dfae782895950bbcae73
  tests55 :: [Data.Some.Some Duckling.Types.Dimension]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.Some.Some Duckling.Types.Dimension)
                   Duckling.Api.Tests.tests58
                   Duckling.Api.Tests.tests56) -}
0e848cdbe72a2459d2e492c74b765b40
  tests56 :: [Data.Some.Some Duckling.Types.Dimension]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.Some.Some Duckling.Types.Dimension)
                   Duckling.Api.Tests.tests57
                   (GHC.Types.[] @ (Data.Some.Some Duckling.Types.Dimension))) -}
cc8e373419e6ce4156e4f56db2fd9db8
  tests57 :: Data.Some.Some Duckling.Types.Dimension
  {- HasNoCafRefs,
     Unfolding: (Data.Some.This
                   @ *
                   @ Duckling.Types.Dimension
                   @ Duckling.Temperature.Types.TemperatureData
                   Duckling.Types.$WTemperature) -}
24e6f19ef15d3daf530d9363a2ba4694
  tests58 :: Data.Some.Some Duckling.Types.Dimension
  {- HasNoCafRefs,
     Unfolding: (Data.Some.This
                   @ *
                   @ Duckling.Types.Dimension
                   @ Duckling.Duration.Types.DurationData
                   Duckling.Types.$WDuration) -}
332b6d4199dc7680aa01cd20862bb7d8
  tests59 :: [Data.Some.Some Duckling.Types.Dimension]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.Some.Some Duckling.Types.Dimension)
                   Duckling.Api.Tests.tests17
                   Duckling.Api.Tests.tests60) -}
b53472a3bb885306a9d1845c0a09953a
  tests6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta1 :: GHC.Prim.State#
                              GHC.Prim.RealWorld)[OneShot] ->
                 case Duckling.Api.Tests.$wpoly_go1
                        @ [Data.Some.Some Duckling.Types.Dimension]
                        839657738087498284##
                        Duckling.Locale.ZH
                        0#
                        Duckling.Api.supportedDimensions of wild {
                   GHC.Base.Nothing
                   -> case GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ ()
                             Duckling.Api.Tests.tests9
                             eta1
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                      of {}
                   GHC.Base.Just actual
                   -> case Test.Tasty.HUnit.Orig.@=?2
                             @ (Data.HashSet.HashSet (Data.Some.Some Duckling.Types.Dimension))
                             Duckling.Api.Tests.$s$fEqHashSet
                             Duckling.Api.Tests.$s$fShowHashSet
                             Duckling.Api.Tests.tests8
                             Duckling.Api.Tests.tests7
                             (Duckling.Api.Tests.tests_go
                                actual
                                (Data.HashMap.Base.Empty
                                   @ (Data.Some.Some Duckling.Types.Dimension)
                                   @ ()))
                               `cast`
                             (Sym (Data.HashSet.N:HashSet[0]
                                       <Data.Some.Some Duckling.Types.Dimension>_N))
                             eta1 of ds1 { (#,#) ipv ipv1 ->
                      (# ipv, GHC.Types.[] @ GHC.Types.Char #) } }) -}
fa7cc51aac1720bb365c5c83bf6e8cd4
  tests60 :: [Data.Some.Some Duckling.Types.Dimension]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.Some.Some Duckling.Types.Dimension)
                   Duckling.Api.Tests.tests57
                   Duckling.Api.Tests.tests61) -}
44812bc3eb7bdb1f1242c72a0a0b214a
  tests61 :: [Data.Some.Some Duckling.Types.Dimension]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.Some.Some Duckling.Types.Dimension)
                   Duckling.Api.Tests.tests58
                   Duckling.Api.Tests.tests23) -}
4b0f8e8e5e657b47822ec6ff38ce6fe1
  tests62 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "2\\229\\136\\134\\233\\146\\159, \\229\\164\\167\\230\\166\\130 42 \\229\\186\\166"#) -}
4a5272c6e99a30718291bc0236a8f60d
  tests63 :: [Data.Some.Some Duckling.Types.Dimension]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.Some.Some Duckling.Types.Dimension)
                   Duckling.Api.Tests.tests58
                   (GHC.Types.[] @ (Data.Some.Some Duckling.Types.Dimension))) -}
7f41e915ec59de6a1c8274921345db04
  tests64 :: [Data.Some.Some Duckling.Types.Dimension]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.Some.Some Duckling.Types.Dimension)
                   Duckling.Api.Tests.tests17
                   Duckling.Api.Tests.tests61) -}
7b70cf81f8917b1f438eec831876bf82
  tests65 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "2\\229\\136\\134\\233\\146\\159"#) -}
0e888163417dcbf3391e9f2263abf262
  tests66 ::
    Duckling.Types.ResolvedToken
    -> Data.Some.Some Duckling.Types.Dimension
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS(LSLL)LL),1*U(A,1*U(A,1*U,A,A),A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Duckling.Types.ResolvedToken) ->
                 case ds of wild { Duckling.Types.Resolved ds1 ds2 ds3 ds4 ->
                 case ds2 of wild1 { Duckling.Types.Node ds5 ds6 ds7 ds8 ->
                 case ds6 of wild2 { Duckling.Types.Token a $dResolve $dEq $dHashable $dShow $dNFData d ds9 ->
                 Data.Some.$WThis @ * @ Duckling.Types.Dimension @ a d } } }) -}
60ba2fde0a29a0108f4668b205807d18
  tests67 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Rank Filter Tests"#) -}
6bc95fa46c469b745f7cec24f0eeaa48
  tests68 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Rank Tests"#) -}
c7a4e6b9a3e32492b0d41e20a8a44194
  tests69 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Duckling.Api.Tests.tests86
                   Duckling.Api.Tests.tests70
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
08990c03141488e676df17eee5efff9a
  tests7 ::
    Data.HashSet.HashSet (Data.Some.Some Duckling.Types.Dimension)
fc6bebdfa3333f3e2244a01cfc28c654
  tests70 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta1 :: GHC.Prim.State#
                              GHC.Prim.RealWorld)[OneShot] ->
                 case Duckling.Api.$wparse
                        Duckling.Api.Tests.tests85
                        Duckling.Testing.Types.testContext2
                          `cast`
                        (Sym (Duckling.Resolve.N:DucklingTime[0]))
                        Duckling.Testing.Types.testContext1
                        GHC.Types.False `cast` (Sym (Duckling.Resolve.N:Options[0]))
                        Duckling.Api.Tests.tests16 of wild {
                   []
                   -> case GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ ()
                             Duckling.Api.Tests.tests82
                             eta1
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                      of {}
                   : ds ds1
                   -> case ds of wild1 { Duckling.Types.Entity dim body ds2 start end ds3 ds4 ->
                      case ds2 of wild2 { Duckling.Types.RVal a $dResolve $dEq $dShow $dToJSON ds5 v ->
                      case Test.Tasty.HUnit.Orig.@=?2
                             @ Data.Text.Internal.Text
                             Data.Text.$fEqText
                             Data.Text.Show.$fShowText
                             Duckling.Api.Tests.tests81
                             Duckling.Api.Tests.tests80
                             dim
                             eta1 of ds6 { (#,#) ipv ipv1 ->
                      case Test.Tasty.HUnit.Orig.@=?2
                             @ Data.Text.Internal.Text
                             Data.Text.$fEqText
                             Data.Text.Show.$fShowText
                             Duckling.Api.Tests.tests79
                             Duckling.Api.Tests.tests78
                             body
                             ipv of ds7 { (#,#) ipv2 ipv3 ->
                      case Test.Tasty.HUnit.Orig.@=?2
                             @ Data.Text.Internal.Text
                             Data.Text.$fEqText
                             Data.Text.Show.$fShowText
                             Duckling.Api.Tests.tests77
                             Duckling.Api.Tests.tests75
                             (Duckling.Types.toJText
                                @ (Duckling.Resolve.ResolvedValue a)
                                (Duckling.Resolve.$p3Resolve @ a $dResolve)
                                v)
                             ipv2 of ds8 { (#,#) ipv4 ipv5 ->
                      case Test.Tasty.HUnit.Orig.@=?2
                             @ GHC.Types.Int
                             GHC.Classes.$fEqInt
                             GHC.Show.$fShowInt
                             Duckling.Api.Tests.tests74
                             Duckling.Api.Tests.tests73
                             start
                             ipv4 of ds9 { (#,#) ipv6 ipv7 ->
                      case Test.Tasty.HUnit.Orig.@=?2
                             @ GHC.Types.Int
                             GHC.Classes.$fEqInt
                             GHC.Show.$fShowInt
                             Duckling.Api.Tests.tests72
                             Duckling.Api.Tests.tests71
                             end
                             ipv6 of ds10 { (#,#) ipv8 ipv9 ->
                      (# ipv8, GHC.Types.[] @ GHC.Types.Char #) } } } } } } } }) -}
6c8841d1b8407f1de27c922d68b22fad
  tests71 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 6#) -}
1831012d49a3d792c7ca327e4477e894
  tests72 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "end"#) -}
964ce3556528865c277fb3c356e57661
  tests73 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4#) -}
4eaa40fd8dfd8523d84bff7b518be51c
  tests74 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "start"#) -}
a124a28e8d886891eb21077c08a78e4f
  tests75 :: Data.Text.Internal.Text
  {- Unfolding: (Duckling.Types.toJText
                   @ Duckling.Numeral.Types.NumeralValue
                   Duckling.Numeral.Types.$fToJSONNumeralValue
                   Duckling.Api.Tests.tests76
                     `cast`
                   (Sym (Duckling.Numeral.Types.N:NumeralValue[0]))) -}
18582931cd62b8441f988b4d01365483
  tests76 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 42.0##) -}
933f0e09f5b5a056387e62d66f170b96
  tests77 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "value"#) -}
5c0b2fd3dfb899bea59704c27bfbc9d1
  tests78 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "42"#) -}
2f087709bf75aaf896f2af2caeebca03
  tests79 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "body"#) -}
de66164bd8655f1f8a6f72048cf163e0
  tests8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "wrong dimensions for "#
                   Duckling.Locale.$fReadLang4) -}
23b822e02639002ed2c3a055b0aac875
  tests80 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "number"#) -}
a788f27884e8bab7bf49f0863749428b
  tests81 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "dim"#) -}
94cdaa4fd6a4e76a100f685214312feb
  tests82 :: GHC.Exception.SomeException
  {- Unfolding: (Test.Tasty.HUnit.Orig.$fAssertableBool_$ctoException
                   Duckling.Api.Tests.tests83) -}
ded69c60ab04e01192fb7d7875634289
  tests83 :: Test.Tasty.HUnit.Orig.HUnitFailure
  {- Unfolding: (Test.Tasty.HUnit.Orig.HUnitFailure
                   Duckling.Api.Tests.tests84) -}
d6edde3b473dcb4f3a07b9a64a1f2db3
  tests84 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "empty result"#) -}
684eefba7f30dd81d511b39271fd2029
  tests85 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "hey 42 there"#) -}
69bf1fb192661925081423506bfaa89b
  tests86 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Parse Test"#) -}
1f4fd1e716c7343415b1034ad7162bcd
  tests87 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "API Tests"#) -}
6e5bbe1eaecdb33b84b3fa11cb049769
  tests9 :: GHC.Exception.SomeException
  {- Unfolding: (Test.Tasty.HUnit.Orig.$fAssertableBool_$ctoException
                   Duckling.Api.Tests.tests10) -}
0c71bf3ea4453a0461d3443d4f680f8e
  tests_go ::
    [Data.Some.Some Duckling.Types.Dimension]
    -> Data.HashMap.Base.HashMap
         (Data.Some.Some Duckling.Types.Dimension) ()
    -> Data.HashMap.Base.HashMap
         (Data.Some.Some Duckling.Types.Dimension) ()
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
62b4c657aac6cc16dcee4b4a41b25905
  tests_go1 ::
    [Data.Some.Some Duckling.Types.Dimension]
    -> Data.HashMap.Base.HashMap
         (Data.Some.Some Duckling.Types.Dimension) ()
    -> Data.HashMap.Base.HashMap
         (Data.Some.Some Duckling.Types.Dimension) ()
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
51522d0f12c2ae3422a8489b9c4a85ea
  tests_go2 ::
    [Data.Some.Some Duckling.Types.Dimension]
    -> Data.HashMap.Base.HashMap
         (Data.Some.Some Duckling.Types.Dimension) ()
    -> Data.HashMap.Base.HashMap
         (Data.Some.Some Duckling.Types.Dimension) ()
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
"SPEC/Duckling.Api.Tests $fEqHashSet @ (Some Dimension)" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                                    (Data.Some.Some
                                                                                       Duckling.Types.Dimension))
  Data.HashSet.$fEqHashSet @ (Data.Some.Some
                                Duckling.Types.Dimension)
                           $dEq
  = Duckling.Api.Tests.$s$fEqHashSet
"SPEC/Duckling.Api.Tests $fEqHashSet_$c/= @ (Some Dimension)" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                                         (Data.Some.Some
                                                                                            Duckling.Types.Dimension))
  Data.HashSet.$fEqHashSet_$c/= @ (Data.Some.Some
                                     Duckling.Types.Dimension)
                                $dEq
  = Duckling.Api.Tests.$s$fEqHashSet_$s$fEqHashSet_$c/=
"SPEC/Duckling.Api.Tests $fEqHashSet_$c== @ (Some Dimension)" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                                         (Data.Some.Some
                                                                                            Duckling.Types.Dimension))
  Data.HashSet.$fEqHashSet_$c== @ (Data.Some.Some
                                     Duckling.Types.Dimension)
                                $dEq
  = Duckling.Api.Tests.$s$fEqHashSet_$s$fEqHashSet_$c==
"SPEC/Duckling.Api.Tests $fEqSome @ * @ Dimension" [ALWAYS] forall ($dGEq :: Data.GADT.Compare.GEq
                                                                               Duckling.Types.Dimension)
  Data.Some.$fEqSome @ * @ Duckling.Types.Dimension $dGEq
  = Duckling.Api.Tests.$s$fEqSome
"SPEC/Duckling.Api.Tests $fEqSome_$c/= @ * @ Dimension" [ALWAYS] forall ($dGEq :: Data.GADT.Compare.GEq
                                                                                    Duckling.Types.Dimension)
  Data.Some.$fEqSome_$c/= @ * @ Duckling.Types.Dimension $dGEq
  = Duckling.Api.Tests.$s$fEqSome_$s$fEqSome_$c/=
"SPEC/Duckling.Api.Tests $fEqSome_$c== @ * @ Dimension" [ALWAYS] forall ($dGEq :: Data.GADT.Compare.GEq
                                                                                    Duckling.Types.Dimension)
  Data.Some.$fEqSome_$c== @ * @ Duckling.Types.Dimension $dGEq
  = Duckling.Api.Tests.$s$fEqHashSet_$s$fEqSome_$c==
"SPEC/Duckling.Api.Tests $fEq[] @ (Some Dimension)" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                               (Data.Some.Some
                                                                                  Duckling.Types.Dimension))
  GHC.Classes.$fEq[] @ (Data.Some.Some Duckling.Types.Dimension) $dEq
  = Duckling.Api.Tests.$s$fEq[]1
"SPEC/Duckling.Api.Tests $fEq[] @ ResolvedToken" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                            Duckling.Types.ResolvedToken)
  GHC.Classes.$fEq[] @ Duckling.Types.ResolvedToken $dEq
  = Duckling.Api.Tests.$s$fEq[]
"SPEC/Duckling.Api.Tests $fEq[]_$c/= @ (Some Dimension)" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                                    (Data.Some.Some
                                                                                       Duckling.Types.Dimension))
  GHC.Classes.$fEq[]_$c/= @ (Data.Some.Some Duckling.Types.Dimension)
                          $dEq
  = Duckling.Api.Tests.$s$fEq[]_$s$fEq[]_$c/=1
"SPEC/Duckling.Api.Tests $fEq[]_$c/= @ ResolvedToken" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                                 Duckling.Types.ResolvedToken)
  GHC.Classes.$fEq[]_$c/= @ Duckling.Types.ResolvedToken $dEq
  = Duckling.Api.Tests.$s$fEq[]_$s$fEq[]_$c/=
"SPEC/Duckling.Api.Tests $fShowHashSet @ (Some Dimension)" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                                        (Data.Some.Some
                                                                                           Duckling.Types.Dimension))
  Data.HashSet.$fShowHashSet @ (Data.Some.Some
                                  Duckling.Types.Dimension)
                             $dShow
  = Duckling.Api.Tests.$s$fShowHashSet
"SPEC/Duckling.Api.Tests $fShowHashSet_$cshow @ (Some Dimension)" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                                               (Data.Some.Some
                                                                                                  Duckling.Types.Dimension))
  Data.HashSet.$fShowHashSet_$cshow @ (Data.Some.Some
                                         Duckling.Types.Dimension)
                                    $dShow
  = Duckling.Api.Tests.$s$fShowHashSet_$s$fShowHashSet_$cshow
"SPEC/Duckling.Api.Tests $fShowHashSet_$cshowList @ (Some Dimension)" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                                                   (Data.Some.Some
                                                                                                      Duckling.Types.Dimension))
  Data.HashSet.$fShowHashSet_$cshowList @ (Data.Some.Some
                                             Duckling.Types.Dimension)
                                        $dShow
  = Duckling.Api.Tests.$s$fShowHashSet_$s$fShowHashSet_$cshowList
"SPEC/Duckling.Api.Tests $fShowSome @ * @ Dimension" [ALWAYS] forall ($dGShow :: Data.GADT.Show.GShow
                                                                                   Duckling.Types.Dimension)
  Data.Some.$fShowSome @ * @ Duckling.Types.Dimension $dGShow
  = Duckling.Api.Tests.$s$fShowHashSet_$s$fShowSome
"SPEC/Duckling.Api.Tests $fShowSome_$cshow @ * @ Dimension" [ALWAYS] forall ($dGShow :: Data.GADT.Show.GShow
                                                                                          Duckling.Types.Dimension)
  Data.Some.$fShowSome_$cshow @ * @ Duckling.Types.Dimension $dGShow
  = Duckling.Api.Tests.$s$fShowHashSet_$s$fShowSome_$cshow
"SPEC/Duckling.Api.Tests $fShowSome_$cshowList @ * @ Dimension" [ALWAYS] forall ($dGShow :: Data.GADT.Show.GShow
                                                                                              Duckling.Types.Dimension)
  Data.Some.$fShowSome_$cshowList @ *
                                  @ Duckling.Types.Dimension
                                  $dGShow
  = Duckling.Api.Tests.$s$fShowHashSet_$s$fShowSome_$cshowList
"SPEC/Duckling.Api.Tests $fShow[] @ (Some Dimension)" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                                   (Data.Some.Some
                                                                                      Duckling.Types.Dimension))
  GHC.Show.$fShow[] @ (Data.Some.Some Duckling.Types.Dimension)
                    $dShow
  = Duckling.Api.Tests.$s$fShow[]1
"SPEC/Duckling.Api.Tests $fShow[] @ ResolvedToken" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                                Duckling.Types.ResolvedToken)
  GHC.Show.$fShow[] @ Duckling.Types.ResolvedToken $dShow
  = Duckling.Api.Tests.$s$fShow[]
"SPEC/Duckling.Api.Tests $fShow[]_$cshow @ ResolvedToken" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                                       Duckling.Types.ResolvedToken)
  GHC.Show.$fShow[]_$cshow @ Duckling.Types.ResolvedToken $dShow
  = Duckling.Api.Tests.$s$fShow[]_$s$fShow[]_$cshow
"SPEC/Duckling.Api.Tests $fShow[]_$cshowList @ (Some Dimension)" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                                              (Data.Some.Some
                                                                                                 Duckling.Types.Dimension))
  GHC.Show.$fShow[]_$cshowList @ (Data.Some.Some
                                    Duckling.Types.Dimension)
                               $dShow
  = Duckling.Api.Tests.$s$fShow[]_$s$fShow[]_$cshowList1
"SPEC/Duckling.Api.Tests $fShow[]_$cshowList @ ResolvedToken" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                                           Duckling.Types.ResolvedToken)
  GHC.Show.$fShow[]_$cshowList @ Duckling.Types.ResolvedToken $dShow
  = Duckling.Api.Tests.$s$fShow[]_$s$fShow[]_$cshowList
"SPEC/Duckling.Api.Tests $fShow[]_$cshowsPrec @ (Some Dimension)" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                                               (Data.Some.Some
                                                                                                  Duckling.Types.Dimension))
  GHC.Show.$fShow[]_$cshowsPrec @ (Data.Some.Some
                                     Duckling.Types.Dimension)
                                $dShow
  = Duckling.Api.Tests.$s$fShow[]_$s$fShow[]_$cshowsPrec1
"SPEC/Duckling.Api.Tests $fShow[]_$cshowsPrec @ ResolvedToken" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                                            Duckling.Types.ResolvedToken)
  GHC.Show.$fShow[]_$cshowsPrec @ Duckling.Types.ResolvedToken $dShow
  = Duckling.Api.Tests.$s$fShow[]_$s$fShow[]_$cshowsPrec
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

