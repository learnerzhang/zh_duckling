
==================== FINAL INTERFACE ====================
2019-01-30 07:28:03.939042 UTC

interface duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Time.Corpus 8002
  interface hash: 4023ef0407644a0448b714d80ab4479d
  ABI hash: e32dfe8a58ad124984f04f7ebb5a7714
  export-list hash: d85d84e208c26f5361e2f4e30056c94f
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 3ad16dde8194c65cb1c407bfeb01026b
  sig of: Nothing
  used TH splices: False
  where
exports:
  Duckling.Time.Corpus.datetime
  Duckling.Time.Corpus.datetimeHoliday
  Duckling.Time.Corpus.datetimeInterval
  Duckling.Time.Corpus.datetimeIntervalHoliday
  Duckling.Time.Corpus.datetimeOpenInterval
  Duckling.Time.Corpus.examples
module dependencies: Duckling.AmountOfMoney.Helpers
                     Duckling.AmountOfMoney.Rules Duckling.AmountOfMoney.Types
                     Duckling.Api Duckling.Core Duckling.CreditCardNumber.Helpers
                     Duckling.CreditCardNumber.Rules Duckling.CreditCardNumber.Types
                     Duckling.Dimensions Duckling.Dimensions.Common
                     Duckling.Dimensions.Types Duckling.Distance.Helpers
                     Duckling.Distance.Rules Duckling.Distance.Types
                     Duckling.Duration.Helpers Duckling.Duration.Rules
                     Duckling.Duration.Types Duckling.Email.Rules Duckling.Email.Types
                     Duckling.Engine Duckling.Engine.Regex Duckling.Gender.Rules
                     Duckling.Gender.Types Duckling.Identity.Helpers
                     Duckling.Identity.Rules Duckling.Identity.Types Duckling.Locale
                     Duckling.Numeral.Helpers Duckling.Numeral.Rules
                     Duckling.Numeral.Types Duckling.Ordinal.Helpers
                     Duckling.Ordinal.Rules Duckling.Ordinal.Types
                     Duckling.PhoneNumber.Rules Duckling.PhoneNumber.Types
                     Duckling.Quantity.Helpers Duckling.Quantity.Rules
                     Duckling.Quantity.Types Duckling.Ranking.Classifiers
                     Duckling.Ranking.Classifiers.ZH_XX Duckling.Ranking.Extraction
                     Duckling.Ranking.Rank Duckling.Ranking.Types Duckling.Regex.Types
                     Duckling.Region Duckling.Resolve Duckling.Rules
                     Duckling.Rules.Common Duckling.Temperature.Helpers
                     Duckling.Temperature.Rules Duckling.Temperature.Types
                     Duckling.Testing.Types Duckling.Time.CN.Rules
                     Duckling.Time.HK.Rules Duckling.Time.Helpers Duckling.Time.MO.Rules
                     Duckling.Time.Rules Duckling.Time.TW.Rules
                     Duckling.Time.TimeZone.Parse Duckling.Time.Types
                     Duckling.TimeGrain.Rules Duckling.TimeGrain.Types Duckling.Types
                     Duckling.Types.Document Duckling.Types.Stash Duckling.Url.Helpers
                     Duckling.Url.Rules Duckling.Url.Types Duckling.Volume.Helpers
                     Duckling.Volume.Rules Duckling.Volume.Types Duckling.Weight.Helpers
                     Duckling.Weight.Rules Duckling.Weight.Types
package dependencies: aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      dependent-sum-0.4@dependent-sum-0.4-32kCW1hJUMSBd03CvIwqZl
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      extra-1.5.3@extra-1.5.3-DgI7Z6Dwkeh8JGXDlNC5BL
                      generic-deriving-1.11.2@generic-deriving-1.11.2-FTRmVS5RM6G7R2MgyiZHgW
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      regex-base-0.93.2@regex-base-0.93.2-AYjYAsBidAc8f5XNm9b2Aa
                      regex-pcre-0.94.4@regex-pcre-0.94.4-Dlv5UOV35E3Fsya0hon6HM
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI
                      th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      timezone-series-0.1.8@timezone-series-0.1.8-4K4l0A0wjZPUt7r2oV8PT
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         dependent-sum-0.4@dependent-sum-0.4-32kCW1hJUMSBd03CvIwqZl:Data.GADT.Compare
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         regex-base-0.93.2@regex-base-0.93.2-AYjYAsBidAc8f5XNm9b2Aa:Text.Regex.Base.Context
         regex-pcre-0.94.4@regex-pcre-0.94.4-Dlv5UOV35E3Fsya0hon6HM:Text.Regex.PCRE.ByteString
         regex-pcre-0.94.4@regex-pcre-0.94.4-Dlv5UOV35E3Fsya0hon6HM:Text.Regex.PCRE.ByteString.Lazy
         regex-pcre-0.94.4@regex-pcre-0.94.4-Dlv5UOV35E3Fsya0hon6HM:Text.Regex.PCRE.Sequence
         regex-pcre-0.94.4@regex-pcre-0.94.4-Dlv5UOV35E3Fsya0hon6HM:Text.Regex.PCRE.String
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Applicative
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Concurrent
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Exception
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Monad.ST
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Array
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Bool
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.ByteString
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Char
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Complex
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Data
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Dynamic
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Either
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Fixed
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Floating
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Compose
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Identity
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Product
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Sum
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Integral
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.List
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.List.NonEmpty
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Maybe
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Monoid
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Ord
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Proxy
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Ratio
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Semigroup
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Text
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Tuple
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Type.Coercion
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Type.Equality
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Typeable
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Version
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Void
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Foreign.C.Types
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Foreign.Ptr
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Event
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Fingerprint
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Generics
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.RTS.Flags
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Stack
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.StaticPtr
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Stats
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.TypeLits
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Numeric.Natural
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.System.Exit
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.System.IO
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.System.Posix.Types
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Text.Read
         th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI:Language.Haskell.TH.Lift
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.AmountOfMoney.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.CreditCardNumber.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Distance.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Duration.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Email.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Gender.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Identity.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Locale
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Numeral.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Ordinal.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.PhoneNumber.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Quantity.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Regex.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Region
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Temperature.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Time.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.TimeGrain.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Url.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Volume.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Weight.Types
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.FromStringTextShow
                         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Options
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k:Data.Aeson 1af00541e969ad203c27ee12864de00d
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k:Data.Aeson.Types.Internal 4c7adfaf9946e7eb59b1a47b47e68246
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k:Data.Aeson.Types.ToJSON d6ae344f2a743c9940980d0869569ad4
import  -/  base-4.9.1.0:Data.String b34df69c7b6358cd40a379c8a0a78dcf
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  Duckling.Resolve 15ce2eadafd5cc42f057e1d0f9191938
  exports: 6e20ad884e276a7b8b73219b25eea656
  Context 6c0269cb99302be078f2197303ef498a
  DucklingTime e17339c460fde239380db26d55d8b70c
  referenceTime 1de216c3b60f68eb7958305130c4a454
import  -/  Duckling.Testing.Types a43f67fb62d50f033116bd615019c103
  exports: c3bdabff1f878cdb9f1a06aa9798a083
  Datetime f8eae0e2d52627505b33a52fb41b7485
  Example 229575881ace16a3861bb85ac88bc4c1
  TestPredicate 91606e47b9c9f81bb8f441812b6cfb1d
  dt 8fd1e231b10cf080ecff0eec01a94e92
  examplesCustom 853e28d4958938df424f3a275edc0eb9
import  -/  Duckling.Time.Types d4fac4be942a0a4255ab078596447429
  exports: 3606974139e9e7e95f5dfe8696d4fed1
  IntervalDirection 794da663254a4d37bc004d93a2fd1e20
  TimeObject 13bbf9afe44f17d62fb7c76485dccd8a
  TimeValue ea0d7e8a0e05f1debb730e5802e0c360
  TimeValue d712de0b6b1b686da9f87f91641709f6
  end f7bd28bbfc0a186d8711d16afdc2834b
  grain aff9c459c6e426343fed71d8614711a2
  openInterval 4816f3dd9fb2a95d4a31617ca59048c9
  start e7231e294893810fe4c705d3d926e0b7
  timeValue a5ddb5d5a056c4cab498fd8fc8093173
import  -/  Duckling.TimeGrain.Types df1446d581d19c78205a53c0773a1394
  exports: 1edf6532c5926aae175720f5ee1798eb
  Grain 39f514c392611535b9c35c2b5fb6eab3
import  -/  Duckling.Types 801e304eb17ff8eb30c8b6726b1646d0
  exports: 234683482d9f074d977aa6ca4a8259f1
  RVal ee66e550030701e0c0ee9bb77e775e51
  Resolved 4a7223efff6442afd04a9f34a8f2ea12
  rval 0091d7b4cf33c2b9d3c5d29bfa5b203a
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text f7d3d648ffeef1043fe2e522e7e66c1b
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Internal 9bfcbbbe07ecef48f631025a838df7da
import  -/  timezone-series-0.1.8@timezone-series-0.1.8-4K4l0A0wjZPUt7r2oV8PT:Data.Time.LocalTime.TimeZone.Series 2b73fd98294ae95b5699ae442ea94d5c
import  -/  unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base 05331f9dbdce4e8225c18ce1a8ba2f88
import  -/  unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Strict 74fd7b14a4a2f9eaf95c7dc9a18e61b1
cd8936b914ef1f47bdf9d7650fbbc7e3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Duckling.Time.Corpus.$trModule2
                   Duckling.Time.Corpus.$trModule1) -}
307fe2252d2c7db7b23be0b4324e0497
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Duckling.Time.Corpus"#) -}
1f4432516a4f4c8fdd261ac9b82e6a6f
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"#) -}
10b640e6c28969034b559482e104389f
  $w$sdelete ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
  {- Arity: 4, Strictness: <S,U><S,U><S,U><S,1*U>, Inline: [0],
     Unfolding: (\ @ v
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (w :: Data.HashMap.Base.HashMap Data.Text.Internal.Text v) ->
                 case {__pkg_ccall hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol hashable_fnv_hash_offset GHC.Prim.ByteArray#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.State#
                                                                                                                          GHC.Prim.RealWorld
                                                                                                                     -> (# GHC.Prim.State#
                                                                                                                             GHC.Prim.RealWorld,
                                                                                                                           GHC.Prim.Int# #)}
                        ww
                        (GHC.Prim.uncheckedIShiftL# ww1 1#)
                        (GHC.Prim.uncheckedIShiftL# ww2 1#)
                        -2578643520546668380#
                        GHC.Prim.realWorld# of wild1 { (#,#) ds1 ds2 ->
                 Duckling.Time.Corpus.$wpoly_go2
                   @ v
                   (GHC.Prim.int2Word# ds2)
                   ww
                   ww1
                   ww2
                   0#
                   w }) -}
c0df15d7974099c364845cd076641ba0
  $wdatetimeIntervalHolidayHelper ::
    Duckling.Testing.Types.Datetime
    -> GHC.Base.Maybe Duckling.Testing.Types.Datetime
    -> Duckling.TimeGrain.Types.Grain
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Duckling.Resolve.Context
    -> (# Duckling.Time.Types.SingleTimeValue,
          [Duckling.Time.Types.SingleTimeValue],
          GHC.Base.Maybe Data.Text.Internal.Text #)
  {- Arity: 5,
     Strictness: <L,1*U(U,1*U(U),1*U(U),1*U(U),1*U(U),U)><L,1*U><L,U><L,U><L,1*U(1*U(A,1*U(U,U)),A)>,
     Inline: [0],
     Unfolding: (\ (ww :: Duckling.Testing.Types.Datetime)
                   (ww1 :: GHC.Base.Maybe Duckling.Testing.Types.Datetime)
                   (w :: Duckling.TimeGrain.Types.Grain)
                   (w1 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (w2 :: Duckling.Resolve.Context) ->
                 let {
                   tv :: Duckling.Time.Types.SingleTimeValue
                   = let {
                       w3 :: Data.Time.LocalTime.TimeZone.Series.TimeZoneSeries
                       = case w2 of wild { Duckling.Resolve.Context ds1 ds2 ->
                         case ds1
                                `cast`
                              (Duckling.Resolve.N:DucklingTime[0]) of wild1 { Data.Time.LocalTime.TimeZone.Series.ZoneSeriesTime ds tzSeries ->
                         tzSeries } }
                     } in
                     let {
                       ww2 :: Data.Time.Clock.UTC.UTCTime
                       = case ww of ww3 { (,,,,,) ww4 ww5 ww6 ww7 ww8 ww9 ->
                         Data.Time.Clock.UTC.UTCTime
                           (Data.Time.Calendar.Gregorian.fromGregorian ww4 ww5 ww6)
                           (case ww7 of ww10 { GHC.Types.I# ww11 ->
                            case ww8 of ww12 { GHC.Types.I# ww13 ->
                            (Data.Time.LocalTime.TimeOfDay.$wtimeOfDayToTime ww11 ww13 ww9)
                              `cast`
                            (Trans
                                 (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P))
                                 (Sym (Data.Time.Clock.Scale.N:DiffTime[0]))) } }) }
                     } in
                     case ww1 of wild {
                       GHC.Base.Nothing
                       -> Duckling.Time.Types.SimpleValue
                            (Duckling.Time.Types.instantValue w3 ww2 w)
                       GHC.Base.Just d2
                       -> Duckling.Time.Types.IntervalValue
                            (Duckling.Time.Types.instantValue w3 ww2 w,
                             Duckling.Time.Types.InstantValue
                               (case d2 of ww3 { (,,,,,) ww4 ww5 ww6 ww7 ww8 ww9 ->
                                let {
                                  day :: Data.Time.Calendar.Days.Day
                                  = case ww5 of ww10 { GHC.Types.I# ww11 ->
                                    case ww6 of ww12 { GHC.Types.I# ww13 ->
                                    case Data.Time.Calendar.MonthDay.$wmonthAndDayToDayOfYear
                                           (Data.Time.Calendar.OrdinalDate.isLeapYear ww4)
                                           ww11
                                           ww13 of ww14 { DEFAULT ->
                                    Data.Time.Calendar.OrdinalDate.$wfromOrdinalDate ww4 ww14 } } }
                                } in
                                let {
                                  diffTime :: Data.Time.Clock.Scale.DiffTime
                                  = case ww7 of ww10 { GHC.Types.I# ww11 ->
                                    case ww8 of ww12 { GHC.Types.I# ww13 ->
                                    (Data.Time.LocalTime.TimeOfDay.$wtimeOfDayToTime ww11 ww13 ww9)
                                      `cast`
                                    (Trans
                                         (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P))
                                         (Sym (Data.Time.Clock.Scale.N:DiffTime[0]))) } }
                                } in
                                Data.Time.LocalTime.LocalTime.ZonedTime
                                  (Data.Time.LocalTime.LocalTime.LocalTime
                                     day
                                     (Data.Time.LocalTime.TimeOfDay.timeToTimeOfDay diffTime))
                                  (case w3 of ww10 { Data.Time.LocalTime.TimeZone.Series.TimeZoneSeries ww11 ww12 ->
                                   Data.Time.LocalTime.TimeZone.Series.$wtimeZoneFromSeries
                                     ww11
                                     ww12
                                     (Data.Time.Clock.UTC.UTCTime day diffTime) }) })
                               w) }
                 } in
                 (# tv,
                    GHC.Types.:
                      @ Duckling.Time.Types.SingleTimeValue
                      tv
                      (GHC.Types.[] @ Duckling.Time.Types.SingleTimeValue),
                    w1 #)) -}
39ffcd701d43a7d7a6bbc1e0a8552109
  $wdatetimeOpenInterval ::
    Duckling.Time.Types.IntervalDirection
    -> Duckling.Testing.Types.Datetime
    -> Duckling.TimeGrain.Types.Grain
    -> Duckling.Resolve.Context
    -> (# Duckling.Time.Types.SingleTimeValue,
          [Duckling.Time.Types.SingleTimeValue],
          GHC.Base.Maybe Data.Text.Internal.Text #)
  {- Arity: 4,
     Strictness: <L,U><L,1*U(U,1*U(U),1*U(U),1*U(U),1*U(U),U)><L,U><L,1*U(1*U(A,1*U(1*U(U,U,U),1*U)),A)>,
     Inline: [0],
     Unfolding: (\ (w :: Duckling.Time.Types.IntervalDirection)
                   (w1 :: Duckling.Testing.Types.Datetime)
                   (w2 :: Duckling.TimeGrain.Types.Grain)
                   (w3 :: Duckling.Resolve.Context) ->
                 let {
                   tv :: Data.Time.LocalTime.LocalTime.ZonedTime
                   = case w1 of ww { (,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ->
                     let {
                       day :: Data.Time.Calendar.Days.Day
                       = case ww2 of ww7 { GHC.Types.I# ww8 ->
                         case ww3 of ww9 { GHC.Types.I# ww10 ->
                         case Data.Time.Calendar.MonthDay.$wmonthAndDayToDayOfYear
                                (Data.Time.Calendar.OrdinalDate.isLeapYear ww1)
                                ww8
                                ww10 of ww11 { DEFAULT ->
                         Data.Time.Calendar.OrdinalDate.$wfromOrdinalDate ww1 ww11 } } }
                     } in
                     let {
                       diffTime :: Data.Time.Clock.Scale.DiffTime
                       = case ww4 of ww7 { GHC.Types.I# ww8 ->
                         case ww5 of ww9 { GHC.Types.I# ww10 ->
                         (Data.Time.LocalTime.TimeOfDay.$wtimeOfDayToTime ww8 ww10 ww6)
                           `cast`
                         (Trans
                              (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P))
                              (Sym (Data.Time.Clock.Scale.N:DiffTime[0]))) } }
                     } in
                     Data.Time.LocalTime.LocalTime.ZonedTime
                       (Data.Time.LocalTime.LocalTime.LocalTime
                          day
                          (Data.Time.LocalTime.TimeOfDay.timeToTimeOfDay diffTime))
                       (case w3 of wild { Duckling.Resolve.Context ds1 ds2 ->
                        case ds1
                               `cast`
                             (Duckling.Resolve.N:DucklingTime[0]) of wild1 { Data.Time.LocalTime.TimeZone.Series.ZoneSeriesTime ds tzSeries ->
                        case tzSeries of ww7 { Data.Time.LocalTime.TimeZone.Series.TimeZoneSeries ww8 ww9 ->
                        Data.Time.LocalTime.TimeZone.Series.$wtimeZoneFromSeries
                          ww8
                          ww9
                          (Data.Time.Clock.UTC.UTCTime day diffTime) } } }) }
                 } in
                 let {
                   tv1 :: Duckling.Time.Types.InstantValue {- Strictness: m -}
                   = Duckling.Time.Types.InstantValue tv w2
                 } in
                 let {
                   tv2 :: (Duckling.Time.Types.InstantValue,
                           Duckling.Time.Types.IntervalDirection)
                     {- Strictness: m -}
                   = (tv1, w)
                 } in
                 let {
                   tv3 :: Duckling.Time.Types.SingleTimeValue
                   = Duckling.Time.Types.OpenIntervalValue tv2
                 } in
                 (# tv3,
                    GHC.Types.:
                      @ Duckling.Time.Types.SingleTimeValue
                      tv3
                      (GHC.Types.[] @ Duckling.Time.Types.SingleTimeValue),
                    GHC.Base.Nothing @ Data.Text.Internal.Text #)) -}
183d71d1425034369558eda0445221dc
  $wpoly_go1 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array#
         (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe GHC.Types.Int
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><S,U><S,U><S,U>, Inline: [0] -}
77dea6254fc1cceca1209ea0b0ef0046
  $wpoly_go2 ::
    GHC.Prim.Word#
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
810540ad13f89c39effa715068c34e74
  datetime ::
    Duckling.Testing.Types.Datetime
    -> Duckling.TimeGrain.Types.Grain
    -> Duckling.Resolve.Context
    -> Duckling.Time.Types.TimeValue
  {- Arity: 3,
     Strictness: <L,1*U(U,1*U(U),1*U(U),1*U(U),1*U(U),U)><L,U><L,1*U(1*U(A,1*U(U,U)),A)>m,
     Unfolding: InlineRule (3, True, False)
                (\ (d :: Duckling.Testing.Types.Datetime)
                   (g :: Duckling.TimeGrain.Types.Grain)
                   (ctx :: Duckling.Resolve.Context) ->
                 Duckling.Time.Corpus.datetimeIntervalHolidayHelper
                   (d, GHC.Base.Nothing @ Duckling.Testing.Types.Datetime)
                   g
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   ctx) -}
679cfe04e547b216c5dc8f0a75f14d33
  datetimeHoliday ::
    Duckling.Testing.Types.Datetime
    -> Duckling.TimeGrain.Types.Grain
    -> Data.Text.Internal.Text
    -> Duckling.Resolve.Context
    -> Duckling.Time.Types.TimeValue
  {- Arity: 4,
     Strictness: <L,1*U(U,1*U(U),1*U(U),1*U(U),1*U(U),U)><L,U><L,U><L,1*U(1*U(A,1*U(U,U)),A)>m,
     Unfolding: InlineRule (4, True, False)
                (\ (d :: Duckling.Testing.Types.Datetime)
                   (g :: Duckling.TimeGrain.Types.Grain)
                   (h :: Data.Text.Internal.Text)
                   (ctx :: Duckling.Resolve.Context) ->
                 Duckling.Time.Corpus.datetimeIntervalHolidayHelper
                   (d, GHC.Base.Nothing @ Duckling.Testing.Types.Datetime)
                   g
                   (GHC.Base.Just @ Data.Text.Internal.Text h)
                   ctx) -}
2e5dd821f278d26ba5ab438845cdaded
  datetimeInterval ::
    (Duckling.Testing.Types.Datetime, Duckling.Testing.Types.Datetime)
    -> Duckling.TimeGrain.Types.Grain
    -> Duckling.Resolve.Context
    -> Duckling.Time.Types.TimeValue
  {- Arity: 3,
     Strictness: <S,1*U(1*U(U,1*U(U),1*U(U),1*U(U),1*U(U),U),U)><L,U><L,1*U(1*U(A,1*U(U,U)),A)>m,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: (Duckling.Testing.Types.Datetime,
                           Duckling.Testing.Types.Datetime))
                   (g :: Duckling.TimeGrain.Types.Grain)
                   (ctx :: Duckling.Resolve.Context) ->
                 case ds of wild { (,) d1 d2 ->
                 Duckling.Time.Corpus.datetimeIntervalHolidayHelper
                   (d1, GHC.Base.Just @ Duckling.Testing.Types.Datetime d2)
                   g
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   ctx }) -}
314549d36171db32ab5797f5a70897ed
  datetimeIntervalHoliday ::
    (Duckling.Testing.Types.Datetime, Duckling.Testing.Types.Datetime)
    -> Duckling.TimeGrain.Types.Grain
    -> Data.Text.Internal.Text
    -> Duckling.Resolve.Context
    -> Duckling.Time.Types.TimeValue
  {- Arity: 4,
     Strictness: <S,1*U(1*U(U,1*U(U),1*U(U),1*U(U),1*U(U),U),U)><L,U><L,U><L,1*U(1*U(A,1*U(U,U)),A)>m,
     Unfolding: InlineRule (4, True, False)
                (\ (ds :: (Duckling.Testing.Types.Datetime,
                           Duckling.Testing.Types.Datetime))
                   (g :: Duckling.TimeGrain.Types.Grain)
                   (h :: Data.Text.Internal.Text)
                   (ctx :: Duckling.Resolve.Context) ->
                 case ds of wild { (,) d1 d2 ->
                 Duckling.Time.Corpus.datetimeIntervalHolidayHelper
                   (d1, GHC.Base.Just @ Duckling.Testing.Types.Datetime d2)
                   g
                   (GHC.Base.Just @ Data.Text.Internal.Text h)
                   ctx }) -}
e20cb4cdd87d2b364b070da70d8e6203
  datetimeIntervalHolidayHelper ::
    (Duckling.Testing.Types.Datetime,
     GHC.Base.Maybe Duckling.Testing.Types.Datetime)
    -> Duckling.TimeGrain.Types.Grain
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Duckling.Resolve.Context
    -> Duckling.Time.Types.TimeValue
  {- Arity: 4,
     Strictness: <S,1*U(1*U(U,1*U(U),1*U(U),1*U(U),1*U(U),U),1*U)><L,U><L,U><L,1*U(1*U(A,1*U(U,U)),A)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: (Duckling.Testing.Types.Datetime,
                          GHC.Base.Maybe Duckling.Testing.Types.Datetime))
                   (w1 :: Duckling.TimeGrain.Types.Grain)
                   (w2 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (w3 :: Duckling.Resolve.Context) ->
                 case w of ww { (,) ww1 ww2 ->
                 case Duckling.Time.Corpus.$wdatetimeIntervalHolidayHelper
                        ww1
                        ww2
                        w1
                        w2
                        w3 of ww3 { (#,,#) ww4 ww5 ww6 ->
                 Duckling.Time.Types.TimeValue ww4 ww5 ww6 } }) -}
ce50b7df928ce23168a9fe733905eca3
  datetimeOpenInterval ::
    Duckling.Time.Types.IntervalDirection
    -> Duckling.Testing.Types.Datetime
    -> Duckling.TimeGrain.Types.Grain
    -> Duckling.Resolve.Context
    -> Duckling.Time.Types.TimeValue
  {- Arity: 4,
     Strictness: <L,U><L,1*U(U,1*U(U),1*U(U),1*U(U),1*U(U),U)><L,U><L,1*U(1*U(A,1*U(1*U(U,U,U),1*U)),A)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Duckling.Time.Types.IntervalDirection)
                   (w1 :: Duckling.Testing.Types.Datetime)
                   (w2 :: Duckling.TimeGrain.Types.Grain)
                   (w3 :: Duckling.Resolve.Context) ->
                 case Duckling.Time.Corpus.$wdatetimeOpenInterval
                        w
                        w1
                        w2
                        w3 of ww { (#,,#) ww1 ww2 ww3 ->
                 Duckling.Time.Types.TimeValue ww1 ww2 ww3 }) -}
6f0e3a49070b47abc5f7dc0071ffacec
  examples ::
    Data.Aeson.Types.ToJSON.ToJSON a =>
    (Duckling.Resolve.Context -> a)
    -> [Data.Text.Internal.Text] -> [Duckling.Testing.Types.Example]
  {- Arity: 3, Strictness: <L,U(C(U),A,A,A)><L,C(U)><S,1*U>,
     Unfolding: (\ @ a
                   ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON a)
                   (f :: Duckling.Resolve.Context -> a)
                   (eta :: [Data.Text.Internal.Text]) ->
                 let {
                   $wcheck :: Duckling.Resolve.Context
                              -> Duckling.Types.ResolvedVal -> GHC.Types.Bool
                     {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
                   = \ (w :: Duckling.Resolve.Context)
                       (ww :: Duckling.Types.ResolvedVal) ->
                     case ww of wild { Duckling.Types.RVal a1 $dResolve $dEq $dShow $dToJSON1 ds v ->
                     case Data.Aeson.Types.ToJSON.toJSON
                            @ (Duckling.Resolve.ResolvedValue a1)
                            (Duckling.Resolve.$p3Resolve @ a1 $dResolve)
                            v of wild1 {
                       DEFAULT -> GHC.Types.False
                       Data.Aeson.Types.Internal.Object o
                       -> case Data.Aeson.Types.ToJSON.toJSON
                                 @ a
                                 $dToJSON
                                 (f w) of wild2 {
                            DEFAULT
                            -> case Duckling.Time.Corpus.examples2 of ww1 { Data.Text.Internal.Text ww2 ww3 ww4 ->
                               case Duckling.Time.Corpus.$w$sdelete
                                      @ Data.Aeson.Types.Internal.Value
                                      ww2
                                      ww3
                                      ww4
                                      o of dt { DEFAULT ->
                               Data.Aeson.Types.Internal.$fEqValue_$c==
                                 Duckling.Time.Corpus.examples1
                                 (Data.Aeson.Types.Internal.Object dt) } }
                            Data.Aeson.Types.Internal.Object o1
                            -> case Duckling.Time.Corpus.examples2 of ww1 { Data.Text.Internal.Text ww2 ww3 ww4 ->
                               case Duckling.Time.Corpus.$w$sdelete
                                      @ Data.Aeson.Types.Internal.Value
                                      ww2
                                      ww3
                                      ww4
                                      o1 of dt { DEFAULT ->
                               case Duckling.Time.Corpus.$w$sdelete
                                      @ Data.Aeson.Types.Internal.Value
                                      ww2
                                      ww3
                                      ww4
                                      o of dt1 { DEFAULT ->
                               Data.Aeson.Types.Internal.$fEqValue_$c==
                                 (Data.Aeson.Types.Internal.Object dt)
                                 (Data.Aeson.Types.Internal.Object dt1) } } } } } }
                 } in
                 let {
                   check :: Duckling.Testing.Types.TestPredicate
                     {- Arity: 2, Strictness: <L,U><S(LLSL),1*U(A,A,1*U,A)>,
                        Inline: INLINE[0],
                        Unfolding: InlineRule (2, True, False)
                                   (\ (w :: Duckling.Resolve.Context)
                                      (w1 :: Duckling.Types.ResolvedToken) ->
                                    case w1 of ww { Duckling.Types.Resolved ww1 ww2 ww3 ww4 ->
                                    $wcheck w ww3 }) -}
                   = \ (w :: Duckling.Resolve.Context)
                       (w1 :: Duckling.Types.ResolvedToken) ->
                     case w1 of ww { Duckling.Types.Resolved ww1 ww2 ww3 ww4 ->
                     $wcheck w ww3 }
                 } in
                 GHC.Base.map
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text, Duckling.Testing.Types.TestPredicate)
                   (\ (ds :: Data.Text.Internal.Text) -> (ds, check))
                   eta) -}
739f663e15e0bc22a72827b98acdc22d
  examples1 :: Data.Aeson.Types.Internal.Value
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Data.Aeson.Types.Internal.Object
                   (Data.HashMap.Base.Empty
                      @ Data.Text.Internal.Text
                      @ Data.Aeson.Types.Internal.Value)) -}
996d60ea38c088903afc5e2e10c5ee76
  examples2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "values"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

