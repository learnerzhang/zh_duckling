
==================== FINAL INTERFACE ====================
2019-01-30 07:24:31.852477 UTC

interface duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Weight.Types [family instance module] 8002
  interface hash: 0c11a2dcb3695104f89227b81e119f68
  ABI hash: 8247a5f41551f006c25533154da2cad5
  export-list hash: 8f72193238d93dff2655ebec37ea7d9e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: e3d17ec61c004a8ebae622223d00aead
  sig of: Nothing
  used TH splices: False
  where
exports:
  Duckling.Weight.Types.above
  Duckling.Weight.Types.between
  Duckling.Weight.Types.openInterval
  Duckling.Weight.Types.simple
  Duckling.Weight.Types.single
  Duckling.Weight.Types.under
  Duckling.Weight.Types.IntervalDirection{Duckling.Weight.Types.Above Duckling.Weight.Types.Under}
  Duckling.Weight.Types.SingleValue{Duckling.Weight.Types.SingleValue vUnit vValue}
  Duckling.Weight.Types.Unit{Duckling.Weight.Types.Gram Duckling.Weight.Types.Jin Duckling.Weight.Types.Kilogram Duckling.Weight.Types.Liang Duckling.Weight.Types.Milligram Duckling.Weight.Types.Pound Duckling.Weight.Types.Tonne}
  Duckling.Weight.Types.WeightData{Duckling.Weight.Types.WeightData maxValue minValue unit value}
  Duckling.Weight.Types.WeightValue{Duckling.Weight.Types.IntervalValue Duckling.Weight.Types.OpenIntervalValue Duckling.Weight.Types.SimpleValue}
module dependencies: Duckling.Locale Duckling.Region
                     Duckling.Resolve
package dependencies: aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      generic-deriving-1.11.2@generic-deriving-1.11.2-FTRmVS5RM6G7R2MgyiZHgW
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI
                      th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      timezone-series-0.1.8@timezone-series-0.1.8-4K4l0A0wjZPUt7r2oV8PT
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Applicative
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Concurrent
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Exception
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Monad.ST
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Array
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Bool
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.ByteString
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Char
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Complex
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Data
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Dynamic
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Either
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Fixed
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Floating
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Compose
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Identity
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Product
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Sum
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Integral
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.List
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.List.NonEmpty
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Maybe
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Monoid
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Ord
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Proxy
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Ratio
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Semigroup
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Text
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Tuple
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Type.Coercion
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Type.Equality
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Typeable
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Version
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Void
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Foreign.C.Types
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Foreign.Ptr
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Event
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Fingerprint
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Generics
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.RTS.Flags
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Stack
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.StaticPtr
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Stats
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.TypeLits
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Numeric.Natural
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.System.Exit
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.System.IO
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.System.Posix.Types
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Text.Read
         th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI:Language.Haskell.TH.Lift
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Locale
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Region
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.FromStringTextShow
                         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Options
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k:Data.Aeson 1af00541e969ad203c27ee12864de00d
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k:Data.Aeson.Types.Internal 4c7adfaf9946e7eb59b1a47b47e68246
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k:Data.Aeson.Types.ToJSON d6ae344f2a743c9940980d0869569ad4
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Generics 1dbec2bc7dd1c5bd8c89ed857eaed19b
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  deepseq-1.4.2.0@deepseq-1.4.2.0:Control.DeepSeq 0a99763cf6016b16bbf55422778a79b2
import  -/  Duckling.Resolve 15ce2eadafd5cc42f057e1d0f9191938
  exports: 6e20ad884e276a7b8b73219b25eea656
  Resolve 857149e63f1fbb61ae9c206e0802b0fa
  ResolvedValue d3c9ab28ab95ed33280b467fbe72cd58
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable 0e86f32bd46d4c618b1e312455011c77
import  -/  hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Class bc4f00f60e55accb5753c8e0ce3cde5f
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text f7d3d648ffeef1043fe2e522e7e66c1b
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Internal 9bfcbbbe07ecef48f631025a838df7da
import  -/  unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base 05331f9dbdce4e8225c18ce1a8ba2f88
import  -/  unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Strict 74fd7b14a4a2f9eaf95c7dc9a18e61b1
a86baca3d8d7ddb75087ea8e0c4ab363
  $fEqIntervalDirection ::
    GHC.Classes.Eq Duckling.Weight.Types.IntervalDirection
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.IntervalDirection
                  Duckling.Weight.Types.$fEqIntervalDirection_$c==
                  Duckling.Weight.Types.$fEqIntervalDirection_$c/= -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fEqIntervalDirection_$c/= ::
    Duckling.Weight.Types.IntervalDirection
    -> Duckling.Weight.Types.IntervalDirection -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.Weight.Types.IntervalDirection)
                   (b :: Duckling.Weight.Types.IntervalDirection) ->
                 case a of wild {
                   Duckling.Weight.Types.Above
                   -> case b of wild1 {
                        Duckling.Weight.Types.Above -> GHC.Types.False
                        Duckling.Weight.Types.Under -> GHC.Types.True }
                   Duckling.Weight.Types.Under
                   -> case b of wild1 {
                        Duckling.Weight.Types.Above -> GHC.Types.True
                        Duckling.Weight.Types.Under -> GHC.Types.False } }) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fEqIntervalDirection_$c== ::
    Duckling.Weight.Types.IntervalDirection
    -> Duckling.Weight.Types.IntervalDirection -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Duckling.Weight.Types.IntervalDirection)
                   (ds1 :: Duckling.Weight.Types.IntervalDirection) ->
                 case ds of wild {
                   Duckling.Weight.Types.Above
                   -> case ds1 of wild1 {
                        Duckling.Weight.Types.Above -> GHC.Types.True
                        Duckling.Weight.Types.Under -> GHC.Types.False }
                   Duckling.Weight.Types.Under
                   -> case ds1 of wild1 {
                        Duckling.Weight.Types.Above -> GHC.Types.False
                        Duckling.Weight.Types.Under -> GHC.Types.True } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fEqSingleValue :: GHC.Classes.Eq Duckling.Weight.Types.SingleValue
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.SingleValue
                  Duckling.Weight.Types.$fEqSingleValue_$c==
                  Duckling.Weight.Types.$fEqSingleValue_$c/= -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fEqSingleValue_$c/= ::
    Duckling.Weight.Types.SingleValue
    -> Duckling.Weight.Types.SingleValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(U))><S(SL),1*U(1*U,1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.Weight.Types.SingleValue)
                   (b :: Duckling.Weight.Types.SingleValue) ->
                 case Duckling.Weight.Types.$fEqSingleValue_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fEqSingleValue_$c== ::
    Duckling.Weight.Types.SingleValue
    -> Duckling.Weight.Types.SingleValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(U))><S(SL),1*U(1*U,1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Weight.Types.SingleValue)
                   (w1 :: Duckling.Weight.Types.SingleValue) ->
                 case w of ww { Duckling.Weight.Types.SingleValue ww1 ww2 ->
                 case w1 of ww3 { Duckling.Weight.Types.SingleValue ww4 ww5 ->
                 Duckling.Weight.Types.$w$c== ww1 ww2 ww4 ww5 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fEqUnit :: GHC.Classes.Eq Duckling.Weight.Types.Unit
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.Unit
                  Duckling.Weight.Types.$fEqUnit_$c==
                  Duckling.Weight.Types.$fEqUnit_$c/= -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fEqUnit_$c/= ::
    Duckling.Weight.Types.Unit
    -> Duckling.Weight.Types.Unit -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.Weight.Types.Unit)
                   (b :: Duckling.Weight.Types.Unit) ->
                 case a of wild {
                   Duckling.Weight.Types.Milligram
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.Milligram -> GHC.Types.False }
                   Duckling.Weight.Types.Liang
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.Liang -> GHC.Types.False }
                   Duckling.Weight.Types.Gram
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.Gram -> GHC.Types.False }
                   Duckling.Weight.Types.Jin
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.Jin -> GHC.Types.False }
                   Duckling.Weight.Types.Kilogram
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.Kilogram -> GHC.Types.False }
                   Duckling.Weight.Types.Pound
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.Pound -> GHC.Types.False }
                   Duckling.Weight.Types.Tonne
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.Tonne -> GHC.Types.False } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fEqUnit_$c== ::
    Duckling.Weight.Types.Unit
    -> Duckling.Weight.Types.Unit -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Duckling.Weight.Types.Unit)
                   (ds1 :: Duckling.Weight.Types.Unit) ->
                 case ds of wild {
                   Duckling.Weight.Types.Milligram
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Milligram -> GHC.Types.True }
                   Duckling.Weight.Types.Liang
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Liang -> GHC.Types.True }
                   Duckling.Weight.Types.Gram
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Gram -> GHC.Types.True }
                   Duckling.Weight.Types.Jin
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Jin -> GHC.Types.True }
                   Duckling.Weight.Types.Kilogram
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Kilogram -> GHC.Types.True }
                   Duckling.Weight.Types.Pound
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Pound -> GHC.Types.True }
                   Duckling.Weight.Types.Tonne
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Tonne -> GHC.Types.True } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fEqWeightData :: GHC.Classes.Eq Duckling.Weight.Types.WeightData
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.WeightData
                  Duckling.Weight.Types.$fEqWeightData_$c==
                  Duckling.Weight.Types.$fEqWeightData_$c/= -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fEqWeightData_$c/= ::
    Duckling.Weight.Types.WeightData
    -> Duckling.Weight.Types.WeightData -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.Weight.Types.WeightData)
                   (b :: Duckling.Weight.Types.WeightData) ->
                 case Duckling.Weight.Types.$fEqWeightData_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fEqWeightData_$c== ::
    Duckling.Weight.Types.WeightData
    -> Duckling.Weight.Types.WeightData -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Weight.Types.WeightData)
                   (w1 :: Duckling.Weight.Types.WeightData) ->
                 case w of ww { Duckling.Weight.Types.WeightData ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Duckling.Weight.Types.WeightData ww6 ww7 ww8 ww9 ->
                 Duckling.Weight.Types.$w$c==1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww6
                   ww7
                   ww8
                   ww9 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fEqWeightValue :: GHC.Classes.Eq Duckling.Weight.Types.WeightValue
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.WeightValue
                  Duckling.Weight.Types.$fEqWeightValue_$c==
                  Duckling.Weight.Types.$fEqWeightValue_$c/= -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fEqWeightValue_$c/= ::
    Duckling.Weight.Types.WeightValue
    -> Duckling.Weight.Types.WeightValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.Weight.Types.WeightValue)
                   (b :: Duckling.Weight.Types.WeightValue) ->
                 case Duckling.Weight.Types.$fEqWeightValue_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fEqWeightValue_$c== ::
    Duckling.Weight.Types.WeightValue
    -> Duckling.Weight.Types.WeightValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Duckling.Weight.Types.WeightValue)
                   (ds1 :: Duckling.Weight.Types.WeightValue) ->
                 case ds of wild {
                   Duckling.Weight.Types.SimpleValue a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.SimpleValue b1
                        -> Duckling.Weight.Types.$fEqSingleValue_$c== a1 b1 }
                   Duckling.Weight.Types.IntervalValue a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.IntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Weight.Types.SingleValue ww8 ww9 ->
                           case ww4 of ww10 { Duckling.Weight.Types.SingleValue ww11 ww12 ->
                           case Duckling.Weight.Types.$w$c== ww8 ww9 ww11 ww12 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> Duckling.Weight.Types.$fEqSingleValue_$c== ww2 ww5 } } } } } }
                   Duckling.Weight.Types.OpenIntervalValue a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.OpenIntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Weight.Types.SingleValue ww8 ww9 ->
                           case ww4 of ww10 { Duckling.Weight.Types.SingleValue ww11 ww12 ->
                           case Duckling.Weight.Types.$w$c== ww8 ww9 ww11 ww12 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> Duckling.Weight.Types.$fEqIntervalDirection_$c==
                                  ww2
                                  ww5 } } } } } } }) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fGenericIntervalDirection ::
    GHC.Generics.Generic Duckling.Weight.Types.IntervalDirection
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.IntervalDirection
                  Duckling.Weight.Types.$fGenericIntervalDirection_$cfrom
                  Duckling.Weight.Types.$fGenericIntervalDirection_$cto -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fGenericIntervalDirection1 ::
    Duckling.Weight.Types.IntervalDirection
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Duckling.Weight.Types.IntervalDirection) ->
                 case x1 of wild {
                   Duckling.Weight.Types.Above
                   -> Duckling.Weight.Types.$fGenericIntervalDirection3 @ x
                   Duckling.Weight.Types.Under
                   -> Duckling.Weight.Types.$fGenericIntervalDirection2 @ x }) -}
64c9f60fe145fd2351494e11382c2474
  $fGenericIntervalDirection2 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Under" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
6b2e7f4d273ff6fae22c57ac7d895475
  $fGenericIntervalDirection3 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Above" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fGenericIntervalDirection_$cfrom ::
    Duckling.Weight.Types.IntervalDirection
    -> GHC.Generics.Rep Duckling.Weight.Types.IntervalDirection x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Duckling.Weight.Types.$fGenericIntervalDirection1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Duckling.Weight.Types.IntervalDirection>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "IntervalDirection"
                                       "Duckling.Weight.Types"
                                       "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                       GHC.Generics.U1
                                     GHC.Generics.:+: GHC.Generics.M1
                                                        GHC.Generics.C
                                                        ('GHC.Generics.MetaCons
                                                           "Under"
                                                           'GHC.Generics.PrefixI
                                                           'GHC.Types.False)
                                                        GHC.Generics.U1>_R))
                          (Sub (Sym (Duckling.Weight.Types.Rep_IntervalDirection[0]))) <x>_N) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fGenericIntervalDirection_$cto ::
    GHC.Generics.Rep Duckling.Weight.Types.IntervalDirection x
    -> Duckling.Weight.Types.IntervalDirection
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x
                   (ds :: GHC.Generics.Rep
                            Duckling.Weight.Types.IntervalDirection x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Duckling.Weight.Types.Rep_IntervalDirection[0]))
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.D>_P
                                <'GHC.Generics.MetaData
                                   "IntervalDirection"
                                   "Duckling.Weight.Types"
                                   "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                   'GHC.Types.False>_P
                                <GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.M1
                                                    GHC.Generics.C
                                                    ('GHC.Generics.MetaCons
                                                       "Under"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1>_R) <x>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1 of tpl { DEFAULT -> Duckling.Weight.Types.Above }
                   GHC.Generics.R1 ds1
                   -> case ds1 of tpl { DEFAULT -> Duckling.Weight.Types.Under } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fGenericUnit :: GHC.Generics.Generic Duckling.Weight.Types.Unit
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.Unit
                  Duckling.Weight.Types.$fGenericUnit_$cfrom
                  Duckling.Weight.Types.$fGenericUnit_$cto -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fGenericUnit1 ::
    Duckling.Weight.Types.Unit
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1))
         ((GHC.Generics.M1
             GHC.Generics.C
             ('GHC.Generics.MetaCons
                "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
             GHC.Generics.U1
           GHC.Generics.:+: GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1)
          GHC.Generics.:+: (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Duckling.Weight.Types.Unit) ->
                 case x1 of wild {
                   Duckling.Weight.Types.Milligram
                   -> Duckling.Weight.Types.$fGenericUnit20 @ x
                   Duckling.Weight.Types.Liang
                   -> Duckling.Weight.Types.$fGenericUnit17 @ x
                   Duckling.Weight.Types.Gram
                   -> Duckling.Weight.Types.$fGenericUnit14 @ x
                   Duckling.Weight.Types.Jin
                   -> Duckling.Weight.Types.$fGenericUnit11 @ x
                   Duckling.Weight.Types.Kilogram
                   -> Duckling.Weight.Types.$fGenericUnit8 @ x
                   Duckling.Weight.Types.Pound
                   -> Duckling.Weight.Types.$fGenericUnit5 @ x
                   Duckling.Weight.Types.Tonne
                   -> Duckling.Weight.Types.$fGenericUnit2 @ x }) -}
e6f96a621e51c2fc20450ef68783d4d7
  $fGenericUnit10 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
293944a5890d2cfb50fcdafb69a65e42
  $fGenericUnit11 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Gram"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Tonne"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.Weight.Types.$fGenericUnit12 @ x)) -}
a28402e3601549927f6b4f848db7eb20
  $fGenericUnit12 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Duckling.Weight.Types.$fGenericUnit13 @ x)) -}
2120138210749351db45657bb67fe41e
  $fGenericUnit13 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
64ef043dba8911f73a725c109e8df11b
  $fGenericUnit14 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Gram"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Tonne"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.Weight.Types.$fGenericUnit15 @ x)) -}
7c2b2b1740451b6f1689c79605c0ccb2
  $fGenericUnit15 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Duckling.Weight.Types.$fGenericUnit16 @ x)) -}
449ec1ff7db67b5c32ed59be1faf7862
  $fGenericUnit16 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
8215c539e6a80a0021937c2b2441eaf6
  $fGenericUnit17 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Gram"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Tonne"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.Weight.Types.$fGenericUnit18 @ x)) -}
3652d01f764b79003cff681876acf355
  $fGenericUnit18 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Duckling.Weight.Types.$fGenericUnit19 @ x)) -}
ccfd1324e53abd0824964d2cac049200
  $fGenericUnit19 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
238a5175a64e93a1e222831038bd79f0
  $fGenericUnit2 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Gram"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Tonne"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.Weight.Types.$fGenericUnit3 @ x)) -}
c206784ab7c7a0861d4919b3e529d04b
  $fGenericUnit20 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Gram"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Tonne"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.Weight.Types.$fGenericUnit21 @ x)) -}
34f211e018a5f7e159a12b0a003ec6e5
  $fGenericUnit21 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
173d08363e281b008bb60026a2e2543d
  $fGenericUnit3 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Duckling.Weight.Types.$fGenericUnit4 @ x)) -}
cf02061510288a21cdfe80347b109265
  $fGenericUnit4 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
ef3739bae6f311929b356a9bdaf33cd4
  $fGenericUnit5 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Gram"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Tonne"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.Weight.Types.$fGenericUnit6 @ x)) -}
c3c96a4775420158faecd3cbe0ff4982
  $fGenericUnit6 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Duckling.Weight.Types.$fGenericUnit7 @ x)) -}
f8db7dac2286832eabee7cc1e3173d84
  $fGenericUnit7 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
800d3df9ee3df4d198fd472a7d4afd27
  $fGenericUnit8 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Gram"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Tonne"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.Weight.Types.$fGenericUnit9 @ x)) -}
68f3ee6fe240dfbcf01d406d211fe33d
  $fGenericUnit9 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Duckling.Weight.Types.$fGenericUnit10 @ x)) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fGenericUnit_$cfrom ::
    Duckling.Weight.Types.Unit
    -> GHC.Generics.Rep Duckling.Weight.Types.Unit x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Duckling.Weight.Types.$fGenericUnit1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Duckling.Weight.Types.Unit>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "Unit"
                                       "Duckling.Weight.Types"
                                       "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                       'GHC.Types.False>_P
                                    <(GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1
                                      GHC.Generics.:+: (GHC.Generics.M1
                                                          GHC.Generics.C
                                                          ('GHC.Generics.MetaCons
                                                             "Liang"
                                                             'GHC.Generics.PrefixI
                                                             'GHC.Types.False)
                                                          GHC.Generics.U1
                                                        GHC.Generics.:+: GHC.Generics.M1
                                                                           GHC.Generics.C
                                                                           ('GHC.Generics.MetaCons
                                                                              "Gram"
                                                                              'GHC.Generics.PrefixI
                                                                              'GHC.Types.False)
                                                                           GHC.Generics.U1))
                                     GHC.Generics.:+: ((GHC.Generics.M1
                                                          GHC.Generics.C
                                                          ('GHC.Generics.MetaCons
                                                             "Jin"
                                                             'GHC.Generics.PrefixI
                                                             'GHC.Types.False)
                                                          GHC.Generics.U1
                                                        GHC.Generics.:+: GHC.Generics.M1
                                                                           GHC.Generics.C
                                                                           ('GHC.Generics.MetaCons
                                                                              "Kilogram"
                                                                              'GHC.Generics.PrefixI
                                                                              'GHC.Types.False)
                                                                           GHC.Generics.U1)
                                                       GHC.Generics.:+: (GHC.Generics.M1
                                                                           GHC.Generics.C
                                                                           ('GHC.Generics.MetaCons
                                                                              "Pound"
                                                                              'GHC.Generics.PrefixI
                                                                              'GHC.Types.False)
                                                                           GHC.Generics.U1
                                                                         GHC.Generics.:+: GHC.Generics.M1
                                                                                            GHC.Generics.C
                                                                                            ('GHC.Generics.MetaCons
                                                                                               "Tonne"
                                                                                               'GHC.Generics.PrefixI
                                                                                               'GHC.Types.False)
                                                                                            GHC.Generics.U1))>_R))
                          (Sub (Sym (Duckling.Weight.Types.Rep_Unit[0]))) <x>_N) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fGenericUnit_$cto ::
    GHC.Generics.Rep Duckling.Weight.Types.Unit x
    -> Duckling.Weight.Types.Unit
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ x
                   (ds :: GHC.Generics.Rep Duckling.Weight.Types.Unit x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Duckling.Weight.Types.Rep_Unit[0]))
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.D>_P
                                <'GHC.Generics.MetaData
                                   "Unit"
                                   "Duckling.Weight.Types"
                                   "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                   'GHC.Types.False>_P
                                <(GHC.Generics.M1
                                    GHC.Generics.C
                                    ('GHC.Generics.MetaCons
                                       "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                  GHC.Generics.:+: (GHC.Generics.M1
                                                      GHC.Generics.C
                                                      ('GHC.Generics.MetaCons
                                                         "Liang"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: GHC.Generics.M1
                                                                       GHC.Generics.C
                                                                       ('GHC.Generics.MetaCons
                                                                          "Gram"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1))
                                 GHC.Generics.:+: ((GHC.Generics.M1
                                                      GHC.Generics.C
                                                      ('GHC.Generics.MetaCons
                                                         "Jin"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: GHC.Generics.M1
                                                                       GHC.Generics.C
                                                                       ('GHC.Generics.MetaCons
                                                                          "Kilogram"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1)
                                                   GHC.Generics.:+: (GHC.Generics.M1
                                                                       GHC.Generics.C
                                                                       ('GHC.Generics.MetaCons
                                                                          "Pound"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: GHC.Generics.M1
                                                                                        GHC.Generics.C
                                                                                        ('GHC.Generics.MetaCons
                                                                                           "Tonne"
                                                                                           'GHC.Generics.PrefixI
                                                                                           'GHC.Types.False)
                                                                                        GHC.Generics.U1))>_R) <x>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2 of tpl { DEFAULT -> Duckling.Weight.Types.Milligram }
                        GHC.Generics.R1 ds2
                        -> case ds2 of wild2 {
                             GHC.Generics.L1 ds3
                             -> case ds3 of tpl { DEFAULT -> Duckling.Weight.Types.Liang }
                             GHC.Generics.R1 ds3
                             -> case ds3 of tpl { DEFAULT -> Duckling.Weight.Types.Gram } } }
                   GHC.Generics.R1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2 of wild2 {
                             GHC.Generics.L1 ds3
                             -> case ds3 of tpl { DEFAULT -> Duckling.Weight.Types.Jin }
                             GHC.Generics.R1 ds3
                             -> case ds3 of tpl { DEFAULT -> Duckling.Weight.Types.Kilogram } }
                        GHC.Generics.R1 ds2
                        -> case ds2 of wild2 {
                             GHC.Generics.L1 ds3
                             -> case ds3 of tpl { DEFAULT -> Duckling.Weight.Types.Pound }
                             GHC.Generics.R1 ds3
                             -> case ds3 of tpl { DEFAULT ->
                                Duckling.Weight.Types.Tonne } } } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fGenericWeightData ::
    GHC.Generics.Generic Duckling.Weight.Types.WeightData
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.WeightData
                  Duckling.Weight.Types.$fGenericWeightData_$cfrom
                  Duckling.Weight.Types.$fGenericWeightData_$cto -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fGenericWeightData1 ::
    Duckling.Weight.Types.WeightData
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "WeightData" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "unit")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1
                GHC.Generics.R (GHC.Base.Maybe Duckling.Weight.Types.Unit))
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "value")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "minValue")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double))
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "maxValue")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  (GHC.Base.Maybe GHC.Types.Double))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Duckling.Weight.Types.WeightData) ->
                 case x1 of wild { Duckling.Weight.Types.WeightData g1 g2 g3 g4 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "unit")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1
                            GHC.Generics.R (GHC.Base.Maybe Duckling.Weight.Types.Unit))
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "value")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "minValue")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double))
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "maxValue")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
                    @ x
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "unit")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R (GHC.Base.Maybe Duckling.Weight.Types.Unit)))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "value")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
                       @ x
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P
                                      <GHC.Base.Maybe Duckling.Weight.Types.Unit>_R
                                      <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "unit")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R
                                         (GHC.Base.Maybe Duckling.Weight.Types.Unit)>_R) <x>_N))
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.Maybe GHC.Types.Double>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "value")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R
                                         (GHC.Base.Maybe GHC.Types.Double)>_R) <x>_N)))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "minValue")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "maxValue")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
                       @ x
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.Maybe GHC.Types.Double>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "minValue")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R
                                         (GHC.Base.Maybe GHC.Types.Double)>_R) <x>_N))
                       g4
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.Maybe GHC.Types.Double>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "maxValue")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R
                                         (GHC.Base.Maybe GHC.Types.Double)>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "WeightData" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "unit")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R (GHC.Base.Maybe Duckling.Weight.Types.Unit))
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "value")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   (GHC.Base.Maybe GHC.Types.Double)))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "minValue")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double))
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "maxValue")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    (GHC.Base.Maybe
                                                                       GHC.Types.Double)))>_R) <x>_N) }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fGenericWeightData_$cfrom ::
    Duckling.Weight.Types.WeightData
    -> GHC.Generics.Rep Duckling.Weight.Types.WeightData x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Duckling.Weight.Types.$fGenericWeightData1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Duckling.Weight.Types.WeightData>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "WeightData"
                                       "Duckling.Weight.Types"
                                       "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "WeightData" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       ((GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "unit")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              (GHC.Base.Maybe Duckling.Weight.Types.Unit))
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "value")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               (GHC.Base.Maybe GHC.Types.Double)))
                                        GHC.Generics.:*: (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "minValue")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               (GHC.Base.Maybe GHC.Types.Double))
                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                             GHC.Generics.S
                                                                             ('GHC.Generics.MetaSel
                                                                                ('GHC.Base.Just
                                                                                   "maxValue")
                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                'GHC.Generics.NoSourceStrictness
                                                                                'GHC.Generics.DecidedLazy)
                                                                             (GHC.Generics.K1
                                                                                GHC.Generics.R
                                                                                (GHC.Base.Maybe
                                                                                   GHC.Types.Double))))>_R))
                          (Sub (Sym (Duckling.Weight.Types.Rep_WeightData[0]))) <x>_N) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fGenericWeightData_$cto ::
    GHC.Generics.Rep Duckling.Weight.Types.WeightData x
    -> Duckling.Weight.Types.WeightData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U),1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x
                   (ds :: GHC.Generics.Rep Duckling.Weight.Types.WeightData x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Duckling.Weight.Types.Rep_WeightData[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "WeightData"
                                        "Duckling.Weight.Types"
                                        "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "WeightData" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "unit")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R
                                               (GHC.Base.Maybe Duckling.Weight.Types.Unit))
                                          GHC.Generics.:*: GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "value")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                (GHC.Base.Maybe GHC.Types.Double)))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "minValue")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                (GHC.Base.Maybe GHC.Types.Double))
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "maxValue")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 (GHC.Base.Maybe
                                                                                    GHC.Types.Double))))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "WeightData" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "unit")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1
                                            GHC.Generics.R
                                            (GHC.Base.Maybe Duckling.Weight.Types.Unit))
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "value")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             (GHC.Base.Maybe GHC.Types.Double)))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "minValue")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             (GHC.Base.Maybe GHC.Types.Double))
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "maxValue")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              (GHC.Base.Maybe
                                                                                 GHC.Types.Double)))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds1 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 case ds2 of wild2 { GHC.Generics.:*: ds5 ds6 ->
                 Duckling.Weight.Types.WeightData
                   ds3
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "unit")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R
                                (GHC.Base.Maybe Duckling.Weight.Types.Unit)>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P
                             <GHC.Base.Maybe Duckling.Weight.Types.Unit>_R
                             <x>_P))
                   ds4
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "value")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.Maybe GHC.Types.Double>_R <x>_P))
                   ds5
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "minValue")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.Maybe GHC.Types.Double>_R <x>_P))
                   ds6
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "maxValue")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P
                             <GHC.Base.Maybe GHC.Types.Double>_R
                             <x>_P)) } } }) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fHashableIntervalDirection ::
    Data.Hashable.Class.Hashable
      Duckling.Weight.Types.IntervalDirection
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.IntervalDirection
                  Duckling.Weight.Types.$fHashableIntervalDirection_$s$dmhashWithSalt
                  Duckling.Weight.Types.$fHashableIntervalDirection_$chash -}
96aef34b713175e620816ce5521101dc
  $fHashableIntervalDirection1 ::
    Data.Hashable.Class.GHashable
      Data.Hashable.Class.Zero
      (GHC.Generics.D1
         ('GHC.Generics.MetaData
            "IntervalDirection"
            "Duckling.Weight.Types"
            "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
            'GHC.Types.False)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1))
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S(S),1*U(U)><S,1*U>m,
     Unfolding: InlineRule (0, True, True)
                Duckling.Weight.Types.$fHashableIntervalDirection2
                  `cast`
                (Sym (Data.Hashable.Class.N:GHashable[0]
                          <Data.Hashable.Class.Zero>_N
                          <GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "IntervalDirection"
                                "Duckling.Weight.Types"
                                "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                'GHC.Types.False)
                             (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1)>_N)) -}
88d778238b7f22d245491be423272c65
  $fHashableIntervalDirection2 ::
    Data.Hashable.Class.HashArgs Data.Hashable.Class.Zero a1
    -> GHC.Types.Int
    -> GHC.Generics.M1
         GHC.Generics.D
         ('GHC.Generics.MetaData
            "IntervalDirection"
            "Duckling.Weight.Types"
            "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
            'GHC.Types.False)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         a1
    -> GHC.Types.Int
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S(S),1*U(U)><S,1*U>m,
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (targs :: Data.Hashable.Class.HashArgs Data.Hashable.Class.Zero a1)
                   (salt :: GHC.Types.Int)
                   (x :: GHC.Generics.M1
                           GHC.Generics.D
                           ('GHC.Generics.MetaData
                              "IntervalDirection"
                              "Duckling.Weight.Types"
                              "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                              'GHC.Types.False)
                           (GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1)
                           a1) ->
                 case salt of ww { GHC.Types.I# ww1 ->
                 case x `cast`
                      (GHC.Generics.N:M1[0]
                           <GHC.Generics.D>_P
                           <'GHC.Generics.MetaData
                              "IntervalDirection"
                              "Duckling.Weight.Types"
                              "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                              'GHC.Types.False>_P
                           <GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1>_R <a1>_N) of wild {
                   GHC.Generics.L1 x1
                   -> case x1 of tpl { DEFAULT ->
                      GHC.Types.I# (GHC.Prim.*# (GHC.Prim.*# ww1 16777619#) 16777619#) }
                   GHC.Generics.R1 x1
                   -> case x1 of tpl { DEFAULT ->
                      GHC.Types.I#
                        (GHC.Prim.*#
                           (GHC.Prim.xorI# (GHC.Prim.*# ww1 16777619#) 1#)
                           16777619#) } } }) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fHashableIntervalDirection_$chash ::
    Duckling.Weight.Types.IntervalDirection -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (x :: Duckling.Weight.Types.IntervalDirection) ->
                 case x of wild {
                   Duckling.Weight.Types.Above -> GHC.Types.I# -7234408896634655932#
                   Duckling.Weight.Types.Under
                   -> GHC.Types.I# -7234408896617878313# }) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fHashableIntervalDirection_$s$dmhashWithSalt ::
    GHC.Types.Int
    -> Duckling.Weight.Types.IntervalDirection -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,1*U>m,
     Unfolding: InlineRule (-3, True, False)
                (\ (salt :: GHC.Types.Int)
                   (x :: Duckling.Weight.Types.IntervalDirection) ->
                 Duckling.Weight.Types.$fHashableIntervalDirection1
                   `cast`
                 (Data.Hashable.Class.N:GHashable[0]
                      <Data.Hashable.Class.Zero>_N
                      (Sym (Duckling.Weight.Types.Rep_IntervalDirection[0])))
                   @ GHC.Prim.Any
                   (Data.Hashable.Class.$WHashArgs0 @ GHC.Prim.Any)
                   salt
                   (Duckling.Weight.Types.$fGenericIntervalDirection_$cfrom
                      @ GHC.Prim.Any
                      x)) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fHashableUnit ::
    Data.Hashable.Class.Hashable Duckling.Weight.Types.Unit
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.Unit
                  Duckling.Weight.Types.$fHashableUnit_$chashWithSalt
                  Duckling.Weight.Types.$fHashableUnit_$chash -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fHashableUnit_$chash ::
    Duckling.Weight.Types.Unit -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (Duckling.Weight.Types.$fHashableUnit_$chashWithSalt
                   Data.Hashable.Class.defaultSalt) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fHashableUnit_$chashWithSalt ::
    GHC.Types.Int -> Duckling.Weight.Types.Unit -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,1*U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Duckling.Weight.Types.Unit) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of wild {
                   Duckling.Weight.Types.Milligram
                   -> GHC.Types.I# (GHC.Prim.*# (GHC.Prim.*# ww1 16777619#) 16777619#)
                   Duckling.Weight.Types.Liang
                   -> GHC.Types.I#
                        (GHC.Prim.*#
                           (GHC.Prim.xorI# (GHC.Prim.*# ww1 16777619#) 1#)
                           16777619#)
                   Duckling.Weight.Types.Gram
                   -> GHC.Types.I#
                        (GHC.Prim.*#
                           (GHC.Prim.xorI# (GHC.Prim.*# ww1 16777619#) 2#)
                           16777619#)
                   Duckling.Weight.Types.Jin
                   -> GHC.Types.I#
                        (GHC.Prim.*#
                           (GHC.Prim.xorI# (GHC.Prim.*# ww1 16777619#) 3#)
                           16777619#)
                   Duckling.Weight.Types.Kilogram
                   -> GHC.Types.I#
                        (GHC.Prim.*#
                           (GHC.Prim.xorI# (GHC.Prim.*# ww1 16777619#) 4#)
                           16777619#)
                   Duckling.Weight.Types.Pound
                   -> GHC.Types.I#
                        (GHC.Prim.*#
                           (GHC.Prim.xorI# (GHC.Prim.*# ww1 16777619#) 5#)
                           16777619#)
                   Duckling.Weight.Types.Tonne
                   -> GHC.Types.I#
                        (GHC.Prim.*#
                           (GHC.Prim.xorI# (GHC.Prim.*# ww1 16777619#) 6#)
                           16777619#) } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fHashableWeightData ::
    Data.Hashable.Class.Hashable Duckling.Weight.Types.WeightData
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.WeightData
                  Duckling.Weight.Types.$fHashableWeightData_$chashWithSalt
                  Duckling.Weight.Types.$fHashableWeightData_$chash -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fHashableWeightData_$chash ::
    Duckling.Weight.Types.WeightData -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (Duckling.Weight.Types.$fHashableWeightData_$chashWithSalt
                   Data.Hashable.Class.defaultSalt) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fHashableWeightData_$chashWithSalt ::
    GHC.Types.Int -> Duckling.Weight.Types.WeightData -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(SSSS),1*U(1*U,1*U,1*U,1*U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Duckling.Weight.Types.WeightData) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Duckling.Weight.Types.WeightData ww3 ww4 ww5 ww6 ->
                 case Duckling.Weight.Types.$w$dGHashable1
                        @ GHC.Prim.Any
                        ww1
                        ww3
                          `cast`
                        (Trans
                             (Sym (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P
                                       <GHC.Base.Maybe Duckling.Weight.Types.Unit>_R
                                       <GHC.Prim.Any>_P))
                             (Sym (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "unit")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          (GHC.Base.Maybe
                                             Duckling.Weight.Types.Unit)>_R) <GHC.Prim.Any>_N))
                        ww4
                          `cast`
                        (Trans
                             (Sym (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P
                                       <GHC.Base.Maybe GHC.Types.Double>_R
                                       <GHC.Prim.Any>_P))
                             (Sym (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "value")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          (GHC.Base.Maybe
                                             GHC.Types.Double)>_R) <GHC.Prim.Any>_N)) of ww7 { DEFAULT ->
                 case Duckling.Weight.Types.$w$dGHashable
                        @ GHC.Prim.Any
                        ww7
                        ww5
                          `cast`
                        (Trans
                             (Sym (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P
                                       <GHC.Base.Maybe GHC.Types.Double>_R
                                       <GHC.Prim.Any>_P))
                             (Sym (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "minValue")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          (GHC.Base.Maybe GHC.Types.Double)>_R) <GHC.Prim.Any>_N))
                        ww6
                          `cast`
                        (Trans
                             (Sym (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P
                                       <GHC.Base.Maybe GHC.Types.Double>_R
                                       <GHC.Prim.Any>_P))
                             (Sym (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "maxValue")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          (GHC.Base.Maybe
                                             GHC.Types.Double)>_R) <GHC.Prim.Any>_N)) of ww8 { DEFAULT ->
                 GHC.Types.I# ww8 } } } }) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fNFDataIntervalDirection ::
    Control.DeepSeq.NFData Duckling.Weight.Types.IntervalDirection
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Duckling.Weight.Types.$fNFDataIntervalDirection_$s$dmrnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Duckling.Weight.Types.IntervalDirection>_N)) -}
7505a42e64d1b044f7febdd95658bc54
  $fNFDataIntervalDirection1 ::
    Control.DeepSeq.GNFData
      (GHC.Generics.D1
         ('GHC.Generics.MetaData
            "IntervalDirection"
            "Duckling.Weight.Types"
            "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
            'GHC.Types.False)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Duckling.Weight.Types.$fNFDataIntervalDirection2
                  `cast`
                (Sym (Control.DeepSeq.N:GNFData[0]
                          <GHC.Types.*>_N
                          <GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "IntervalDirection"
                                "Duckling.Weight.Types"
                                "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                'GHC.Types.False)
                             (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1)>_N)) -}
4e847644b9000e809e8ef57e0c6cb906
  $fNFDataIntervalDirection2 ::
    GHC.Generics.M1
      GHC.Generics.D
      ('GHC.Generics.MetaData
         "IntervalDirection"
         "Duckling.Weight.Types"
         "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
         'GHC.Types.False)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.C1
                          ('GHC.Generics.MetaCons
                             "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      a1
    -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a1
                   (x :: GHC.Generics.M1
                           GHC.Generics.D
                           ('GHC.Generics.MetaData
                              "IntervalDirection"
                              "Duckling.Weight.Types"
                              "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                              'GHC.Types.False)
                           (GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1)
                           a1) ->
                 case x `cast`
                      (GHC.Generics.N:M1[0]
                           <GHC.Generics.D>_P
                           <'GHC.Generics.MetaData
                              "IntervalDirection"
                              "Duckling.Weight.Types"
                              "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                              'GHC.Types.False>_P
                           <GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1>_R <a1>_N) of wild {
                   GHC.Generics.L1 x1 -> case x1 of tpl { DEFAULT -> GHC.Tuple.() }
                   GHC.Generics.R1 x1
                   -> case x1 of tpl { DEFAULT -> GHC.Tuple.() } }) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fNFDataIntervalDirection_$s$dmrnf ::
    Duckling.Weight.Types.IntervalDirection -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (-3, True, False)
                (\ (eta :: Duckling.Weight.Types.IntervalDirection) ->
                 Duckling.Weight.Types.$fNFDataIntervalDirection1
                   `cast`
                 (Control.DeepSeq.N:GNFData[0]
                      <GHC.Types.*>_N
                      (Sym (Duckling.Weight.Types.Rep_IntervalDirection[0])))
                   @ GHC.Prim.Any
                   (Duckling.Weight.Types.$fGenericIntervalDirection_$cfrom
                      @ GHC.Prim.Any
                      eta)) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fNFDataUnit :: Control.DeepSeq.NFData Duckling.Weight.Types.Unit
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Duckling.Weight.Types.$fNFDataUnit_$s$dmrnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Duckling.Weight.Types.Unit>_N)) -}
4efc58f83cb46129bb3e6731fe88e64b
  $fNFDataUnit1 ::
    Control.DeepSeq.GNFData
      (GHC.Generics.D1
         ('GHC.Generics.MetaData
            "Unit"
            "Duckling.Weight.Types"
            "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
            'GHC.Types.False)
         ((GHC.Generics.C1
             ('GHC.Generics.MetaCons
                "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
             GHC.Generics.U1
           GHC.Generics.:+: (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1))
          GHC.Generics.:+: ((GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Kilogram"
                                                   'GHC.Generics.PrefixI
                                                   'GHC.Types.False)
                                                GHC.Generics.U1)
                            GHC.Generics.:+: (GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1
                                              GHC.Generics.:+: GHC.Generics.C1
                                                                 ('GHC.Generics.MetaCons
                                                                    "Tonne"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.False)
                                                                 GHC.Generics.U1))))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Duckling.Weight.Types.$fNFDataUnit2
                  `cast`
                (Trans
                     (forall (a1 :: <GHC.Types.*>_N).
                      Sym (GHC.Generics.N:M1[0]
                               <GHC.Generics.D>_P
                               <'GHC.Generics.MetaData
                                  "Unit"
                                  "Duckling.Weight.Types"
                                  "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                  'GHC.Types.False>_P
                               <(GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: (GHC.Generics.C1
                                                     ('GHC.Generics.MetaCons
                                                        "Liang"
                                                        'GHC.Generics.PrefixI
                                                        'GHC.Types.False)
                                                     GHC.Generics.U1
                                                   GHC.Generics.:+: GHC.Generics.C1
                                                                      ('GHC.Generics.MetaCons
                                                                         "Gram"
                                                                         'GHC.Generics.PrefixI
                                                                         'GHC.Types.False)
                                                                      GHC.Generics.U1))
                                GHC.Generics.:+: ((GHC.Generics.C1
                                                     ('GHC.Generics.MetaCons
                                                        "Jin"
                                                        'GHC.Generics.PrefixI
                                                        'GHC.Types.False)
                                                     GHC.Generics.U1
                                                   GHC.Generics.:+: GHC.Generics.C1
                                                                      ('GHC.Generics.MetaCons
                                                                         "Kilogram"
                                                                         'GHC.Generics.PrefixI
                                                                         'GHC.Types.False)
                                                                      GHC.Generics.U1)
                                                  GHC.Generics.:+: (GHC.Generics.C1
                                                                      ('GHC.Generics.MetaCons
                                                                         "Pound"
                                                                         'GHC.Generics.PrefixI
                                                                         'GHC.Types.False)
                                                                      GHC.Generics.U1
                                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                                       ('GHC.Generics.MetaCons
                                                                                          "Tonne"
                                                                                          'GHC.Generics.PrefixI
                                                                                          'GHC.Types.False)
                                                                                       GHC.Generics.U1))>_R) <a1>_N
                      ->_R <()>_R)
                     (Sym (Control.DeepSeq.N:GNFData[0]
                               <GHC.Types.*>_N
                               <GHC.Generics.M1
                                  GHC.Generics.D
                                  ('GHC.Generics.MetaData
                                     "Unit"
                                     "Duckling.Weight.Types"
                                     "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                     'GHC.Types.False)
                                  ((GHC.Generics.C1
                                      ('GHC.Generics.MetaCons
                                         "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1
                                    GHC.Generics.:+: (GHC.Generics.C1
                                                        ('GHC.Generics.MetaCons
                                                           "Liang"
                                                           'GHC.Generics.PrefixI
                                                           'GHC.Types.False)
                                                        GHC.Generics.U1
                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                         ('GHC.Generics.MetaCons
                                                                            "Gram"
                                                                            'GHC.Generics.PrefixI
                                                                            'GHC.Types.False)
                                                                         GHC.Generics.U1))
                                   GHC.Generics.:+: ((GHC.Generics.C1
                                                        ('GHC.Generics.MetaCons
                                                           "Jin"
                                                           'GHC.Generics.PrefixI
                                                           'GHC.Types.False)
                                                        GHC.Generics.U1
                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                         ('GHC.Generics.MetaCons
                                                                            "Kilogram"
                                                                            'GHC.Generics.PrefixI
                                                                            'GHC.Types.False)
                                                                         GHC.Generics.U1)
                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                         ('GHC.Generics.MetaCons
                                                                            "Pound"
                                                                            'GHC.Generics.PrefixI
                                                                            'GHC.Types.False)
                                                                         GHC.Generics.U1
                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                          ('GHC.Generics.MetaCons
                                                                                             "Tonne"
                                                                                             'GHC.Generics.PrefixI
                                                                                             'GHC.Types.False)
                                                                                          GHC.Generics.U1)))>_N))) -}
d3032dfe589645cc8519c7c5f1d1c4c5
  $fNFDataUnit2 ::
    (GHC.Generics.:+:)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.C1
                           ('GHC.Generics.MetaCons
                              "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.C1
                                            ('GHC.Generics.MetaCons
                                               "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      ((GHC.Generics.C1
          ('GHC.Generics.MetaCons
             "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: GHC.Generics.C1
                           ('GHC.Generics.MetaCons
                              "Kilogram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
       GHC.Generics.:+: (GHC.Generics.C1
                           ('GHC.Generics.MetaCons
                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.C1
                                            ('GHC.Generics.MetaCons
                                               "Tonne" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      a1
    -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ a1
                   (ds :: (GHC.Generics.:+:)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: (GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1
                                               GHC.Generics.:+: GHC.Generics.C1
                                                                  ('GHC.Generics.MetaCons
                                                                     "Gram"
                                                                     'GHC.Generics.PrefixI
                                                                     'GHC.Types.False)
                                                                  GHC.Generics.U1))
                            ((GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Kilogram"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1)
                             GHC.Generics.:+: (GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1
                                               GHC.Generics.:+: GHC.Generics.C1
                                                                  ('GHC.Generics.MetaCons
                                                                     "Tonne"
                                                                     'GHC.Generics.PrefixI
                                                                     'GHC.Types.False)
                                                                  GHC.Generics.U1))
                            a1) ->
                 case ds of wild {
                   GHC.Generics.L1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1 -> case x1 of tpl { DEFAULT -> GHC.Tuple.() }
                        GHC.Generics.R1 x1
                        -> case x1 of wild2 {
                             GHC.Generics.L1 x2 -> case x2 of tpl { DEFAULT -> GHC.Tuple.() }
                             GHC.Generics.R1 x2
                             -> case x2 of tpl { DEFAULT -> GHC.Tuple.() } } }
                   GHC.Generics.R1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1
                        -> case x1 of wild2 {
                             GHC.Generics.L1 x2 -> case x2 of tpl { DEFAULT -> GHC.Tuple.() }
                             GHC.Generics.R1 x2 -> case x2 of tpl { DEFAULT -> GHC.Tuple.() } }
                        GHC.Generics.R1 x1
                        -> case x1 of wild2 {
                             GHC.Generics.L1 x2 -> case x2 of tpl { DEFAULT -> GHC.Tuple.() }
                             GHC.Generics.R1 x2
                             -> case x2 of tpl { DEFAULT -> GHC.Tuple.() } } } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fNFDataUnit_$s$dmrnf :: Duckling.Weight.Types.Unit -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (-3, True, False)
                (\ (eta :: Duckling.Weight.Types.Unit) ->
                 Duckling.Weight.Types.$fNFDataUnit1
                   `cast`
                 (Control.DeepSeq.N:GNFData[0]
                      <GHC.Types.*>_N (Sym (Duckling.Weight.Types.Rep_Unit[0])))
                   @ GHC.Prim.Any
                   (Duckling.Weight.Types.$fGenericUnit_$cfrom @ GHC.Prim.Any eta)) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fNFDataWeightData ::
    Control.DeepSeq.NFData Duckling.Weight.Types.WeightData
  DFunId
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SSSS),1*U(1*U,1*U,1*U,1*U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Duckling.Weight.Types.$fNFDataWeightData_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Duckling.Weight.Types.WeightData>_N)) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fNFDataWeightData_$crnf :: Duckling.Weight.Types.WeightData -> ()
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SSSS),1*U(1*U,1*U,1*U,1*U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Duckling.Weight.Types.WeightData) ->
                 case w of ww { Duckling.Weight.Types.WeightData ww1 ww2 ww3 ww4 ->
                 Duckling.Weight.Types.$w$crnf ww1 ww2 ww3 ww4 }) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fOrdIntervalDirection ::
    GHC.Classes.Ord Duckling.Weight.Types.IntervalDirection
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.IntervalDirection
                  Duckling.Weight.Types.$fEqIntervalDirection
                  Duckling.Weight.Types.$fOrdIntervalDirection_$ccompare
                  Duckling.Weight.Types.$fOrdIntervalDirection_$c<
                  Duckling.Weight.Types.$fOrdIntervalDirection_$c<=
                  Duckling.Weight.Types.$fOrdIntervalDirection_$c>
                  Duckling.Weight.Types.$fOrdIntervalDirection_$c>=
                  Duckling.Weight.Types.$fOrdIntervalDirection_$cmax
                  Duckling.Weight.Types.$fOrdIntervalDirection_$cmin -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fOrdIntervalDirection_$c< ::
    Duckling.Weight.Types.IntervalDirection
    -> Duckling.Weight.Types.IntervalDirection -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.Weight.Types.IntervalDirection)
                   (b :: Duckling.Weight.Types.IntervalDirection) ->
                 case a of wild {
                   Duckling.Weight.Types.Above
                   -> case b of wild1 {
                        Duckling.Weight.Types.Above -> GHC.Types.False
                        Duckling.Weight.Types.Under -> GHC.Types.True }
                   Duckling.Weight.Types.Under
                   -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fOrdIntervalDirection_$c<= ::
    Duckling.Weight.Types.IntervalDirection
    -> Duckling.Weight.Types.IntervalDirection -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.Weight.Types.IntervalDirection)
                   (b :: Duckling.Weight.Types.IntervalDirection) ->
                 case a of wild {
                   Duckling.Weight.Types.Above
                   -> case b of wild1 { DEFAULT -> GHC.Types.True }
                   Duckling.Weight.Types.Under
                   -> case b of wild1 {
                        Duckling.Weight.Types.Above -> GHC.Types.False
                        Duckling.Weight.Types.Under -> GHC.Types.True } }) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fOrdIntervalDirection_$c> ::
    Duckling.Weight.Types.IntervalDirection
    -> Duckling.Weight.Types.IntervalDirection -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.Weight.Types.IntervalDirection)
                   (b :: Duckling.Weight.Types.IntervalDirection) ->
                 case a of wild {
                   Duckling.Weight.Types.Above
                   -> case b of wild1 { DEFAULT -> GHC.Types.False }
                   Duckling.Weight.Types.Under
                   -> case b of wild1 {
                        Duckling.Weight.Types.Above -> GHC.Types.True
                        Duckling.Weight.Types.Under -> GHC.Types.False } }) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fOrdIntervalDirection_$c>= ::
    Duckling.Weight.Types.IntervalDirection
    -> Duckling.Weight.Types.IntervalDirection -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.Weight.Types.IntervalDirection)
                   (b :: Duckling.Weight.Types.IntervalDirection) ->
                 case a of wild {
                   Duckling.Weight.Types.Above
                   -> case b of wild1 {
                        Duckling.Weight.Types.Above -> GHC.Types.True
                        Duckling.Weight.Types.Under -> GHC.Types.False }
                   Duckling.Weight.Types.Under
                   -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fOrdIntervalDirection_$ccompare ::
    Duckling.Weight.Types.IntervalDirection
    -> Duckling.Weight.Types.IntervalDirection -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.Weight.Types.IntervalDirection)
                   (b :: Duckling.Weight.Types.IntervalDirection) ->
                 case a of wild {
                   Duckling.Weight.Types.Above
                   -> case b of wild1 {
                        Duckling.Weight.Types.Above -> GHC.Types.EQ
                        Duckling.Weight.Types.Under -> GHC.Types.LT }
                   Duckling.Weight.Types.Under
                   -> case b of wild1 {
                        Duckling.Weight.Types.Above -> GHC.Types.GT
                        Duckling.Weight.Types.Under -> GHC.Types.EQ } }) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fOrdIntervalDirection_$cmax ::
    Duckling.Weight.Types.IntervalDirection
    -> Duckling.Weight.Types.IntervalDirection
    -> Duckling.Weight.Types.IntervalDirection
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Duckling.Weight.Types.IntervalDirection)
                   (y :: Duckling.Weight.Types.IntervalDirection) ->
                 case x of wild {
                   Duckling.Weight.Types.Above -> y
                   Duckling.Weight.Types.Under
                   -> case y of wild1 { DEFAULT -> Duckling.Weight.Types.Under } }) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fOrdIntervalDirection_$cmin ::
    Duckling.Weight.Types.IntervalDirection
    -> Duckling.Weight.Types.IntervalDirection
    -> Duckling.Weight.Types.IntervalDirection
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Duckling.Weight.Types.IntervalDirection)
                   (y :: Duckling.Weight.Types.IntervalDirection) ->
                 case x of wild {
                   Duckling.Weight.Types.Above
                   -> case y of wild1 { DEFAULT -> Duckling.Weight.Types.Above }
                   Duckling.Weight.Types.Under -> y }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdSingleValue ::
    GHC.Classes.Ord Duckling.Weight.Types.SingleValue
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.SingleValue
                  Duckling.Weight.Types.$fEqSingleValue
                  Duckling.Weight.Types.$fOrdSingleValue_$ccompare
                  Duckling.Weight.Types.$fOrdSingleValue_$c<
                  Duckling.Weight.Types.$fOrdSingleValue_$c<=
                  Duckling.Weight.Types.$fOrdSingleValue_$c>
                  Duckling.Weight.Types.$fOrdSingleValue_$c>=
                  Duckling.Weight.Types.$fOrdSingleValue_$cmax
                  Duckling.Weight.Types.$fOrdSingleValue_$cmin -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdSingleValue_$c< ::
    Duckling.Weight.Types.SingleValue
    -> Duckling.Weight.Types.SingleValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(U))><S(SL),1*U(1*U,1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Weight.Types.SingleValue)
                   (w1 :: Duckling.Weight.Types.SingleValue) ->
                 case w of ww { Duckling.Weight.Types.SingleValue ww1 ww2 ->
                 case w1 of ww3 { Duckling.Weight.Types.SingleValue ww4 ww5 ->
                 Duckling.Weight.Types.$w$c< ww1 ww2 ww4 ww5 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdSingleValue_$c<= ::
    Duckling.Weight.Types.SingleValue
    -> Duckling.Weight.Types.SingleValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(U))><S(SL),1*U(1*U,1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Weight.Types.SingleValue)
                   (w1 :: Duckling.Weight.Types.SingleValue) ->
                 case w of ww { Duckling.Weight.Types.SingleValue ww1 ww2 ->
                 case w1 of ww3 { Duckling.Weight.Types.SingleValue ww4 ww5 ->
                 Duckling.Weight.Types.$w$c<= ww1 ww2 ww4 ww5 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdSingleValue_$c> ::
    Duckling.Weight.Types.SingleValue
    -> Duckling.Weight.Types.SingleValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(U))><S(SL),1*U(1*U,1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Weight.Types.SingleValue)
                   (w1 :: Duckling.Weight.Types.SingleValue) ->
                 case w of ww { Duckling.Weight.Types.SingleValue ww1 ww2 ->
                 case w1 of ww3 { Duckling.Weight.Types.SingleValue ww4 ww5 ->
                 Duckling.Weight.Types.$w$c> ww1 ww2 ww4 ww5 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdSingleValue_$c>= ::
    Duckling.Weight.Types.SingleValue
    -> Duckling.Weight.Types.SingleValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(U))><S(SL),1*U(1*U,1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Weight.Types.SingleValue)
                   (w1 :: Duckling.Weight.Types.SingleValue) ->
                 case w of ww { Duckling.Weight.Types.SingleValue ww1 ww2 ->
                 case w1 of ww3 { Duckling.Weight.Types.SingleValue ww4 ww5 ->
                 Duckling.Weight.Types.$w$c>= ww1 ww2 ww4 ww5 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdSingleValue_$ccompare ::
    Duckling.Weight.Types.SingleValue
    -> Duckling.Weight.Types.SingleValue -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(U))><S(SL),1*U(1*U,1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Weight.Types.SingleValue)
                   (w1 :: Duckling.Weight.Types.SingleValue) ->
                 case w of ww { Duckling.Weight.Types.SingleValue ww1 ww2 ->
                 case w1 of ww3 { Duckling.Weight.Types.SingleValue ww4 ww5 ->
                 Duckling.Weight.Types.$w$ccompare ww1 ww2 ww4 ww5 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdSingleValue_$cmax ::
    Duckling.Weight.Types.SingleValue
    -> Duckling.Weight.Types.SingleValue
    -> Duckling.Weight.Types.SingleValue
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(U,U(U))><S(SL),1*U(U,U(U))>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Weight.Types.SingleValue)
                   (w1 :: Duckling.Weight.Types.SingleValue) ->
                 case w of ww { Duckling.Weight.Types.SingleValue ww1 ww2 ->
                 case w1 of ww3 { Duckling.Weight.Types.SingleValue ww4 ww5 ->
                 case ww1 of wild {
                   Duckling.Weight.Types.Milligram
                   -> case ww4 of wild1 {
                        Duckling.Weight.Types.Milligram
                        -> case ww2 of wild2 { GHC.Types.D# x ->
                           case ww5 of wild3 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=## x y) of wild4 {
                             GHC.Types.False
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Milligram
                                  wild2
                             GHC.Types.True
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Milligram
                                  wild3 } } }
                        Duckling.Weight.Types.Liang
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Liang
                             ww5
                        Duckling.Weight.Types.Gram
                        -> Duckling.Weight.Types.SingleValue Duckling.Weight.Types.Gram ww5
                        Duckling.Weight.Types.Jin
                        -> Duckling.Weight.Types.SingleValue Duckling.Weight.Types.Jin ww5
                        Duckling.Weight.Types.Kilogram
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Kilogram
                             ww5
                        Duckling.Weight.Types.Pound
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Pound
                             ww5
                        Duckling.Weight.Types.Tonne
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Tonne
                             ww5 }
                   Duckling.Weight.Types.Liang
                   -> case ww4 of wild1 {
                        Duckling.Weight.Types.Milligram
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Liang
                             ww2
                        Duckling.Weight.Types.Liang
                        -> case ww2 of wild2 { GHC.Types.D# x ->
                           case ww5 of wild3 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=## x y) of wild4 {
                             GHC.Types.False
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Liang
                                  wild2
                             GHC.Types.True
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Liang
                                  wild3 } } }
                        Duckling.Weight.Types.Gram
                        -> Duckling.Weight.Types.SingleValue Duckling.Weight.Types.Gram ww5
                        Duckling.Weight.Types.Jin
                        -> Duckling.Weight.Types.SingleValue Duckling.Weight.Types.Jin ww5
                        Duckling.Weight.Types.Kilogram
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Kilogram
                             ww5
                        Duckling.Weight.Types.Pound
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Pound
                             ww5
                        Duckling.Weight.Types.Tonne
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Tonne
                             ww5 }
                   Duckling.Weight.Types.Gram
                   -> case ww4 of wild1 {
                        DEFAULT
                        -> Duckling.Weight.Types.SingleValue Duckling.Weight.Types.Gram ww2
                        Duckling.Weight.Types.Gram
                        -> case ww2 of wild2 { GHC.Types.D# x ->
                           case ww5 of wild3 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=## x y) of wild4 {
                             GHC.Types.False
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Gram
                                  wild2
                             GHC.Types.True
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Gram
                                  wild3 } } }
                        Duckling.Weight.Types.Jin
                        -> Duckling.Weight.Types.SingleValue Duckling.Weight.Types.Jin ww5
                        Duckling.Weight.Types.Kilogram
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Kilogram
                             ww5
                        Duckling.Weight.Types.Pound
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Pound
                             ww5
                        Duckling.Weight.Types.Tonne
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Tonne
                             ww5 }
                   Duckling.Weight.Types.Jin
                   -> case ww4 of wild1 {
                        DEFAULT
                        -> Duckling.Weight.Types.SingleValue Duckling.Weight.Types.Jin ww2
                        Duckling.Weight.Types.Jin
                        -> case ww2 of wild2 { GHC.Types.D# x ->
                           case ww5 of wild3 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=## x y) of wild4 {
                             GHC.Types.False
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Jin
                                  wild2
                             GHC.Types.True
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Jin
                                  wild3 } } }
                        Duckling.Weight.Types.Kilogram
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Kilogram
                             ww5
                        Duckling.Weight.Types.Pound
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Pound
                             ww5
                        Duckling.Weight.Types.Tonne
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Tonne
                             ww5 }
                   Duckling.Weight.Types.Kilogram
                   -> case ww4 of wild1 {
                        DEFAULT
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Kilogram
                             ww2
                        Duckling.Weight.Types.Kilogram
                        -> case ww2 of wild2 { GHC.Types.D# x ->
                           case ww5 of wild3 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=## x y) of wild4 {
                             GHC.Types.False
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Kilogram
                                  wild2
                             GHC.Types.True
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Kilogram
                                  wild3 } } }
                        Duckling.Weight.Types.Pound
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Pound
                             ww5
                        Duckling.Weight.Types.Tonne
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Tonne
                             ww5 }
                   Duckling.Weight.Types.Pound
                   -> case ww4 of wild1 {
                        DEFAULT
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Pound
                             ww2
                        Duckling.Weight.Types.Pound
                        -> case ww2 of wild2 { GHC.Types.D# x ->
                           case ww5 of wild3 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=## x y) of wild4 {
                             GHC.Types.False
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Pound
                                  wild2
                             GHC.Types.True
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Pound
                                  wild3 } } }
                        Duckling.Weight.Types.Tonne
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Tonne
                             ww5 }
                   Duckling.Weight.Types.Tonne
                   -> case ww4 of wild1 {
                        DEFAULT
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Tonne
                             ww2
                        Duckling.Weight.Types.Tonne
                        -> case ww2 of wild2 { GHC.Types.D# x ->
                           case ww5 of wild3 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=## x y) of wild4 {
                             GHC.Types.False
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Tonne
                                  wild2
                             GHC.Types.True
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Tonne
                                  wild3 } } } } } } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdSingleValue_$cmin ::
    Duckling.Weight.Types.SingleValue
    -> Duckling.Weight.Types.SingleValue
    -> Duckling.Weight.Types.SingleValue
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(U,U(U))><S(SL),1*U(U,U(U))>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Weight.Types.SingleValue)
                   (w1 :: Duckling.Weight.Types.SingleValue) ->
                 case w of ww { Duckling.Weight.Types.SingleValue ww1 ww2 ->
                 case w1 of ww3 { Duckling.Weight.Types.SingleValue ww4 ww5 ->
                 case ww1 of wild {
                   Duckling.Weight.Types.Milligram
                   -> case ww4 of wild1 {
                        Duckling.Weight.Types.Milligram
                        -> case ww2 of wild2 { GHC.Types.D# x ->
                           case ww5 of wild3 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=## x y) of wild4 {
                             GHC.Types.False
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Milligram
                                  wild3
                             GHC.Types.True
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Milligram
                                  wild2 } } }
                        Duckling.Weight.Types.Liang
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Milligram
                             ww2
                        Duckling.Weight.Types.Gram
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Milligram
                             ww2
                        Duckling.Weight.Types.Jin
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Milligram
                             ww2
                        Duckling.Weight.Types.Kilogram
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Milligram
                             ww2
                        Duckling.Weight.Types.Pound
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Milligram
                             ww2
                        Duckling.Weight.Types.Tonne
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Milligram
                             ww2 }
                   Duckling.Weight.Types.Liang
                   -> case ww4 of wild1 {
                        Duckling.Weight.Types.Milligram
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Milligram
                             ww5
                        Duckling.Weight.Types.Liang
                        -> case ww2 of wild2 { GHC.Types.D# x ->
                           case ww5 of wild3 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=## x y) of wild4 {
                             GHC.Types.False
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Liang
                                  wild3
                             GHC.Types.True
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Liang
                                  wild2 } } }
                        Duckling.Weight.Types.Gram
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Liang
                             ww2
                        Duckling.Weight.Types.Jin
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Liang
                             ww2
                        Duckling.Weight.Types.Kilogram
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Liang
                             ww2
                        Duckling.Weight.Types.Pound
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Liang
                             ww2
                        Duckling.Weight.Types.Tonne
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Liang
                             ww2 }
                   Duckling.Weight.Types.Gram
                   -> case ww4 of wild1 {
                        DEFAULT -> Duckling.Weight.Types.SingleValue wild1 ww5
                        Duckling.Weight.Types.Gram
                        -> case ww2 of wild2 { GHC.Types.D# x ->
                           case ww5 of wild3 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=## x y) of wild4 {
                             GHC.Types.False
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Gram
                                  wild3
                             GHC.Types.True
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Gram
                                  wild2 } } }
                        Duckling.Weight.Types.Jin
                        -> Duckling.Weight.Types.SingleValue Duckling.Weight.Types.Gram ww2
                        Duckling.Weight.Types.Kilogram
                        -> Duckling.Weight.Types.SingleValue Duckling.Weight.Types.Gram ww2
                        Duckling.Weight.Types.Pound
                        -> Duckling.Weight.Types.SingleValue Duckling.Weight.Types.Gram ww2
                        Duckling.Weight.Types.Tonne
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Gram
                             ww2 }
                   Duckling.Weight.Types.Jin
                   -> case ww4 of wild1 {
                        DEFAULT -> Duckling.Weight.Types.SingleValue wild1 ww5
                        Duckling.Weight.Types.Jin
                        -> case ww2 of wild2 { GHC.Types.D# x ->
                           case ww5 of wild3 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=## x y) of wild4 {
                             GHC.Types.False
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Jin
                                  wild3
                             GHC.Types.True
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Jin
                                  wild2 } } }
                        Duckling.Weight.Types.Kilogram
                        -> Duckling.Weight.Types.SingleValue Duckling.Weight.Types.Jin ww2
                        Duckling.Weight.Types.Pound
                        -> Duckling.Weight.Types.SingleValue Duckling.Weight.Types.Jin ww2
                        Duckling.Weight.Types.Tonne
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Jin
                             ww2 }
                   Duckling.Weight.Types.Kilogram
                   -> case ww4 of wild1 {
                        DEFAULT -> Duckling.Weight.Types.SingleValue wild1 ww5
                        Duckling.Weight.Types.Kilogram
                        -> case ww2 of wild2 { GHC.Types.D# x ->
                           case ww5 of wild3 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=## x y) of wild4 {
                             GHC.Types.False
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Kilogram
                                  wild3
                             GHC.Types.True
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Kilogram
                                  wild2 } } }
                        Duckling.Weight.Types.Pound
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Kilogram
                             ww2
                        Duckling.Weight.Types.Tonne
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Kilogram
                             ww2 }
                   Duckling.Weight.Types.Pound
                   -> case ww4 of wild1 {
                        DEFAULT -> Duckling.Weight.Types.SingleValue wild1 ww5
                        Duckling.Weight.Types.Pound
                        -> case ww2 of wild2 { GHC.Types.D# x ->
                           case ww5 of wild3 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=## x y) of wild4 {
                             GHC.Types.False
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Pound
                                  wild3
                             GHC.Types.True
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Pound
                                  wild2 } } }
                        Duckling.Weight.Types.Tonne
                        -> Duckling.Weight.Types.SingleValue
                             Duckling.Weight.Types.Pound
                             ww2 }
                   Duckling.Weight.Types.Tonne
                   -> case ww4 of wild1 {
                        DEFAULT -> Duckling.Weight.Types.SingleValue wild1 ww5
                        Duckling.Weight.Types.Tonne
                        -> case ww2 of wild2 { GHC.Types.D# x ->
                           case ww5 of wild3 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=## x y) of wild4 {
                             GHC.Types.False
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Tonne
                                  wild3
                             GHC.Types.True
                             -> Duckling.Weight.Types.SingleValue
                                  Duckling.Weight.Types.Tonne
                                  wild2 } } } } } } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdUnit :: GHC.Classes.Ord Duckling.Weight.Types.Unit
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.Unit
                  Duckling.Weight.Types.$fEqUnit
                  Duckling.Weight.Types.$fOrdUnit_$ccompare
                  Duckling.Weight.Types.$fOrdUnit_$c<
                  Duckling.Weight.Types.$fOrdUnit_$c<=
                  Duckling.Weight.Types.$fOrdUnit_$c>
                  Duckling.Weight.Types.$fOrdUnit_$c>=
                  Duckling.Weight.Types.$fOrdUnit_$cmax
                  Duckling.Weight.Types.$fOrdUnit_$cmin -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdUnit_$c< ::
    Duckling.Weight.Types.Unit
    -> Duckling.Weight.Types.Unit -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.Weight.Types.Unit)
                   (b :: Duckling.Weight.Types.Unit) ->
                 let {
                   $j :: GHC.Prim.Int# -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     case b of wild {
                       Duckling.Weight.Types.Milligram
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<# a# 0#)
                       Duckling.Weight.Types.Liang
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<# a# 1#)
                       Duckling.Weight.Types.Gram
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<# a# 2#)
                       Duckling.Weight.Types.Jin
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<# a# 3#)
                       Duckling.Weight.Types.Kilogram
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<# a# 4#)
                       Duckling.Weight.Types.Pound
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<# a# 5#)
                       Duckling.Weight.Types.Tonne
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<# a# 6#) }
                 } in
                 case a of wild {
                   Duckling.Weight.Types.Milligram -> $j 0#
                   Duckling.Weight.Types.Liang -> $j 1#
                   Duckling.Weight.Types.Gram -> $j 2#
                   Duckling.Weight.Types.Jin -> $j 3#
                   Duckling.Weight.Types.Kilogram -> $j 4#
                   Duckling.Weight.Types.Pound -> $j 5#
                   Duckling.Weight.Types.Tonne -> $j 6# }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdUnit_$c<= ::
    Duckling.Weight.Types.Unit
    -> Duckling.Weight.Types.Unit -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.Weight.Types.Unit)
                   (b :: Duckling.Weight.Types.Unit) ->
                 let {
                   $j :: GHC.Prim.Int# -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     case b of wild {
                       Duckling.Weight.Types.Milligram
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<=# a# 0#)
                       Duckling.Weight.Types.Liang
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<=# a# 1#)
                       Duckling.Weight.Types.Gram
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<=# a# 2#)
                       Duckling.Weight.Types.Jin
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<=# a# 3#)
                       Duckling.Weight.Types.Kilogram
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<=# a# 4#)
                       Duckling.Weight.Types.Pound
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<=# a# 5#)
                       Duckling.Weight.Types.Tonne
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<=# a# 6#) }
                 } in
                 case a of wild {
                   Duckling.Weight.Types.Milligram -> $j 0#
                   Duckling.Weight.Types.Liang -> $j 1#
                   Duckling.Weight.Types.Gram -> $j 2#
                   Duckling.Weight.Types.Jin -> $j 3#
                   Duckling.Weight.Types.Kilogram -> $j 4#
                   Duckling.Weight.Types.Pound -> $j 5#
                   Duckling.Weight.Types.Tonne -> $j 6# }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdUnit_$c> ::
    Duckling.Weight.Types.Unit
    -> Duckling.Weight.Types.Unit -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.Weight.Types.Unit)
                   (b :: Duckling.Weight.Types.Unit) ->
                 let {
                   $j :: GHC.Prim.Int# -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     case b of wild {
                       Duckling.Weight.Types.Milligram
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.># a# 0#)
                       Duckling.Weight.Types.Liang
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.># a# 1#)
                       Duckling.Weight.Types.Gram
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.># a# 2#)
                       Duckling.Weight.Types.Jin
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.># a# 3#)
                       Duckling.Weight.Types.Kilogram
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.># a# 4#)
                       Duckling.Weight.Types.Pound
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.># a# 5#)
                       Duckling.Weight.Types.Tonne
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.># a# 6#) }
                 } in
                 case a of wild {
                   Duckling.Weight.Types.Milligram -> $j 0#
                   Duckling.Weight.Types.Liang -> $j 1#
                   Duckling.Weight.Types.Gram -> $j 2#
                   Duckling.Weight.Types.Jin -> $j 3#
                   Duckling.Weight.Types.Kilogram -> $j 4#
                   Duckling.Weight.Types.Pound -> $j 5#
                   Duckling.Weight.Types.Tonne -> $j 6# }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdUnit_$c>= ::
    Duckling.Weight.Types.Unit
    -> Duckling.Weight.Types.Unit -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.Weight.Types.Unit)
                   (b :: Duckling.Weight.Types.Unit) ->
                 let {
                   $j :: GHC.Prim.Int# -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     case b of wild {
                       Duckling.Weight.Types.Milligram
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.>=# a# 0#)
                       Duckling.Weight.Types.Liang
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.>=# a# 1#)
                       Duckling.Weight.Types.Gram
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.>=# a# 2#)
                       Duckling.Weight.Types.Jin
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.>=# a# 3#)
                       Duckling.Weight.Types.Kilogram
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.>=# a# 4#)
                       Duckling.Weight.Types.Pound
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.>=# a# 5#)
                       Duckling.Weight.Types.Tonne
                       -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.>=# a# 6#) }
                 } in
                 case a of wild {
                   Duckling.Weight.Types.Milligram -> $j 0#
                   Duckling.Weight.Types.Liang -> $j 1#
                   Duckling.Weight.Types.Gram -> $j 2#
                   Duckling.Weight.Types.Jin -> $j 3#
                   Duckling.Weight.Types.Kilogram -> $j 4#
                   Duckling.Weight.Types.Pound -> $j 5#
                   Duckling.Weight.Types.Tonne -> $j 6# }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdUnit_$ccompare ::
    Duckling.Weight.Types.Unit
    -> Duckling.Weight.Types.Unit -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.Weight.Types.Unit)
                   (b :: Duckling.Weight.Types.Unit) ->
                 case a of wild {
                   Duckling.Weight.Types.Milligram
                   -> case b of wild1 {
                        Duckling.Weight.Types.Milligram -> GHC.Types.EQ
                        Duckling.Weight.Types.Liang -> GHC.Types.LT
                        Duckling.Weight.Types.Gram -> GHC.Types.LT
                        Duckling.Weight.Types.Jin -> GHC.Types.LT
                        Duckling.Weight.Types.Kilogram -> GHC.Types.LT
                        Duckling.Weight.Types.Pound -> GHC.Types.LT
                        Duckling.Weight.Types.Tonne -> GHC.Types.LT }
                   Duckling.Weight.Types.Liang
                   -> case b of wild1 {
                        Duckling.Weight.Types.Milligram -> GHC.Types.GT
                        Duckling.Weight.Types.Liang -> GHC.Types.EQ
                        Duckling.Weight.Types.Gram -> GHC.Types.LT
                        Duckling.Weight.Types.Jin -> GHC.Types.LT
                        Duckling.Weight.Types.Kilogram -> GHC.Types.LT
                        Duckling.Weight.Types.Pound -> GHC.Types.LT
                        Duckling.Weight.Types.Tonne -> GHC.Types.LT }
                   Duckling.Weight.Types.Gram
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Duckling.Weight.Types.Gram -> GHC.Types.EQ
                        Duckling.Weight.Types.Jin -> GHC.Types.LT
                        Duckling.Weight.Types.Kilogram -> GHC.Types.LT
                        Duckling.Weight.Types.Pound -> GHC.Types.LT
                        Duckling.Weight.Types.Tonne -> GHC.Types.LT }
                   Duckling.Weight.Types.Jin
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Duckling.Weight.Types.Jin -> GHC.Types.EQ
                        Duckling.Weight.Types.Kilogram -> GHC.Types.LT
                        Duckling.Weight.Types.Pound -> GHC.Types.LT
                        Duckling.Weight.Types.Tonne -> GHC.Types.LT }
                   Duckling.Weight.Types.Kilogram
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Duckling.Weight.Types.Kilogram -> GHC.Types.EQ
                        Duckling.Weight.Types.Pound -> GHC.Types.LT
                        Duckling.Weight.Types.Tonne -> GHC.Types.LT }
                   Duckling.Weight.Types.Pound
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Duckling.Weight.Types.Pound -> GHC.Types.EQ
                        Duckling.Weight.Types.Tonne -> GHC.Types.LT }
                   Duckling.Weight.Types.Tonne
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Duckling.Weight.Types.Tonne -> GHC.Types.EQ } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdUnit_$cmax ::
    Duckling.Weight.Types.Unit
    -> Duckling.Weight.Types.Unit -> Duckling.Weight.Types.Unit
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Duckling.Weight.Types.Unit)
                   (y :: Duckling.Weight.Types.Unit) ->
                 case Duckling.Weight.Types.$fOrdUnit_$c<= x y of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdUnit_$cmin ::
    Duckling.Weight.Types.Unit
    -> Duckling.Weight.Types.Unit -> Duckling.Weight.Types.Unit
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Duckling.Weight.Types.Unit)
                   (y :: Duckling.Weight.Types.Unit) ->
                 case Duckling.Weight.Types.$fOrdUnit_$c<= x y of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdWeightData :: GHC.Classes.Ord Duckling.Weight.Types.WeightData
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.WeightData
                  Duckling.Weight.Types.$fEqWeightData
                  Duckling.Weight.Types.$fOrdWeightData_$ccompare
                  Duckling.Weight.Types.$fOrdWeightData_$c<
                  Duckling.Weight.Types.$fOrdWeightData_$c<=
                  Duckling.Weight.Types.$fOrdWeightData_$c>
                  Duckling.Weight.Types.$fOrdWeightData_$c>=
                  Duckling.Weight.Types.$fOrdWeightData_$cmax
                  Duckling.Weight.Types.$fOrdWeightData_$cmin -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdWeightData_$c< ::
    Duckling.Weight.Types.WeightData
    -> Duckling.Weight.Types.WeightData -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Weight.Types.WeightData)
                   (w1 :: Duckling.Weight.Types.WeightData) ->
                 case w of ww { Duckling.Weight.Types.WeightData ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Duckling.Weight.Types.WeightData ww6 ww7 ww8 ww9 ->
                 Duckling.Weight.Types.$w$c<1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww6
                   ww7
                   ww8
                   ww9 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdWeightData_$c<= ::
    Duckling.Weight.Types.WeightData
    -> Duckling.Weight.Types.WeightData -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Weight.Types.WeightData)
                   (w1 :: Duckling.Weight.Types.WeightData) ->
                 case w of ww { Duckling.Weight.Types.WeightData ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Duckling.Weight.Types.WeightData ww6 ww7 ww8 ww9 ->
                 Duckling.Weight.Types.$w$c<=1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww6
                   ww7
                   ww8
                   ww9 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdWeightData_$c> ::
    Duckling.Weight.Types.WeightData
    -> Duckling.Weight.Types.WeightData -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Weight.Types.WeightData)
                   (w1 :: Duckling.Weight.Types.WeightData) ->
                 case w of ww { Duckling.Weight.Types.WeightData ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Duckling.Weight.Types.WeightData ww6 ww7 ww8 ww9 ->
                 Duckling.Weight.Types.$w$c>1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww6
                   ww7
                   ww8
                   ww9 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdWeightData_$c>= ::
    Duckling.Weight.Types.WeightData
    -> Duckling.Weight.Types.WeightData -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Weight.Types.WeightData)
                   (w1 :: Duckling.Weight.Types.WeightData) ->
                 case w of ww { Duckling.Weight.Types.WeightData ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Duckling.Weight.Types.WeightData ww6 ww7 ww8 ww9 ->
                 Duckling.Weight.Types.$w$c>=1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww6
                   ww7
                   ww8
                   ww9 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdWeightData_$ccompare ::
    Duckling.Weight.Types.WeightData
    -> Duckling.Weight.Types.WeightData -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Weight.Types.WeightData)
                   (w1 :: Duckling.Weight.Types.WeightData) ->
                 case w of ww { Duckling.Weight.Types.WeightData ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Duckling.Weight.Types.WeightData ww6 ww7 ww8 ww9 ->
                 Duckling.Weight.Types.$w$ccompare1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww6
                   ww7
                   ww8
                   ww9 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdWeightData_$cmax ::
    Duckling.Weight.Types.WeightData
    -> Duckling.Weight.Types.WeightData
    -> Duckling.Weight.Types.WeightData
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),U(U,U,U,U)><S(SLLL),U(U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Duckling.Weight.Types.WeightData)
                   (y :: Duckling.Weight.Types.WeightData) ->
                 case Duckling.Weight.Types.$fOrdWeightData_$c<= x y of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdWeightData_$cmin ::
    Duckling.Weight.Types.WeightData
    -> Duckling.Weight.Types.WeightData
    -> Duckling.Weight.Types.WeightData
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),U(U,U,U,U)><S(SLLL),U(U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Duckling.Weight.Types.WeightData)
                   (y :: Duckling.Weight.Types.WeightData) ->
                 case Duckling.Weight.Types.$fOrdWeightData_$c<= x y of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdWeightValue ::
    GHC.Classes.Ord Duckling.Weight.Types.WeightValue
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.WeightValue
                  Duckling.Weight.Types.$fEqWeightValue
                  Duckling.Weight.Types.$fOrdWeightValue_$ccompare
                  Duckling.Weight.Types.$fOrdWeightValue_$c<
                  Duckling.Weight.Types.$fOrdWeightValue_$c<=
                  Duckling.Weight.Types.$fOrdWeightValue_$c>
                  Duckling.Weight.Types.$fOrdWeightValue_$c>=
                  Duckling.Weight.Types.$fOrdWeightValue_$cmax
                  Duckling.Weight.Types.$fOrdWeightValue_$cmin -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdWeightValue_$c< ::
    Duckling.Weight.Types.WeightValue
    -> Duckling.Weight.Types.WeightValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.Weight.Types.WeightValue)
                   (b :: Duckling.Weight.Types.WeightValue) ->
                 case a of wild {
                   Duckling.Weight.Types.SimpleValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.SimpleValue b1
                        -> Duckling.Weight.Types.$fOrdSingleValue_$c< a1 b1 }
                   Duckling.Weight.Types.IntervalValue a1
                   -> case b of wild1 {
                        Duckling.Weight.Types.SimpleValue ds -> GHC.Types.False
                        Duckling.Weight.Types.IntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Weight.Types.SingleValue ww8 ww9 ->
                           case ww4 of ww10 { Duckling.Weight.Types.SingleValue ww11 ww12 ->
                           case Duckling.Weight.Types.$w$ccompare ww8 ww9 ww11 ww12 of wild2 {
                             GHC.Types.LT -> GHC.Types.True
                             GHC.Types.EQ -> Duckling.Weight.Types.$fOrdSingleValue_$c< ww2 ww5
                             GHC.Types.GT -> GHC.Types.False } } } } }
                        Duckling.Weight.Types.OpenIntervalValue ipv -> GHC.Types.True }
                   Duckling.Weight.Types.OpenIntervalValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.OpenIntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Weight.Types.SingleValue ww8 ww9 ->
                           case ww4 of ww10 { Duckling.Weight.Types.SingleValue ww11 ww12 ->
                           case Duckling.Weight.Types.$w$ccompare ww8 ww9 ww11 ww12 of wild2 {
                             GHC.Types.LT -> GHC.Types.True
                             GHC.Types.EQ
                             -> Duckling.Weight.Types.$fOrdIntervalDirection_$c< ww2 ww5
                             GHC.Types.GT -> GHC.Types.False } } } } } } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdWeightValue_$c<= ::
    Duckling.Weight.Types.WeightValue
    -> Duckling.Weight.Types.WeightValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.Weight.Types.WeightValue)
                   (b :: Duckling.Weight.Types.WeightValue) ->
                 case a of wild {
                   Duckling.Weight.Types.SimpleValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.SimpleValue b1
                        -> Duckling.Weight.Types.$fOrdSingleValue_$c<= a1 b1 }
                   Duckling.Weight.Types.IntervalValue a1
                   -> case b of wild1 {
                        Duckling.Weight.Types.SimpleValue ds -> GHC.Types.False
                        Duckling.Weight.Types.IntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Weight.Types.SingleValue ww8 ww9 ->
                           case ww4 of ww10 { Duckling.Weight.Types.SingleValue ww11 ww12 ->
                           case Duckling.Weight.Types.$w$ccompare ww8 ww9 ww11 ww12 of wild2 {
                             GHC.Types.LT -> GHC.Types.True
                             GHC.Types.EQ -> Duckling.Weight.Types.$fOrdSingleValue_$c<= ww2 ww5
                             GHC.Types.GT -> GHC.Types.False } } } } }
                        Duckling.Weight.Types.OpenIntervalValue ipv -> GHC.Types.True }
                   Duckling.Weight.Types.OpenIntervalValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.OpenIntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Weight.Types.SingleValue ww8 ww9 ->
                           case ww4 of ww10 { Duckling.Weight.Types.SingleValue ww11 ww12 ->
                           case Duckling.Weight.Types.$w$ccompare ww8 ww9 ww11 ww12 of wild2 {
                             GHC.Types.LT -> GHC.Types.True
                             GHC.Types.EQ
                             -> Duckling.Weight.Types.$fOrdIntervalDirection_$c<= ww2 ww5
                             GHC.Types.GT -> GHC.Types.False } } } } } } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdWeightValue_$c> ::
    Duckling.Weight.Types.WeightValue
    -> Duckling.Weight.Types.WeightValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.Weight.Types.WeightValue)
                   (b :: Duckling.Weight.Types.WeightValue) ->
                 case a of wild {
                   Duckling.Weight.Types.SimpleValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.SimpleValue b1
                        -> Duckling.Weight.Types.$fOrdSingleValue_$c> a1 b1 }
                   Duckling.Weight.Types.IntervalValue a1
                   -> case b of wild1 {
                        Duckling.Weight.Types.SimpleValue ds -> GHC.Types.True
                        Duckling.Weight.Types.IntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Weight.Types.SingleValue ww8 ww9 ->
                           case ww4 of ww10 { Duckling.Weight.Types.SingleValue ww11 ww12 ->
                           case Duckling.Weight.Types.$w$ccompare ww8 ww9 ww11 ww12 of wild2 {
                             GHC.Types.LT -> GHC.Types.False
                             GHC.Types.EQ -> Duckling.Weight.Types.$fOrdSingleValue_$c> ww2 ww5
                             GHC.Types.GT -> GHC.Types.True } } } } }
                        Duckling.Weight.Types.OpenIntervalValue ipv -> GHC.Types.False }
                   Duckling.Weight.Types.OpenIntervalValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.OpenIntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Weight.Types.SingleValue ww8 ww9 ->
                           case ww4 of ww10 { Duckling.Weight.Types.SingleValue ww11 ww12 ->
                           case Duckling.Weight.Types.$w$ccompare ww8 ww9 ww11 ww12 of wild2 {
                             GHC.Types.LT -> GHC.Types.False
                             GHC.Types.EQ
                             -> Duckling.Weight.Types.$fOrdIntervalDirection_$c> ww2 ww5
                             GHC.Types.GT -> GHC.Types.True } } } } } } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdWeightValue_$c>= ::
    Duckling.Weight.Types.WeightValue
    -> Duckling.Weight.Types.WeightValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.Weight.Types.WeightValue)
                   (b :: Duckling.Weight.Types.WeightValue) ->
                 case a of wild {
                   Duckling.Weight.Types.SimpleValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.SimpleValue b1
                        -> Duckling.Weight.Types.$fOrdSingleValue_$c>= a1 b1 }
                   Duckling.Weight.Types.IntervalValue a1
                   -> case b of wild1 {
                        Duckling.Weight.Types.SimpleValue ds -> GHC.Types.True
                        Duckling.Weight.Types.IntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Weight.Types.SingleValue ww8 ww9 ->
                           case ww4 of ww10 { Duckling.Weight.Types.SingleValue ww11 ww12 ->
                           case Duckling.Weight.Types.$w$ccompare ww8 ww9 ww11 ww12 of wild2 {
                             GHC.Types.LT -> GHC.Types.False
                             GHC.Types.EQ -> Duckling.Weight.Types.$fOrdSingleValue_$c>= ww2 ww5
                             GHC.Types.GT -> GHC.Types.True } } } } }
                        Duckling.Weight.Types.OpenIntervalValue ipv -> GHC.Types.False }
                   Duckling.Weight.Types.OpenIntervalValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.OpenIntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Weight.Types.SingleValue ww8 ww9 ->
                           case ww4 of ww10 { Duckling.Weight.Types.SingleValue ww11 ww12 ->
                           case Duckling.Weight.Types.$w$ccompare ww8 ww9 ww11 ww12 of wild2 {
                             GHC.Types.LT -> GHC.Types.False
                             GHC.Types.EQ
                             -> Duckling.Weight.Types.$fOrdIntervalDirection_$c>= ww2 ww5
                             GHC.Types.GT -> GHC.Types.True } } } } } } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdWeightValue_$ccompare ::
    Duckling.Weight.Types.WeightValue
    -> Duckling.Weight.Types.WeightValue -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.Weight.Types.WeightValue)
                   (b :: Duckling.Weight.Types.WeightValue) ->
                 case a of wild {
                   Duckling.Weight.Types.SimpleValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Duckling.Weight.Types.SimpleValue b1
                        -> Duckling.Weight.Types.$fOrdSingleValue_$ccompare a1 b1 }
                   Duckling.Weight.Types.IntervalValue a1
                   -> case b of wild1 {
                        Duckling.Weight.Types.SimpleValue ds -> GHC.Types.GT
                        Duckling.Weight.Types.IntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Weight.Types.SingleValue ww8 ww9 ->
                           case ww4 of ww10 { Duckling.Weight.Types.SingleValue ww11 ww12 ->
                           case Duckling.Weight.Types.$w$ccompare ww8 ww9 ww11 ww12 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ
                             -> Duckling.Weight.Types.$fOrdSingleValue_$ccompare ww2 ww5
                             GHC.Types.GT -> GHC.Types.GT } } } } }
                        Duckling.Weight.Types.OpenIntervalValue ipv -> GHC.Types.LT }
                   Duckling.Weight.Types.OpenIntervalValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Duckling.Weight.Types.OpenIntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Weight.Types.SingleValue ww8 ww9 ->
                           case ww4 of ww10 { Duckling.Weight.Types.SingleValue ww11 ww12 ->
                           case Duckling.Weight.Types.$w$ccompare ww8 ww9 ww11 ww12 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ
                             -> Duckling.Weight.Types.$fOrdIntervalDirection_$ccompare ww2 ww5
                             GHC.Types.GT -> GHC.Types.GT } } } } } } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdWeightValue_$cmax ::
    Duckling.Weight.Types.WeightValue
    -> Duckling.Weight.Types.WeightValue
    -> Duckling.Weight.Types.WeightValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Duckling.Weight.Types.WeightValue)
                   (y :: Duckling.Weight.Types.WeightValue) ->
                 case Duckling.Weight.Types.$fOrdWeightValue_$c<= x y of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fOrdWeightValue_$cmin ::
    Duckling.Weight.Types.WeightValue
    -> Duckling.Weight.Types.WeightValue
    -> Duckling.Weight.Types.WeightValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Duckling.Weight.Types.WeightValue)
                   (y :: Duckling.Weight.Types.WeightValue) ->
                 case Duckling.Weight.Types.$fOrdWeightValue_$c<= x y of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fResolveWeightData ::
    Duckling.Resolve.Resolve Duckling.Weight.Types.WeightData
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.WeightData
                  Duckling.Weight.Types.$fEqWeightValue
                    `cast`
                  (GHC.Classes.Eq
                     (Sym (Duckling.Weight.Types.D:R:ResolvedValueWeightData[0])))_R
                  Duckling.Weight.Types.$fShowWeightValue
                    `cast`
                  (GHC.Show.Show
                     (Sym (Duckling.Weight.Types.D:R:ResolvedValueWeightData[0])))_R
                  Duckling.Weight.Types.$fToJSONWeightValue
                    `cast`
                  (Data.Aeson.Types.ToJSON.ToJSON
                     (Sym (Duckling.Weight.Types.D:R:ResolvedValueWeightData[0])))_R
                  Duckling.Weight.Types.$fResolveWeightData_$cresolve -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fResolveWeightData_$cresolve ::
    Duckling.Resolve.Context
    -> Duckling.Resolve.Options
    -> Duckling.Weight.Types.WeightData
    -> GHC.Base.Maybe
         (Duckling.Resolve.ResolvedValue Duckling.Weight.Types.WeightData,
          GHC.Types.Bool)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,A><L,A><S(SLLL),1*U(U,U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Duckling.Resolve.Context)
                   (w1 :: Duckling.Resolve.Options)
                   (w2 :: Duckling.Weight.Types.WeightData) ->
                 case w2 of ww { Duckling.Weight.Types.WeightData ww1 ww2 ww3 ww4 ->
                 Duckling.Weight.Types.$w$cresolve ww1 ww2 ww3 ww4 }) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fShowIntervalDirection ::
    GHC.Show.Show Duckling.Weight.Types.IntervalDirection
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.IntervalDirection
                  Duckling.Weight.Types.$fShowIntervalDirection_$cshowsPrec
                  Duckling.Weight.Types.$fShowIntervalDirection_$cshow
                  Duckling.Weight.Types.$fShowIntervalDirection_$cshowList -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fShowIntervalDirection1 ::
    Duckling.Weight.Types.IntervalDirection -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Duckling.Weight.Types.IntervalDirection)
                   (eta :: GHC.Base.String) ->
                 case ds of wild {
                   Duckling.Weight.Types.Above
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Duckling.Weight.Types.$fShowWeightValue3)
                        eta
                   Duckling.Weight.Types.Under
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Duckling.Weight.Types.$fShowWeightValue2)
                        eta }) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fShowIntervalDirection_$cshow ::
    Duckling.Weight.Types.IntervalDirection -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Duckling.Weight.Types.IntervalDirection) ->
                 case x of wild {
                   Duckling.Weight.Types.Above
                   -> Duckling.Weight.Types.$fShowWeightValue3
                   Duckling.Weight.Types.Under
                   -> Duckling.Weight.Types.$fShowWeightValue2 }) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fShowIntervalDirection_$cshowList ::
    [Duckling.Weight.Types.IntervalDirection] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Duckling.Weight.Types.IntervalDirection
                   Duckling.Weight.Types.$fShowIntervalDirection1) -}
a86baca3d8d7ddb75087ea8e0c4ab363
  $fShowIntervalDirection_$cshowsPrec ::
    GHC.Types.Int
    -> Duckling.Weight.Types.IntervalDirection -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: Duckling.Weight.Types.IntervalDirection)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   Duckling.Weight.Types.Above
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Duckling.Weight.Types.$fShowWeightValue3)
                        eta
                   Duckling.Weight.Types.Under
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Duckling.Weight.Types.$fShowWeightValue2)
                        eta }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fShowSingleValue ::
    GHC.Show.Show Duckling.Weight.Types.SingleValue
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.SingleValue
                  Duckling.Weight.Types.$fShowSingleValue_$cshowsPrec
                  Duckling.Weight.Types.$fShowSingleValue_$cshow
                  Duckling.Weight.Types.$fShowSingleValue_$cshowList -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fShowSingleValue1 ::
    Duckling.Weight.Types.SingleValue -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Duckling.Weight.Types.SingleValue) ->
                 case w of ww { Duckling.Weight.Types.SingleValue ww1 ww2 ->
                 Duckling.Weight.Types.$w$cshowsPrec2 0# ww1 ww2 }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fShowSingleValue_$cshow ::
    Duckling.Weight.Types.SingleValue -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Duckling.Weight.Types.SingleValue) ->
                 Duckling.Weight.Types.$fShowSingleValue_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fShowSingleValue_$cshowList ::
    [Duckling.Weight.Types.SingleValue] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Duckling.Weight.Types.SingleValue
                   Duckling.Weight.Types.$fShowSingleValue1) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fShowSingleValue_$cshowsPrec ::
    GHC.Types.Int
    -> Duckling.Weight.Types.SingleValue -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(U,1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Duckling.Weight.Types.SingleValue) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Duckling.Weight.Types.SingleValue ww3 ww4 ->
                 Duckling.Weight.Types.$w$cshowsPrec2 ww1 ww3 ww4 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fShowUnit :: GHC.Show.Show Duckling.Weight.Types.Unit
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.Unit
                  Duckling.Weight.Types.$fShowUnit_$cshowsPrec
                  Duckling.Weight.Types.$fShowUnit_$cshow
                  Duckling.Weight.Types.$fShowUnit_$cshowList -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fShowUnit_$cshow :: Duckling.Weight.Types.Unit -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Duckling.Weight.Types.Unit) ->
                 Duckling.Weight.Types.$fShowUnit_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fShowUnit_$cshowList ::
    [Duckling.Weight.Types.Unit] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Duckling.Weight.Types.Unit
                   Duckling.Weight.Types.$w$cshowsPrec) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fShowUnit_$cshowsPrec ::
    GHC.Types.Int -> Duckling.Weight.Types.Unit -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Duckling.Weight.Types.Unit)
                   (w2 :: GHC.Base.String) ->
                 Duckling.Weight.Types.$w$cshowsPrec w1 w2) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fShowWeightData :: GHC.Show.Show Duckling.Weight.Types.WeightData
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.WeightData
                  Duckling.Weight.Types.$fShowWeightData_$cshowsPrec
                  Duckling.Weight.Types.$fShowWeightData_$cshow
                  Duckling.Weight.Types.$fShowWeightData_$cshowList -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fShowWeightData1 ::
    Duckling.Weight.Types.WeightData -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Duckling.Weight.Types.WeightData) ->
                 case w of ww { Duckling.Weight.Types.WeightData ww1 ww2 ww3 ww4 ->
                 Duckling.Weight.Types.$w$cshowsPrec3 0# ww1 ww2 ww3 ww4 }) -}
a54b63ee04353458bed657ad0af9bdf7
  $fShowWeightData2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "maxValue = "#) -}
0af36fe672e9c7edb1e833112731babc
  $fShowWeightData3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "minValue = "#) -}
3701e0251b3bc543ba2ea51f2f8e3607
  $fShowWeightData4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "value = "#) -}
df0b89c8f22fed6b31f2ef67ee58b91e
  $fShowWeightData5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "unit = "#) -}
118d8ea5a2ae3eb0f1cf2c5baea2c7e7
  $fShowWeightData6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "WeightData {"#) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fShowWeightData_$cshow ::
    Duckling.Weight.Types.WeightData -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Duckling.Weight.Types.WeightData) ->
                 Duckling.Weight.Types.$fShowWeightData_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fShowWeightData_$cshowList ::
    [Duckling.Weight.Types.WeightData] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Duckling.Weight.Types.WeightData
                   Duckling.Weight.Types.$fShowWeightData1) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fShowWeightData_$cshowsPrec ::
    GHC.Types.Int -> Duckling.Weight.Types.WeightData -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Duckling.Weight.Types.WeightData) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Duckling.Weight.Types.WeightData ww3 ww4 ww5 ww6 ->
                 Duckling.Weight.Types.$w$cshowsPrec3 ww1 ww3 ww4 ww5 ww6 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fShowWeightValue ::
    GHC.Show.Show Duckling.Weight.Types.WeightValue
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.WeightValue
                  Duckling.Weight.Types.$fShowWeightValue_$cshowsPrec
                  Duckling.Weight.Types.$fShowWeightValue_$cshow
                  Duckling.Weight.Types.$fShowWeightValue_$cshowList -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fShowWeightValue1 ::
    Duckling.Weight.Types.WeightValue -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Duckling.Weight.Types.WeightValue) ->
                 Duckling.Weight.Types.$w$cshowsPrec1 0# w) -}
1b6298f6ecb8ee1eeafb289453feae9b
  $fShowWeightValue10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "vUnit = "#) -}
7c4097d018d92a63e5e70f3bdb5db6a9
  $fShowWeightValue11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SingleValue {"#) -}
cfa46d3aff3d44a03268ef87d57af948
  $fShowWeightValue12 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
94b3dbe83872251fc83b9b2082af357b
  $fShowWeightValue13 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows4
                   (GHC.Types.[] @ GHC.Types.Char)) -}
e574a0c11641e9b30f68a199e3c8c93e
  $fShowWeightValue2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Under"#) -}
968ce5a81edd4b07797d1c883b833227
  $fShowWeightValue3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Above"#) -}
7ceae9b93e11ec2359f37d83f40d75fe
  $fShowWeightValue4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OpenIntervalValue "#) -}
f93866a6ca38b694a2ccb5ae5c4b6efc
  $fShowWeightValue5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "IntervalValue "#) -}
491f3bed7056c84491f6ed73bbfef8cb
  $fShowWeightValue6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SimpleValue "#) -}
d3ad244ce269a4529ee49534add3e523
  $fShowWeightValue7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
b034e8b5201ac641a4231829794f2df6
  $fShowWeightValue8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "vValue = "#) -}
22564f214b937597c8b340ba0c5f4728
  $fShowWeightValue9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fShowWeightValue_$cshow ::
    Duckling.Weight.Types.WeightValue -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Duckling.Weight.Types.WeightValue) ->
                 case x of wild {
                   Duckling.Weight.Types.SimpleValue b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Weight.Types.$fShowWeightValue6
                        (case b1 of ww { Duckling.Weight.Types.SingleValue ww1 ww2 ->
                         Duckling.Weight.Types.$w$cshowsPrec2
                           11#
                           ww1
                           ww2
                           (GHC.Types.[] @ GHC.Types.Char) })
                   Duckling.Weight.Types.IntervalValue b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Weight.Types.$fShowWeightValue5
                        (case b1 of ww { (,) ww1 ww2 ->
                         GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.shows7
                           (case ww1 of ww4 { Duckling.Weight.Types.SingleValue ww5 ww6 ->
                            Duckling.Weight.Types.$w$cshowsPrec2
                              0#
                              ww5
                              ww6
                              (GHC.Types.:
                                 @ GHC.Types.Char
                                 GHC.Show.shows5
                                 (GHC.Show.$fShow(,)_$sgo
                                    Duckling.Weight.Types.$fShowWeightValue13
                                    (case ww2 of ww7 { Duckling.Weight.Types.SingleValue ww8 ww9 ->
                                     Duckling.Weight.Types.$w$cshowsPrec2 0# ww8 ww9 })
                                    (GHC.Types.[] @ GHC.Show.ShowS))) }) })
                   Duckling.Weight.Types.OpenIntervalValue b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Weight.Types.$fShowWeightValue4
                        (case b1 of ww { (,) ww1 ww2 ->
                         GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.shows7
                           (case ww1 of ww4 { Duckling.Weight.Types.SingleValue ww5 ww6 ->
                            Duckling.Weight.Types.$w$cshowsPrec2
                              0#
                              ww5
                              ww6
                              (GHC.Types.:
                                 @ GHC.Types.Char
                                 GHC.Show.shows5
                                 (GHC.Show.$fShow(,)_$sgo
                                    Duckling.Weight.Types.$fShowWeightValue13
                                    (\ (eta :: GHC.Base.String) ->
                                     case ww2 of wild1 {
                                       Duckling.Weight.Types.Above
                                       -> GHC.Base.++
                                            @ GHC.Types.Char
                                            Duckling.Weight.Types.$fShowWeightValue3
                                            eta
                                       Duckling.Weight.Types.Under
                                       -> GHC.Base.++
                                            @ GHC.Types.Char
                                            Duckling.Weight.Types.$fShowWeightValue2
                                            eta })
                                    (GHC.Types.[] @ GHC.Show.ShowS))) }) }) }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fShowWeightValue_$cshowList ::
    [Duckling.Weight.Types.WeightValue] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Duckling.Weight.Types.WeightValue
                   Duckling.Weight.Types.$fShowWeightValue1) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fShowWeightValue_$cshowsPrec ::
    GHC.Types.Int
    -> Duckling.Weight.Types.WeightValue -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Duckling.Weight.Types.WeightValue) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Duckling.Weight.Types.$w$cshowsPrec1 ww1 w1 }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fToJSONSingleValue ::
    Data.Aeson.Types.ToJSON.ToJSON Duckling.Weight.Types.SingleValue
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.SingleValue
                  Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON1
                  Duckling.Weight.Types.$fToJSONSingleValue_$ctoEncoding
                  Duckling.Weight.Types.$fToJSONSingleValue_$ctoJSONList
                  Duckling.Weight.Types.$fToJSONSingleValue_$ctoEncodingList -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fToJSONSingleValue_$ctoEncoding ::
    Duckling.Weight.Types.SingleValue
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(U))>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Duckling.Weight.Types.SingleValue) ->
                 Data.Aeson.Encoding.Internal.value
                   (Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON1 eta)) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fToJSONSingleValue_$ctoEncodingList ::
    [Duckling.Weight.Types.SingleValue]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Duckling.Weight.Types.SingleValue]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON1 x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Duckling.Weight.Types.SingleValue
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Duckling.Weight.Types.SingleValue)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON1 v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Duckling.Weight.Types.SingleValue>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fToJSONSingleValue_$ctoJSONList ::
    [Duckling.Weight.Types.SingleValue]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Duckling.Weight.Types.SingleValue]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Duckling.Weight.Types.SingleValue
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Duckling.Weight.Types.SingleValue
                                       c
                                       Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON1)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fToJSONUnit ::
    Data.Aeson.Types.ToJSON.ToJSON Duckling.Weight.Types.Unit
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.Unit
                  Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON2
                  Duckling.Weight.Types.$fToJSONUnit_$ctoEncoding
                  Duckling.Weight.Types.$fToJSONUnit_$ctoJSONList
                  Duckling.Weight.Types.$fToJSONUnit_$ctoEncodingList -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fToJSONUnit_$ctoEncoding ::
    Duckling.Weight.Types.Unit -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Duckling.Weight.Types.Unit) ->
                 Data.Aeson.Encoding.Internal.value
                   (Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON2 eta)) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fToJSONUnit_$ctoEncodingList ::
    [Duckling.Weight.Types.Unit]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Duckling.Weight.Types.Unit]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON2 x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Duckling.Weight.Types.Unit
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Duckling.Weight.Types.Unit)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON2 v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Duckling.Weight.Types.Unit>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fToJSONUnit_$ctoJSONList ::
    [Duckling.Weight.Types.Unit] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Duckling.Weight.Types.Unit]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Duckling.Weight.Types.Unit
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Duckling.Weight.Types.Unit
                                       c
                                       Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON2)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fToJSONWeightValue ::
    Data.Aeson.Types.ToJSON.ToJSON Duckling.Weight.Types.WeightValue
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Weight.Types.WeightValue
                  Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON
                  Duckling.Weight.Types.$fToJSONWeightValue_$ctoEncoding
                  Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSONList
                  Duckling.Weight.Types.$fToJSONWeightValue_$ctoEncodingList -}
3aeb384877815f64002501f31e5a8fd6
  $fToJSONWeightValue1 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "to"#) -}
6991f468dcb68327d20519458317719e
  $fToJSONWeightValue10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "value"#) -}
dc952a13bb4b7eeb6e9ce7d1e41e7791
  $fToJSONWeightValue11 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "from"#) -}
d13898b27cd17d6a346c6d49e66ad0cf
  $fToJSONWeightValue12 :: Data.Aeson.Types.Internal.Pair
  {- Strictness: m,
     Unfolding: ((Duckling.Weight.Types.$fToJSONWeightValue14,
                  Duckling.Weight.Types.$fToJSONWeightValue13)) -}
147d32e23747cbaaa419b0cab4304ebe
  $fToJSONWeightValue13 :: Data.Aeson.Types.Internal.Value
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "interval"# of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.String dt }) -}
61cb07b8565054d88fe9744861ccd7f3
  $fToJSONWeightValue14 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "type"#) -}
c0047320c77f86493a706bf5a596dfe2
  $fToJSONWeightValue15 :: Data.Aeson.Types.Internal.Value
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "value"# of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.String dt }) -}
43f6e1a8b4d9ee9c5651a82e25f435a0
  $fToJSONWeightValue2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Tonne"#) -}
a7ec1af7cc793d727e4c0a7d51ceaca7
  $fToJSONWeightValue3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Pound"#) -}
0e8ab1656c5e2fb699ddca5eac42facc
  $fToJSONWeightValue4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Kilogram"#) -}
a9db76297b69034c97798cbceee8e529
  $fToJSONWeightValue5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Jin"#) -}
c99451ba177b77cfe57e12ce48a961ec
  $fToJSONWeightValue6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Gram"#) -}
a54fde49853e6b9e7c6240ff444c7049
  $fToJSONWeightValue7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Liang"#) -}
424230912d92bc86a1e11a8b67210de7
  $fToJSONWeightValue8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Milligram"#) -}
07a6175de84c1f86424160f0a14f1206
  $fToJSONWeightValue9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "unit"#) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fToJSONWeightValue_$ctoEncoding ::
    Duckling.Weight.Types.WeightValue
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Duckling.Weight.Types.WeightValue) ->
                 Data.Aeson.Encoding.Internal.value
                   (Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON eta)) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fToJSONWeightValue_$ctoEncodingList ::
    [Duckling.Weight.Types.WeightValue]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Duckling.Weight.Types.WeightValue]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Duckling.Weight.Types.WeightValue
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Duckling.Weight.Types.WeightValue)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Duckling.Weight.Types.WeightValue>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fToJSONWeightValue_$ctoJSON ::
    Duckling.Weight.Types.WeightValue
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Duckling.Weight.Types.WeightValue) ->
                 case Duckling.Weight.Types.$w$ctoJSON w of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.Object ww1 }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fToJSONWeightValue_$ctoJSON1 ::
    Duckling.Weight.Types.SingleValue
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(U))>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Duckling.Weight.Types.SingleValue) ->
                 case w of ww { Duckling.Weight.Types.SingleValue ww1 ww2 ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (Duckling.Weight.Types.$fToJSONWeightValue10,
                            Data.Aeson.Types.ToJSON.$fToJSONDouble_$srealFloatToJSON ww2)
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (Duckling.Weight.Types.$fToJSONWeightValue9,
                               Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON2 ww1)
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                 Data.Aeson.Types.Internal.Object dt } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fToJSONWeightValue_$ctoJSON2 ::
    Duckling.Weight.Types.Unit -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m3, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Duckling.Weight.Types.Unit) ->
                 case Duckling.Weight.Types.$w$ctoJSON1 w of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.String ww1 }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $fToJSONWeightValue_$ctoJSONList ::
    [Duckling.Weight.Types.WeightValue]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Duckling.Weight.Types.WeightValue]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Duckling.Weight.Types.WeightValue
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Duckling.Weight.Types.WeightValue
                                       c
                                       Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
5923cd5ef47e3aee246bf0fa111cac1d
  $tc'Above :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18336717801871173401##
                   16324569377356739533##
                   Duckling.Weight.Types.$trModule
                   Duckling.Weight.Types.$tc'Above1) -}
4186c88ebc9a238bcac7ca0139423c08
  $tc'Above1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Above"#) -}
3509ae37a3d729ed810f3a65048c5c5b
  $tc'Gram :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15577460973206297388##
                   17926323914163803137##
                   Duckling.Weight.Types.$trModule
                   Duckling.Weight.Types.$tc'Gram1) -}
1642b599a3503d63f5a1509b0453f53c
  $tc'Gram1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Gram"#) -}
9683adeb8662715f89d23bb60bdd7170
  $tc'IntervalValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1931725288180391120##
                   9678837703973199985##
                   Duckling.Weight.Types.$trModule
                   Duckling.Weight.Types.$tc'IntervalValue1) -}
2315d9064f3be5ef10cccaca55e32275
  $tc'IntervalValue1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'IntervalValue"#) -}
d5821f5ef0368056826b20d78f47d8ca
  $tc'Jin :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1802378171530164290##
                   16021133838109686758##
                   Duckling.Weight.Types.$trModule
                   Duckling.Weight.Types.$tc'Jin1) -}
5f78734c552fbc3ae060814cb6dce346
  $tc'Jin1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Jin"#) -}
2dfc2f1d2ea1817d20b458cbd297f925
  $tc'Kilogram :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6051899904642816451##
                   9882710172164233247##
                   Duckling.Weight.Types.$trModule
                   Duckling.Weight.Types.$tc'Kilogram1) -}
2e2e95004e5977bf5793254a11165e9e
  $tc'Kilogram1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Kilogram"#) -}
16c61c162c2af54459bc1c6ed25684d8
  $tc'Liang :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10998483050901652434##
                   651769470150522087##
                   Duckling.Weight.Types.$trModule
                   Duckling.Weight.Types.$tc'Liang1) -}
044af15fdb27f0b7396f0c87f7f92b37
  $tc'Liang1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Liang"#) -}
9d1de362c9703dc0d6efbccb27a373c2
  $tc'Milligram :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8092791408636816080##
                   5839422775343582902##
                   Duckling.Weight.Types.$trModule
                   Duckling.Weight.Types.$tc'Milligram1) -}
f76c79f60e91652725ac917db67d56be
  $tc'Milligram1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Milligram"#) -}
1b05a61e3a610b81ee996feefb395d02
  $tc'OpenIntervalValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   900765072397893079##
                   1487319386815162364##
                   Duckling.Weight.Types.$trModule
                   Duckling.Weight.Types.$tc'OpenIntervalValue1) -}
5ad3e39b8f23b109021fdb872967e74e
  $tc'OpenIntervalValue1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpenIntervalValue"#) -}
9648953237ba90f46135e8d9b876dd8d
  $tc'Pound :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17787934459941721555##
                   12366177207016441934##
                   Duckling.Weight.Types.$trModule
                   Duckling.Weight.Types.$tc'Pound1) -}
05d4ce9c3bf1659d489c8b3d2adb3e88
  $tc'Pound1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Pound"#) -}
181f3932ad77773e447f5ecb69a37dcc
  $tc'SimpleValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16612944442515932455##
                   2337481033630928573##
                   Duckling.Weight.Types.$trModule
                   Duckling.Weight.Types.$tc'SimpleValue1) -}
fd4ddbe969a7c7ba1d27620bf139f887
  $tc'SimpleValue1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'SimpleValue"#) -}
dfc6d24e354a0ae0a67553ae12db6e86
  $tc'SingleValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12390360457627156457##
                   4069287895853850294##
                   Duckling.Weight.Types.$trModule
                   Duckling.Weight.Types.$tc'SingleValue1) -}
7a79cda8d9bb9bfd1d7c0f3da3302e08
  $tc'SingleValue1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'SingleValue"#) -}
0d8e64e58b055c536cbf84999d6cbf35
  $tc'Tonne :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3993245747327347888##
                   14652126221765055333##
                   Duckling.Weight.Types.$trModule
                   Duckling.Weight.Types.$tc'Tonne1) -}
f3628cd601c52cfd0935b662737e012b
  $tc'Tonne1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Tonne"#) -}
6a2744736801d42d8c653fe8c1dbbcae
  $tc'Under :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12842813595937301935##
                   746736481758795788##
                   Duckling.Weight.Types.$trModule
                   Duckling.Weight.Types.$tc'Under1) -}
5c7956abeace77e3c88e02430a5743a8
  $tc'Under1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Under"#) -}
2a31faf094cd29d3777c7e0d89a46654
  $tc'WeightData :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14471369166573534329##
                   6308821528832333166##
                   Duckling.Weight.Types.$trModule
                   Duckling.Weight.Types.$tc'WeightData1) -}
30e825db6eedb1d310551b833505b0e8
  $tc'WeightData1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'WeightData"#) -}
94e65bd93581d342db8dd327db54577a
  $tcIntervalDirection :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8527666133622571038##
                   5269287581803718161##
                   Duckling.Weight.Types.$trModule
                   Duckling.Weight.Types.$tcIntervalDirection1) -}
f17e8cf6e00b30582d9859ac9c3250b0
  $tcIntervalDirection1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "IntervalDirection"#) -}
f6a5a82b6eee0a77e767aa6c79ae0eac
  $tcSingleValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   645427378310650667##
                   14750366407003811976##
                   Duckling.Weight.Types.$trModule
                   Duckling.Weight.Types.$tcSingleValue1) -}
60806053f2120c934344a007e6a7cf3d
  $tcSingleValue1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "SingleValue"#) -}
6eedab80064d0c5b3d0c2b753697918b
  $tcUnit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8306260856153823912##
                   4316406920443864938##
                   Duckling.Weight.Types.$trModule
                   Duckling.Weight.Types.$tcUnit1) -}
957121146a4ea7156ed0c9797e016291
  $tcUnit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Unit"#) -}
9f84159b3279592ea0ad552cfa08414e
  $tcWeightData :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15037798049974292647##
                   15788672067460709678##
                   Duckling.Weight.Types.$trModule
                   Duckling.Weight.Types.$tcWeightData1) -}
0cb86163c9f5f441164e4b2d155eacef
  $tcWeightData1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "WeightData"#) -}
71c50130e9af4627e98c5841e53a8bc3
  $tcWeightValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7739624730177768825##
                   3452159018813034201##
                   Duckling.Weight.Types.$trModule
                   Duckling.Weight.Types.$tcWeightValue1) -}
f2b2d9deddc3fe75fa31c715a2b97413
  $tcWeightValue1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "WeightValue"#) -}
5b3486609287c78fbcc5ba012c69a9f1
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Duckling.Weight.Types.$trModule2
                   Duckling.Weight.Types.$trModule1) -}
f28a7ab033dadb30acd528ade12076e8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Duckling.Weight.Types"#) -}
1db0d2aee24558e67a9f86ffcbbba884
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"#) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$c< ::
    Duckling.Weight.Types.Unit
    -> GHC.Types.Double
    -> Duckling.Weight.Types.Unit
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U)><S,1*U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: Duckling.Weight.Types.Unit)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: Duckling.Weight.Types.Unit)
                   (ww3 :: GHC.Types.Double) ->
                 case ww of wild {
                   Duckling.Weight.Types.Milligram
                   -> case ww2 of wild1 {
                        Duckling.Weight.Types.Milligram
                        -> GHC.Classes.$fOrdDouble_$c< ww1 ww3
                        Duckling.Weight.Types.Liang -> GHC.Types.True
                        Duckling.Weight.Types.Gram -> GHC.Types.True
                        Duckling.Weight.Types.Jin -> GHC.Types.True
                        Duckling.Weight.Types.Kilogram -> GHC.Types.True
                        Duckling.Weight.Types.Pound -> GHC.Types.True
                        Duckling.Weight.Types.Tonne -> GHC.Types.True }
                   Duckling.Weight.Types.Liang
                   -> case ww2 of wild1 {
                        Duckling.Weight.Types.Milligram -> GHC.Types.False
                        Duckling.Weight.Types.Liang -> GHC.Classes.$fOrdDouble_$c< ww1 ww3
                        Duckling.Weight.Types.Gram -> GHC.Types.True
                        Duckling.Weight.Types.Jin -> GHC.Types.True
                        Duckling.Weight.Types.Kilogram -> GHC.Types.True
                        Duckling.Weight.Types.Pound -> GHC.Types.True
                        Duckling.Weight.Types.Tonne -> GHC.Types.True }
                   Duckling.Weight.Types.Gram
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Gram -> GHC.Classes.$fOrdDouble_$c< ww1 ww3
                        Duckling.Weight.Types.Jin -> GHC.Types.True
                        Duckling.Weight.Types.Kilogram -> GHC.Types.True
                        Duckling.Weight.Types.Pound -> GHC.Types.True
                        Duckling.Weight.Types.Tonne -> GHC.Types.True }
                   Duckling.Weight.Types.Jin
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Jin -> GHC.Classes.$fOrdDouble_$c< ww1 ww3
                        Duckling.Weight.Types.Kilogram -> GHC.Types.True
                        Duckling.Weight.Types.Pound -> GHC.Types.True
                        Duckling.Weight.Types.Tonne -> GHC.Types.True }
                   Duckling.Weight.Types.Kilogram
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Kilogram
                        -> GHC.Classes.$fOrdDouble_$c< ww1 ww3
                        Duckling.Weight.Types.Pound -> GHC.Types.True
                        Duckling.Weight.Types.Tonne -> GHC.Types.True }
                   Duckling.Weight.Types.Pound
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Pound -> GHC.Classes.$fOrdDouble_$c< ww1 ww3
                        Duckling.Weight.Types.Tonne -> GHC.Types.True }
                   Duckling.Weight.Types.Tonne
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Tonne
                        -> GHC.Classes.$fOrdDouble_$c< ww1 ww3 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$c<1 ::
    GHC.Base.Maybe Duckling.Weight.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Duckling.Weight.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$c<= ::
    Duckling.Weight.Types.Unit
    -> GHC.Types.Double
    -> Duckling.Weight.Types.Unit
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U)><S,1*U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: Duckling.Weight.Types.Unit)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: Duckling.Weight.Types.Unit)
                   (ww3 :: GHC.Types.Double) ->
                 case ww of wild {
                   Duckling.Weight.Types.Milligram
                   -> case ww2 of wild1 {
                        Duckling.Weight.Types.Milligram
                        -> GHC.Classes.$fOrdDouble_$c<= ww1 ww3
                        Duckling.Weight.Types.Liang -> GHC.Types.True
                        Duckling.Weight.Types.Gram -> GHC.Types.True
                        Duckling.Weight.Types.Jin -> GHC.Types.True
                        Duckling.Weight.Types.Kilogram -> GHC.Types.True
                        Duckling.Weight.Types.Pound -> GHC.Types.True
                        Duckling.Weight.Types.Tonne -> GHC.Types.True }
                   Duckling.Weight.Types.Liang
                   -> case ww2 of wild1 {
                        Duckling.Weight.Types.Milligram -> GHC.Types.False
                        Duckling.Weight.Types.Liang -> GHC.Classes.$fOrdDouble_$c<= ww1 ww3
                        Duckling.Weight.Types.Gram -> GHC.Types.True
                        Duckling.Weight.Types.Jin -> GHC.Types.True
                        Duckling.Weight.Types.Kilogram -> GHC.Types.True
                        Duckling.Weight.Types.Pound -> GHC.Types.True
                        Duckling.Weight.Types.Tonne -> GHC.Types.True }
                   Duckling.Weight.Types.Gram
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Gram -> GHC.Classes.$fOrdDouble_$c<= ww1 ww3
                        Duckling.Weight.Types.Jin -> GHC.Types.True
                        Duckling.Weight.Types.Kilogram -> GHC.Types.True
                        Duckling.Weight.Types.Pound -> GHC.Types.True
                        Duckling.Weight.Types.Tonne -> GHC.Types.True }
                   Duckling.Weight.Types.Jin
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Jin -> GHC.Classes.$fOrdDouble_$c<= ww1 ww3
                        Duckling.Weight.Types.Kilogram -> GHC.Types.True
                        Duckling.Weight.Types.Pound -> GHC.Types.True
                        Duckling.Weight.Types.Tonne -> GHC.Types.True }
                   Duckling.Weight.Types.Kilogram
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Kilogram
                        -> GHC.Classes.$fOrdDouble_$c<= ww1 ww3
                        Duckling.Weight.Types.Pound -> GHC.Types.True
                        Duckling.Weight.Types.Tonne -> GHC.Types.True }
                   Duckling.Weight.Types.Pound
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Pound -> GHC.Classes.$fOrdDouble_$c<= ww1 ww3
                        Duckling.Weight.Types.Tonne -> GHC.Types.True }
                   Duckling.Weight.Types.Tonne
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Tonne
                        -> GHC.Classes.$fOrdDouble_$c<= ww1 ww3 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$c<=1 ::
    GHC.Base.Maybe Duckling.Weight.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Duckling.Weight.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$c== ::
    Duckling.Weight.Types.Unit
    -> GHC.Types.Double
    -> Duckling.Weight.Types.Unit
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U)><S,1*U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: Duckling.Weight.Types.Unit)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: Duckling.Weight.Types.Unit)
                   (ww3 :: GHC.Types.Double) ->
                 case ww of wild {
                   Duckling.Weight.Types.Milligram
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Milligram -> GHC.Classes.eqDouble ww1 ww3 }
                   Duckling.Weight.Types.Liang
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Liang -> GHC.Classes.eqDouble ww1 ww3 }
                   Duckling.Weight.Types.Gram
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Gram -> GHC.Classes.eqDouble ww1 ww3 }
                   Duckling.Weight.Types.Jin
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Jin -> GHC.Classes.eqDouble ww1 ww3 }
                   Duckling.Weight.Types.Kilogram
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Kilogram -> GHC.Classes.eqDouble ww1 ww3 }
                   Duckling.Weight.Types.Pound
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Pound -> GHC.Classes.eqDouble ww1 ww3 }
                   Duckling.Weight.Types.Tonne
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Weight.Types.Tonne -> GHC.Classes.eqDouble ww1 ww3 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$c==1 ::
    GHC.Base.Maybe Duckling.Weight.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Duckling.Weight.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$c> ::
    Duckling.Weight.Types.Unit
    -> GHC.Types.Double
    -> Duckling.Weight.Types.Unit
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U)><S,1*U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: Duckling.Weight.Types.Unit)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: Duckling.Weight.Types.Unit)
                   (ww3 :: GHC.Types.Double) ->
                 case ww of wild {
                   Duckling.Weight.Types.Milligram
                   -> case ww2 of wild1 {
                        Duckling.Weight.Types.Milligram
                        -> GHC.Classes.$fOrdDouble_$c> ww1 ww3
                        Duckling.Weight.Types.Liang -> GHC.Types.False
                        Duckling.Weight.Types.Gram -> GHC.Types.False
                        Duckling.Weight.Types.Jin -> GHC.Types.False
                        Duckling.Weight.Types.Kilogram -> GHC.Types.False
                        Duckling.Weight.Types.Pound -> GHC.Types.False
                        Duckling.Weight.Types.Tonne -> GHC.Types.False }
                   Duckling.Weight.Types.Liang
                   -> case ww2 of wild1 {
                        Duckling.Weight.Types.Milligram -> GHC.Types.True
                        Duckling.Weight.Types.Liang -> GHC.Classes.$fOrdDouble_$c> ww1 ww3
                        Duckling.Weight.Types.Gram -> GHC.Types.False
                        Duckling.Weight.Types.Jin -> GHC.Types.False
                        Duckling.Weight.Types.Kilogram -> GHC.Types.False
                        Duckling.Weight.Types.Pound -> GHC.Types.False
                        Duckling.Weight.Types.Tonne -> GHC.Types.False }
                   Duckling.Weight.Types.Gram
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.Gram -> GHC.Classes.$fOrdDouble_$c> ww1 ww3
                        Duckling.Weight.Types.Jin -> GHC.Types.False
                        Duckling.Weight.Types.Kilogram -> GHC.Types.False
                        Duckling.Weight.Types.Pound -> GHC.Types.False
                        Duckling.Weight.Types.Tonne -> GHC.Types.False }
                   Duckling.Weight.Types.Jin
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.Jin -> GHC.Classes.$fOrdDouble_$c> ww1 ww3
                        Duckling.Weight.Types.Kilogram -> GHC.Types.False
                        Duckling.Weight.Types.Pound -> GHC.Types.False
                        Duckling.Weight.Types.Tonne -> GHC.Types.False }
                   Duckling.Weight.Types.Kilogram
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.Kilogram
                        -> GHC.Classes.$fOrdDouble_$c> ww1 ww3
                        Duckling.Weight.Types.Pound -> GHC.Types.False
                        Duckling.Weight.Types.Tonne -> GHC.Types.False }
                   Duckling.Weight.Types.Pound
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.Pound -> GHC.Classes.$fOrdDouble_$c> ww1 ww3
                        Duckling.Weight.Types.Tonne -> GHC.Types.False }
                   Duckling.Weight.Types.Tonne
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.Tonne
                        -> GHC.Classes.$fOrdDouble_$c> ww1 ww3 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$c>1 ::
    GHC.Base.Maybe Duckling.Weight.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Duckling.Weight.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$c>= ::
    Duckling.Weight.Types.Unit
    -> GHC.Types.Double
    -> Duckling.Weight.Types.Unit
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U)><S,1*U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: Duckling.Weight.Types.Unit)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: Duckling.Weight.Types.Unit)
                   (ww3 :: GHC.Types.Double) ->
                 case ww of wild {
                   Duckling.Weight.Types.Milligram
                   -> case ww2 of wild1 {
                        Duckling.Weight.Types.Milligram
                        -> GHC.Classes.$fOrdDouble_$c>= ww1 ww3
                        Duckling.Weight.Types.Liang -> GHC.Types.False
                        Duckling.Weight.Types.Gram -> GHC.Types.False
                        Duckling.Weight.Types.Jin -> GHC.Types.False
                        Duckling.Weight.Types.Kilogram -> GHC.Types.False
                        Duckling.Weight.Types.Pound -> GHC.Types.False
                        Duckling.Weight.Types.Tonne -> GHC.Types.False }
                   Duckling.Weight.Types.Liang
                   -> case ww2 of wild1 {
                        Duckling.Weight.Types.Milligram -> GHC.Types.True
                        Duckling.Weight.Types.Liang -> GHC.Classes.$fOrdDouble_$c>= ww1 ww3
                        Duckling.Weight.Types.Gram -> GHC.Types.False
                        Duckling.Weight.Types.Jin -> GHC.Types.False
                        Duckling.Weight.Types.Kilogram -> GHC.Types.False
                        Duckling.Weight.Types.Pound -> GHC.Types.False
                        Duckling.Weight.Types.Tonne -> GHC.Types.False }
                   Duckling.Weight.Types.Gram
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.Gram -> GHC.Classes.$fOrdDouble_$c>= ww1 ww3
                        Duckling.Weight.Types.Jin -> GHC.Types.False
                        Duckling.Weight.Types.Kilogram -> GHC.Types.False
                        Duckling.Weight.Types.Pound -> GHC.Types.False
                        Duckling.Weight.Types.Tonne -> GHC.Types.False }
                   Duckling.Weight.Types.Jin
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.Jin -> GHC.Classes.$fOrdDouble_$c>= ww1 ww3
                        Duckling.Weight.Types.Kilogram -> GHC.Types.False
                        Duckling.Weight.Types.Pound -> GHC.Types.False
                        Duckling.Weight.Types.Tonne -> GHC.Types.False }
                   Duckling.Weight.Types.Kilogram
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.Kilogram
                        -> GHC.Classes.$fOrdDouble_$c>= ww1 ww3
                        Duckling.Weight.Types.Pound -> GHC.Types.False
                        Duckling.Weight.Types.Tonne -> GHC.Types.False }
                   Duckling.Weight.Types.Pound
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.Pound -> GHC.Classes.$fOrdDouble_$c>= ww1 ww3
                        Duckling.Weight.Types.Tonne -> GHC.Types.False }
                   Duckling.Weight.Types.Tonne
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Weight.Types.Tonne
                        -> GHC.Classes.$fOrdDouble_$c>= ww1 ww3 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$c>=1 ::
    GHC.Base.Maybe Duckling.Weight.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Duckling.Weight.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$ccompare ::
    Duckling.Weight.Types.Unit
    -> GHC.Types.Double
    -> Duckling.Weight.Types.Unit
    -> GHC.Types.Double
    -> GHC.Types.Ordering
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U)><S,1*U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: Duckling.Weight.Types.Unit)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: Duckling.Weight.Types.Unit)
                   (ww3 :: GHC.Types.Double) ->
                 case ww of wild {
                   Duckling.Weight.Types.Milligram
                   -> case ww2 of wild1 {
                        Duckling.Weight.Types.Milligram
                        -> GHC.Classes.$fOrdDouble_$ccompare ww1 ww3
                        Duckling.Weight.Types.Liang -> GHC.Types.LT
                        Duckling.Weight.Types.Gram -> GHC.Types.LT
                        Duckling.Weight.Types.Jin -> GHC.Types.LT
                        Duckling.Weight.Types.Kilogram -> GHC.Types.LT
                        Duckling.Weight.Types.Pound -> GHC.Types.LT
                        Duckling.Weight.Types.Tonne -> GHC.Types.LT }
                   Duckling.Weight.Types.Liang
                   -> case ww2 of wild1 {
                        Duckling.Weight.Types.Milligram -> GHC.Types.GT
                        Duckling.Weight.Types.Liang
                        -> GHC.Classes.$fOrdDouble_$ccompare ww1 ww3
                        Duckling.Weight.Types.Gram -> GHC.Types.LT
                        Duckling.Weight.Types.Jin -> GHC.Types.LT
                        Duckling.Weight.Types.Kilogram -> GHC.Types.LT
                        Duckling.Weight.Types.Pound -> GHC.Types.LT
                        Duckling.Weight.Types.Tonne -> GHC.Types.LT }
                   Duckling.Weight.Types.Gram
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Duckling.Weight.Types.Gram
                        -> GHC.Classes.$fOrdDouble_$ccompare ww1 ww3
                        Duckling.Weight.Types.Jin -> GHC.Types.LT
                        Duckling.Weight.Types.Kilogram -> GHC.Types.LT
                        Duckling.Weight.Types.Pound -> GHC.Types.LT
                        Duckling.Weight.Types.Tonne -> GHC.Types.LT }
                   Duckling.Weight.Types.Jin
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Duckling.Weight.Types.Jin
                        -> GHC.Classes.$fOrdDouble_$ccompare ww1 ww3
                        Duckling.Weight.Types.Kilogram -> GHC.Types.LT
                        Duckling.Weight.Types.Pound -> GHC.Types.LT
                        Duckling.Weight.Types.Tonne -> GHC.Types.LT }
                   Duckling.Weight.Types.Kilogram
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Duckling.Weight.Types.Kilogram
                        -> GHC.Classes.$fOrdDouble_$ccompare ww1 ww3
                        Duckling.Weight.Types.Pound -> GHC.Types.LT
                        Duckling.Weight.Types.Tonne -> GHC.Types.LT }
                   Duckling.Weight.Types.Pound
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Duckling.Weight.Types.Pound
                        -> GHC.Classes.$fOrdDouble_$ccompare ww1 ww3
                        Duckling.Weight.Types.Tonne -> GHC.Types.LT }
                   Duckling.Weight.Types.Tonne
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Duckling.Weight.Types.Tonne
                        -> GHC.Classes.$fOrdDouble_$ccompare ww1 ww3 } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$ccompare1 ::
    GHC.Base.Maybe Duckling.Weight.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Duckling.Weight.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Types.Ordering
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$cresolve ::
    GHC.Base.Maybe Duckling.Weight.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe
         (Duckling.Resolve.ResolvedValue Duckling.Weight.Types.WeightData,
          GHC.Types.Bool)
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.Maybe Duckling.Weight.Types.Unit)
                   (ww1 :: GHC.Base.Maybe GHC.Types.Double)
                   (ww2 :: GHC.Base.Maybe GHC.Types.Double)
                   (ww3 :: GHC.Base.Maybe GHC.Types.Double) ->
                 let {
                   fail :: GHC.Prim.Void#
                           -> GHC.Base.Maybe
                                (Duckling.Resolve.ResolvedValue Duckling.Weight.Types.WeightData,
                                 GHC.Types.Bool)
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ (ds :: GHC.Prim.Void#)[OneShot] ->
                     case ww of wild {
                       GHC.Base.Nothing
                       -> (GHC.Base.Nothing
                             @ (Duckling.Weight.Types.WeightValue, GHC.Types.Bool))
                            `cast`
                          (GHC.Base.Maybe
                             ((,)
                                (Sub (Sym (Duckling.Weight.Types.D:R:ResolvedValueWeightData[0])))
                                <GHC.Types.Bool>_R)_R)_R
                       GHC.Base.Just unit1
                       -> case ww1 of wild1 {
                            GHC.Base.Nothing
                            -> case ww2 of wild2 {
                                 GHC.Base.Nothing
                                 -> case ww3 of wild3 {
                                      GHC.Base.Nothing
                                      -> (GHC.Base.Nothing
                                            @ (Duckling.Weight.Types.WeightValue, GHC.Types.Bool))
                                           `cast`
                                         (GHC.Base.Maybe
                                            ((,)
                                               (Sub (Sym (Duckling.Weight.Types.D:R:ResolvedValueWeightData[0])))
                                               <GHC.Types.Bool>_R)_R)_R
                                      GHC.Base.Just to
                                      -> (GHC.Base.Just
                                            @ (Duckling.Weight.Types.WeightValue, GHC.Types.Bool)
                                            (Duckling.Weight.Types.OpenIntervalValue
                                               (Duckling.Weight.Types.SingleValue unit1 to,
                                                Duckling.Weight.Types.Under),
                                             GHC.Types.False))
                                           `cast`
                                         (GHC.Base.Maybe
                                            ((,)
                                               (Sub (Sym (Duckling.Weight.Types.D:R:ResolvedValueWeightData[0])))
                                               <GHC.Types.Bool>_R)_R)_R }
                                 GHC.Base.Just from
                                 -> case ww3 of wild3 {
                                      GHC.Base.Nothing
                                      -> (GHC.Base.Just
                                            @ (Duckling.Weight.Types.WeightValue, GHC.Types.Bool)
                                            (Duckling.Weight.Types.OpenIntervalValue
                                               (Duckling.Weight.Types.SingleValue unit1 from,
                                                Duckling.Weight.Types.Above),
                                             GHC.Types.False))
                                           `cast`
                                         (GHC.Base.Maybe
                                            ((,)
                                               (Sub (Sym (Duckling.Weight.Types.D:R:ResolvedValueWeightData[0])))
                                               <GHC.Types.Bool>_R)_R)_R
                                      GHC.Base.Just to
                                      -> (GHC.Base.Just
                                            @ (Duckling.Weight.Types.WeightValue, GHC.Types.Bool)
                                            (Duckling.Weight.Types.IntervalValue
                                               (Duckling.Weight.Types.SingleValue unit1 from,
                                                Duckling.Weight.Types.SingleValue unit1 to),
                                             GHC.Types.False))
                                           `cast`
                                         (GHC.Base.Maybe
                                            ((,)
                                               (Sub (Sym (Duckling.Weight.Types.D:R:ResolvedValueWeightData[0])))
                                               <GHC.Types.Bool>_R)_R)_R } }
                            GHC.Base.Just ipv
                            -> (GHC.Base.Nothing
                                  @ (Duckling.Weight.Types.WeightValue, GHC.Types.Bool))
                                 `cast`
                               (GHC.Base.Maybe
                                  ((,)
                                     (Sub (Sym (Duckling.Weight.Types.D:R:ResolvedValueWeightData[0])))
                                     <GHC.Types.Bool>_R)_R)_R } }
                 } in
                 case ww of wild {
                   GHC.Base.Nothing -> fail GHC.Prim.void#
                   GHC.Base.Just unit1
                   -> case ww1 of wild1 {
                        GHC.Base.Nothing -> fail GHC.Prim.void#
                        GHC.Base.Just val
                        -> (GHC.Base.Just
                              @ (Duckling.Weight.Types.WeightValue, GHC.Types.Bool)
                              (Duckling.Weight.Types.SimpleValue
                                 (Duckling.Weight.Types.SingleValue unit1 val),
                               GHC.Types.False))
                             `cast`
                           (GHC.Base.Maybe
                              ((,)
                                 (Sub (Sym (Duckling.Weight.Types.D:R:ResolvedValueWeightData[0])))
                                 <GHC.Types.Bool>_R)_R)_R } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$crnf ::
    GHC.Base.Maybe Duckling.Weight.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> ()
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><S,1*U><S,1*U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.Maybe Duckling.Weight.Types.Unit)
                   (ww1 :: GHC.Base.Maybe GHC.Types.Double)
                   (ww2 :: GHC.Base.Maybe GHC.Types.Double)
                   (ww3 :: GHC.Base.Maybe GHC.Types.Double) ->
                 case case ww of wild {
                        GHC.Base.Nothing -> GHC.Tuple.()
                        GHC.Base.Just x
                        -> case x of wild1 { DEFAULT -> GHC.Tuple.() } } of wild1 { () ->
                 case case ww1 of wild {
                        GHC.Base.Nothing -> GHC.Tuple.()
                        GHC.Base.Just x
                        -> Control.DeepSeq.$fNFDataDouble_$crnf x } of wild2 { () ->
                 case case ww2 of wild {
                        GHC.Base.Nothing -> GHC.Tuple.()
                        GHC.Base.Just x
                        -> Control.DeepSeq.$fNFDataDouble_$crnf x } of wild3 { () ->
                 case ww3 of wild {
                   GHC.Base.Nothing -> GHC.Tuple.()
                   GHC.Base.Just x
                   -> Control.DeepSeq.$fNFDataDouble_$crnf x } } } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$cshowsPrec ::
    Duckling.Weight.Types.Unit -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Duckling.Weight.Types.Unit)
                   (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Duckling.Weight.Types.Milligram
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Weight.Types.$fToJSONWeightValue8
                        w1
                   Duckling.Weight.Types.Liang
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Weight.Types.$fToJSONWeightValue7
                        w1
                   Duckling.Weight.Types.Gram
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Weight.Types.$fToJSONWeightValue6
                        w1
                   Duckling.Weight.Types.Jin
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Weight.Types.$fToJSONWeightValue5
                        w1
                   Duckling.Weight.Types.Kilogram
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Weight.Types.$fToJSONWeightValue4
                        w1
                   Duckling.Weight.Types.Pound
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Weight.Types.$fToJSONWeightValue3
                        w1
                   Duckling.Weight.Types.Tonne
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Weight.Types.$fToJSONWeightValue2
                        w1 }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Duckling.Weight.Types.WeightValue -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Duckling.Weight.Types.WeightValue) ->
                 case w of wild {
                   Duckling.Weight.Types.SimpleValue b1
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = case b1 of ww1 { Duckling.Weight.Types.SingleValue ww2 ww3 ->
                          Duckling.Weight.Types.$w$cshowsPrec2 11# ww2 ww3 }
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Duckling.Weight.Types.$fShowWeightValue6
                             (g x)
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Duckling.Weight.Types.$fShowWeightValue6
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x))) }
                   Duckling.Weight.Types.IntervalValue b1
                   -> let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Base.String) ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            Duckling.Weight.Types.$fShowWeightValue5
                            (case b1 of ww1 { (,) ww2 ww3 ->
                             GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.shows7
                               (case ww2 of ww4 { Duckling.Weight.Types.SingleValue ww5 ww6 ->
                                Duckling.Weight.Types.$w$cshowsPrec2
                                  0#
                                  ww5
                                  ww6
                                  (GHC.Types.:
                                     @ GHC.Types.Char
                                     GHC.Show.shows5
                                     (GHC.Show.$fShow(,)_$sgo
                                        (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x)
                                        (case ww3 of ww7 { Duckling.Weight.Types.SingleValue ww8 ww9 ->
                                         Duckling.Weight.Types.$w$cshowsPrec2 0# ww8 ww9 })
                                        (GHC.Types.[] @ GHC.Show.ShowS))) }) })
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False -> p
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x)) }
                   Duckling.Weight.Types.OpenIntervalValue b1
                   -> let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Base.String) ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            Duckling.Weight.Types.$fShowWeightValue4
                            (case b1 of ww1 { (,) ww2 ww3 ->
                             GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.shows7
                               (case ww2 of ww4 { Duckling.Weight.Types.SingleValue ww5 ww6 ->
                                Duckling.Weight.Types.$w$cshowsPrec2
                                  0#
                                  ww5
                                  ww6
                                  (GHC.Types.:
                                     @ GHC.Types.Char
                                     GHC.Show.shows5
                                     (GHC.Show.$fShow(,)_$sgo
                                        (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x)
                                        (\ (eta :: GHC.Base.String) ->
                                         case ww3 of wild1 {
                                           Duckling.Weight.Types.Above
                                           -> GHC.Base.++
                                                @ GHC.Types.Char
                                                Duckling.Weight.Types.$fShowWeightValue3
                                                eta
                                           Duckling.Weight.Types.Under
                                           -> GHC.Base.++
                                                @ GHC.Types.Char
                                                Duckling.Weight.Types.$fShowWeightValue2
                                                eta })
                                        (GHC.Types.[] @ GHC.Show.ShowS))) }) })
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False -> p
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x)) } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> Duckling.Weight.Types.Unit -> GHC.Types.Double -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,U><L,U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Duckling.Weight.Types.Unit)
                   (ww2 :: GHC.Types.Double) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = case ww2 of ww3 { GHC.Types.D# ww4 ->
                     GHC.Float.$w$sshowSignedFloat
                       GHC.Float.$fShowDouble_$sshowFloat
                       Duckling.Weight.Types.$fShowWeightValue12
                       ww4 }
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Duckling.Weight.Types.$fShowWeightValue11
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Duckling.Weight.Types.$fShowWeightValue10
                          (Duckling.Weight.Types.$w$cshowsPrec
                             ww1
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Duckling.Weight.Types.$fShowWeightValue9
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Duckling.Weight.Types.$fShowWeightValue8
                                   (f (GHC.Base.++
                                         @ GHC.Types.Char
                                         Duckling.Weight.Types.$fShowWeightValue7
                                         x))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p
                   GHC.Types.True
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x)) }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> GHC.Base.Maybe Duckling.Weight.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Show.ShowS
  {- Arity: 5, Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.Maybe Duckling.Weight.Types.Unit)
                   (ww2 :: GHC.Base.Maybe GHC.Types.Double)
                   (ww3 :: GHC.Base.Maybe GHC.Types.Double)
                   (ww4 :: GHC.Base.Maybe GHC.Types.Double) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ Duckling.Weight.Types.Unit
                       Duckling.Weight.Types.$fShowUnit
                       Duckling.Weight.Types.$fShowWeightValue12
                       ww1
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ GHC.Types.Double
                       GHC.Float.$fShowDouble
                       Duckling.Weight.Types.$fShowWeightValue12
                       ww2
                 } in
                 let {
                   f2 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ GHC.Types.Double
                       GHC.Float.$fShowDouble
                       Duckling.Weight.Types.$fShowWeightValue12
                       ww3
                 } in
                 let {
                   f3 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ GHC.Types.Double
                       GHC.Float.$fShowDouble
                       Duckling.Weight.Types.$fShowWeightValue12
                       ww4
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Duckling.Weight.Types.$fShowWeightData6
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Duckling.Weight.Types.$fShowWeightData5
                          (f (GHC.Base.++
                                @ GHC.Types.Char
                                Duckling.Weight.Types.$fShowWeightValue9
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Duckling.Weight.Types.$fShowWeightData4
                                   (f1
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Duckling.Weight.Types.$fShowWeightValue9
                                         (GHC.Base.++
                                            @ GHC.Types.Char
                                            Duckling.Weight.Types.$fShowWeightData3
                                            (f2
                                               (GHC.Base.++
                                                  @ GHC.Types.Char
                                                  Duckling.Weight.Types.$fShowWeightValue9
                                                  (GHC.Base.++
                                                     @ GHC.Types.Char
                                                     Duckling.Weight.Types.$fShowWeightData2
                                                     (f3
                                                        (GHC.Base.++
                                                           @ GHC.Types.Char
                                                           Duckling.Weight.Types.$fShowWeightValue7
                                                           x))))))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p
                   GHC.Types.True
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x)) }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$ctoJSON ::
    Duckling.Weight.Types.WeightValue
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Duckling.Weight.Types.WeightValue) ->
                 case w of wild {
                   Duckling.Weight.Types.SimpleValue value1
                   -> case value1 of ww { Duckling.Weight.Types.SingleValue ww1 ww2 ->
                      case Data.Aeson.Types.Internal.$sfromList1
                             @ Data.Aeson.Types.Internal.Value
                             (GHC.Types.:
                                @ Data.Aeson.Types.Internal.Pair
                                (Duckling.Weight.Types.$fToJSONWeightValue10,
                                 Data.Aeson.Types.ToJSON.$fToJSONDouble_$srealFloatToJSON ww2)
                                (GHC.Types.:
                                   @ Data.Aeson.Types.Internal.Pair
                                   (Duckling.Weight.Types.$fToJSONWeightValue9,
                                    Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON2 ww1)
                                   (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                             (Data.HashMap.Base.Empty
                                @ Data.Text.Internal.Text
                                @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                      case Duckling.Weight.Types.$fToJSONWeightValue15 of v2 { DEFAULT ->
                      case Duckling.Weight.Types.$fToJSONWeightValue14 of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                      case Duckling.Weight.Types.$w$sinsert
                             @ Data.Aeson.Types.Internal.Value
                             ww4
                             ww5
                             ww6
                             v2
                             dt of dt1 { DEFAULT ->
                      (# dt1 #) } } } } }
                   Duckling.Weight.Types.IntervalValue ds
                   -> case ds of wild1 { (,) from to ->
                      case Data.Aeson.Types.Internal.$sfromList1
                             @ Data.Aeson.Types.Internal.Value
                             (GHC.Types.:
                                @ Data.Aeson.Types.Internal.Pair
                                Duckling.Weight.Types.$fToJSONWeightValue12
                                (GHC.Types.:
                                   @ Data.Aeson.Types.Internal.Pair
                                   (Duckling.Weight.Types.$fToJSONWeightValue11,
                                    Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON1 from)
                                   (GHC.Types.:
                                      @ Data.Aeson.Types.Internal.Pair
                                      (Duckling.Weight.Types.$fToJSONWeightValue1,
                                       Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON1 to)
                                      (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))))
                             (Data.HashMap.Base.Empty
                                @ Data.Text.Internal.Text
                                @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                      (# dt #) } }
                   Duckling.Weight.Types.OpenIntervalValue ds
                   -> case ds of wild1 { (,) from ds1 ->
                      case ds1 of wild2 {
                        Duckling.Weight.Types.Above
                        -> case Data.Aeson.Types.Internal.$sfromList1
                                  @ Data.Aeson.Types.Internal.Value
                                  (GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Pair
                                     Duckling.Weight.Types.$fToJSONWeightValue12
                                     (GHC.Types.:
                                        @ Data.Aeson.Types.Internal.Pair
                                        (Duckling.Weight.Types.$fToJSONWeightValue11,
                                         Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON1 from)
                                        (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                                  (Data.HashMap.Base.Empty
                                     @ Data.Text.Internal.Text
                                     @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                           (# dt #) }
                        Duckling.Weight.Types.Under
                        -> case Data.Aeson.Types.Internal.$sfromList1
                                  @ Data.Aeson.Types.Internal.Value
                                  (GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Pair
                                     Duckling.Weight.Types.$fToJSONWeightValue12
                                     (GHC.Types.:
                                        @ Data.Aeson.Types.Internal.Pair
                                        (Duckling.Weight.Types.$fToJSONWeightValue1,
                                         Duckling.Weight.Types.$fToJSONWeightValue_$ctoJSON1 from)
                                        (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                                  (Data.HashMap.Base.Empty
                                     @ Data.Text.Internal.Text
                                     @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                           (# dt #) } } } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$ctoJSON1 ::
    Duckling.Weight.Types.Unit -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Duckling.Weight.Types.Unit) ->
                 case Duckling.Weight.Types.$w$cshowsPrec
                        w
                        (GHC.Types.[] @ GHC.Types.Char) of dt { DEFAULT ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                10#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         Duckling.Weight.Types.$wouter
                           ipv1
                           4#
                           dt
                           '\NUL'#
                           '\NUL'#
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt1 #) } } }) -}
2dafbfa54ff6c5cd346d9ed6408d6389
  $w$dGHashable ::
    GHC.Prim.Int#
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "minValue")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
         a1
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "maxValue")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
         a1
    -> GHC.Prim.Int#
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><S,1*U><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "minValue")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
                             a1)
                   (ww2 :: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "maxValue")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
                             a1) ->
                 let {
                   $j :: GHC.Prim.Int# -> GHC.Prim.Int# {- Arity: 1 -}
                   = \ (ww3 :: GHC.Prim.Int#)[OneShot] ->
                     case ww2
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "maxValue")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)>_R <a1>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P
                                    <GHC.Base.Maybe GHC.Types.Double>_R
                                    <a1>_P)) of wild {
                       GHC.Base.Nothing -> GHC.Prim.*# ww3 16777619#
                       GHC.Base.Just a2
                       -> case a2 of ww4 { GHC.Types.D# ww5 ->
                          case GHC.Magic.runRW#
                                 @ 'GHC.Types.PtrRepLifted
                                 @ GHC.Word.Word64
                                 (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case GHC.Prim.newAlignedPinnedByteArray#
                                         @ GHC.Prim.RealWorld
                                         8#
                                         8#
                                         eta of ds2 { (#,#) ipv ipv1 ->
                                  case GHC.Prim.unsafeFreezeByteArray#
                                         @ GHC.Prim.RealWorld
                                         ipv1
                                         ipv of ds3 { (#,#) ipv2 ipv3 ->
                                  let {
                                    ptr :: GHC.Prim.Addr# = GHC.Prim.byteArrayContents# ipv3
                                  } in
                                  case GHC.Prim.writeDoubleOffAddr#
                                         @ GHC.Prim.RealWorld
                                         ptr
                                         0#
                                         ww5
                                         ipv2 of s2 { DEFAULT ->
                                  case GHC.Prim.readWord64OffAddr#
                                         @ GHC.Prim.RealWorld
                                         ptr
                                         0#
                                         s2 of ds1 { (#,#) ipv4 ipv5 ->
                                  case GHC.Prim.touch#
                                         @ 'GHC.Types.PtrRepUnlifted
                                         @ GHC.Prim.ByteArray#
                                         ipv3
                                         ipv4 of s4 { DEFAULT ->
                                  (# s4, GHC.Word.W64# ipv5 #) } } } } }) of ds1 { (#,#) ipv ipv1 ->
                          case ipv1 of wild1 { GHC.Word.W64# x# ->
                          GHC.Prim.xorI#
                            (GHC.Prim.*#
                               (GHC.Prim.xorI# (GHC.Prim.*# ww3 16777619#) 6148914691236517205#)
                               16777619#)
                            (GHC.Prim.word2Int# x#) } } } }
                 } in
                 case ww1
                        `cast`
                      (Trans
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.S>_P
                                <'GHC.Generics.MetaSel
                                   ('GHC.Base.Just "minValue")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy>_P
                                <GHC.Generics.K1
                                   GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)>_R <a1>_N)
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P
                                <GHC.Base.Maybe GHC.Types.Double>_R
                                <a1>_P)) of wild {
                   GHC.Base.Nothing -> $j (GHC.Prim.*# ww 16777619#)
                   GHC.Base.Just a2
                   -> case a2 of ww3 { GHC.Types.D# ww4 ->
                      case GHC.Magic.runRW#
                             @ 'GHC.Types.PtrRepLifted
                             @ GHC.Word.Word64
                             (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.newAlignedPinnedByteArray#
                                     @ GHC.Prim.RealWorld
                                     8#
                                     8#
                                     eta of ds2 { (#,#) ipv ipv1 ->
                              case GHC.Prim.unsafeFreezeByteArray#
                                     @ GHC.Prim.RealWorld
                                     ipv1
                                     ipv of ds3 { (#,#) ipv2 ipv3 ->
                              let {
                                ptr :: GHC.Prim.Addr# = GHC.Prim.byteArrayContents# ipv3
                              } in
                              case GHC.Prim.writeDoubleOffAddr#
                                     @ GHC.Prim.RealWorld
                                     ptr
                                     0#
                                     ww4
                                     ipv2 of s2 { DEFAULT ->
                              case GHC.Prim.readWord64OffAddr#
                                     @ GHC.Prim.RealWorld
                                     ptr
                                     0#
                                     s2 of ds1 { (#,#) ipv4 ipv5 ->
                              case GHC.Prim.touch#
                                     @ 'GHC.Types.PtrRepUnlifted
                                     @ GHC.Prim.ByteArray#
                                     ipv3
                                     ipv4 of s4 { DEFAULT ->
                              (# s4, GHC.Word.W64# ipv5 #) } } } } }) of ds1 { (#,#) ipv ipv1 ->
                      case ipv1 of wild1 { GHC.Word.W64# x# ->
                      $j
                        (GHC.Prim.xorI#
                           (GHC.Prim.*#
                              (GHC.Prim.xorI# (GHC.Prim.*# ww 16777619#) 6148914691236517205#)
                              16777619#)
                           (GHC.Prim.word2Int# x#)) } } } }) -}
41a2e2b28fbb0942759ccfaa26dba44e
  $w$dGHashable1 ::
    GHC.Prim.Int#
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "unit")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 (GHC.Base.Maybe Duckling.Weight.Types.Unit))
         a1
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "value")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
         a1
    -> GHC.Prim.Int#
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><S,1*U><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "unit")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 (GHC.Base.Maybe Duckling.Weight.Types.Unit))
                             a1)
                   (ww2 :: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "value")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
                             a1) ->
                 let {
                   $j :: GHC.Prim.Int# -> GHC.Prim.Int# {- Arity: 1 -}
                   = \ (ww3 :: GHC.Prim.Int#)[OneShot] ->
                     case ww2
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "value")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)>_R <a1>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P
                                    <GHC.Base.Maybe GHC.Types.Double>_R
                                    <a1>_P)) of wild {
                       GHC.Base.Nothing -> GHC.Prim.*# ww3 16777619#
                       GHC.Base.Just a2
                       -> case a2 of ww4 { GHC.Types.D# ww5 ->
                          case GHC.Magic.runRW#
                                 @ 'GHC.Types.PtrRepLifted
                                 @ GHC.Word.Word64
                                 (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case GHC.Prim.newAlignedPinnedByteArray#
                                         @ GHC.Prim.RealWorld
                                         8#
                                         8#
                                         eta of ds2 { (#,#) ipv ipv1 ->
                                  case GHC.Prim.unsafeFreezeByteArray#
                                         @ GHC.Prim.RealWorld
                                         ipv1
                                         ipv of ds3 { (#,#) ipv2 ipv3 ->
                                  let {
                                    ptr :: GHC.Prim.Addr# = GHC.Prim.byteArrayContents# ipv3
                                  } in
                                  case GHC.Prim.writeDoubleOffAddr#
                                         @ GHC.Prim.RealWorld
                                         ptr
                                         0#
                                         ww5
                                         ipv2 of s2 { DEFAULT ->
                                  case GHC.Prim.readWord64OffAddr#
                                         @ GHC.Prim.RealWorld
                                         ptr
                                         0#
                                         s2 of ds1 { (#,#) ipv4 ipv5 ->
                                  case GHC.Prim.touch#
                                         @ 'GHC.Types.PtrRepUnlifted
                                         @ GHC.Prim.ByteArray#
                                         ipv3
                                         ipv4 of s4 { DEFAULT ->
                                  (# s4, GHC.Word.W64# ipv5 #) } } } } }) of ds1 { (#,#) ipv ipv1 ->
                          case ipv1 of wild1 { GHC.Word.W64# x# ->
                          GHC.Prim.xorI#
                            (GHC.Prim.*#
                               (GHC.Prim.xorI# (GHC.Prim.*# ww3 16777619#) 6148914691236517205#)
                               16777619#)
                            (GHC.Prim.word2Int# x#) } } } }
                 } in
                 case ww1
                        `cast`
                      (Trans
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.S>_P
                                <'GHC.Generics.MetaSel
                                   ('GHC.Base.Just "unit")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy>_P
                                <GHC.Generics.K1
                                   GHC.Generics.R
                                   (GHC.Base.Maybe Duckling.Weight.Types.Unit)>_R <a1>_N)
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P
                                <GHC.Base.Maybe Duckling.Weight.Types.Unit>_R
                                <a1>_P)) of wild {
                   GHC.Base.Nothing -> $j (GHC.Prim.*# ww 16777619#)
                   GHC.Base.Just a2
                   -> case a2 of wild1 {
                        Duckling.Weight.Types.Milligram
                        -> $j
                             (GHC.Prim.*#
                                (GHC.Prim.*#
                                   (GHC.Prim.xorI# (GHC.Prim.*# ww 16777619#) 6148914691236517205#)
                                   16777619#)
                                16777619#)
                        Duckling.Weight.Types.Liang
                        -> $j
                             (GHC.Prim.*#
                                (GHC.Prim.xorI#
                                   (GHC.Prim.*#
                                      (GHC.Prim.xorI#
                                         (GHC.Prim.*# ww 16777619#)
                                         6148914691236517205#)
                                      16777619#)
                                   1#)
                                16777619#)
                        Duckling.Weight.Types.Gram
                        -> $j
                             (GHC.Prim.*#
                                (GHC.Prim.xorI#
                                   (GHC.Prim.*#
                                      (GHC.Prim.xorI#
                                         (GHC.Prim.*# ww 16777619#)
                                         6148914691236517205#)
                                      16777619#)
                                   2#)
                                16777619#)
                        Duckling.Weight.Types.Jin
                        -> $j
                             (GHC.Prim.*#
                                (GHC.Prim.xorI#
                                   (GHC.Prim.*#
                                      (GHC.Prim.xorI#
                                         (GHC.Prim.*# ww 16777619#)
                                         6148914691236517205#)
                                      16777619#)
                                   3#)
                                16777619#)
                        Duckling.Weight.Types.Kilogram
                        -> $j
                             (GHC.Prim.*#
                                (GHC.Prim.xorI#
                                   (GHC.Prim.*#
                                      (GHC.Prim.xorI#
                                         (GHC.Prim.*# ww 16777619#)
                                         6148914691236517205#)
                                      16777619#)
                                   4#)
                                16777619#)
                        Duckling.Weight.Types.Pound
                        -> $j
                             (GHC.Prim.*#
                                (GHC.Prim.xorI#
                                   (GHC.Prim.*#
                                      (GHC.Prim.xorI#
                                         (GHC.Prim.*# ww 16777619#)
                                         6148914691236517205#)
                                      16777619#)
                                   5#)
                                16777619#)
                        Duckling.Weight.Types.Tonne
                        -> $j
                             (GHC.Prim.*#
                                (GHC.Prim.xorI#
                                   (GHC.Prim.*#
                                      (GHC.Prim.xorI#
                                         (GHC.Prim.*# ww 16777619#)
                                         6148914691236517205#)
                                      16777619#)
                                   6#)
                                16777619#) } }) -}
3aba89d1dcc4979316533d54aad8a82c
  $w$s$wupdateOrSnocWithKey ::
    (Data.Text.Internal.Text -> v -> v -> v)
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> GHC.Prim.Array#
         (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
    -> GHC.Prim.Array#
         (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
  {- Arity: 6, Strictness: <L,C(C1(C1(U)))><L,U><L,U><L,U><L,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ v
                   (w :: Data.Text.Internal.Text -> v -> v -> v)
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (w1 :: v)
                   (w2 :: GHC.Prim.Array#
                            (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)) ->
                 letrec {
                   $wgo1 :: GHC.Prim.ByteArray#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> v
                            -> GHC.Prim.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                     {- Arity: 7, Strictness: <L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
                        Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.ByteArray#)
                       (ww4 :: GHC.Prim.Int#)
                       (ww5 :: GHC.Prim.Int#)
                       (w3 :: v)
                       (ww6 :: GHC.Prim.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v))
                       (ww7 :: GHC.Prim.Int#)
                       (ww8 :: GHC.Prim.Int#) ->
                     let {
                       k2 :: Data.Text.Internal.Text = Data.Text.Internal.Text ww3 ww4 ww5
                     } in
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww7 ww8) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.indexArray#
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 ww6
                                 ww7 of ds { Unit# ipv3 ->
                          case ipv3 of wild1 { Data.HashMap.Base.L kx y ->
                          case kx of wild2 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.==# ww5 dt5) of wild3 {
                            GHC.Types.False
                            -> $wgo1 ww3 ww4 ww5 w3 ww6 (GHC.Prim.+# ww7 1#) ww8
                            GHC.Types.True
                            -> case {__pkg_ccall text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00 _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                                  -> GHC.Prim.Word#
                                                                                                                  -> GHC.Prim.ByteArray#
                                                                                                                  -> GHC.Prim.Word#
                                                                                                                  -> GHC.Prim.Word#
                                                                                                                  -> GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld
                                                                                                                  -> (# GHC.Prim.State#
                                                                                                                          GHC.Prim.RealWorld,
                                                                                                                        GHC.Prim.Int# #)}
                                      ww3
                                      (GHC.Prim.int2Word# ww4)
                                      dt3
                                      (GHC.Prim.int2Word# dt4)
                                      (GHC.Prim.int2Word# ww5)
                                      GHC.Prim.realWorld# of wild4 { (#,#) ds11 ds12 ->
                               case GHC.Prim.narrow32Int# ds12 of wild5 {
                                 DEFAULT -> $wgo1 ww3 ww4 ww5 w3 ww6 (GHC.Prim.+# ww7 1#) ww8
                                 0#
                                 -> case GHC.Prim.thawArray#
                                           @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                           @ GHC.Prim.RealWorld
                                           ww6
                                           0#
                                           (GHC.Prim.sizeofArray#
                                              @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                              ww6)
                                           GHC.Prim.realWorld# of ds1 { (#,#) ipv4 ipv5 ->
                                    case GHC.Prim.writeArray#
                                           @ GHC.Prim.RealWorld
                                           @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                           ipv5
                                           ww7
                                           (Data.HashMap.Base.L
                                              @ Data.Text.Internal.Text
                                              @ v
                                              k2
                                              (w k2 w3 y))
                                           ipv4 of s' { DEFAULT ->
                                    case GHC.Prim.unsafeFreezeArray#
                                           @ GHC.Prim.RealWorld
                                           @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                           ipv5
                                           s' of ds2 { (#,#) ipv6 ipv7 ->
                                    ipv7 } } } } } } } } }
                       GHC.Types.True
                       -> case GHC.Prim.newArray#
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 @ GHC.Prim.RealWorld
                                 (GHC.Prim.+# ww8 1#)
                                 (Data.HashMap.Array.undefinedElem
                                    @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v))
                                 GHC.Prim.realWorld# of ds { (#,#) ipv3 ipv4 ->
                          case GHC.Prim.copyArray#
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 @ GHC.Prim.RealWorld
                                 ww6
                                 0#
                                 ipv4
                                 0#
                                 ww8
                                 ipv3 of s2 { DEFAULT ->
                          case GHC.Prim.writeArray#
                                 @ GHC.Prim.RealWorld
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 ipv4
                                 ww8
                                 (Data.HashMap.Base.L @ Data.Text.Internal.Text @ v k2 w3)
                                 s2 of s' { DEFAULT ->
                          case GHC.Prim.unsafeFreezeArray#
                                 @ GHC.Prim.RealWorld
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 ipv4
                                 s' of ds1 { (#,#) ipv5 ipv6 ->
                          ipv6 } } } } }
                 } in
                 $wgo1
                   ww
                   ww1
                   ww2
                   w1
                   w2
                   0#
                   (GHC.Prim.sizeofArray#
                      @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                      w2)) -}
e6062c5c20449040958bbeac6a0ac3e7
  $w$sinsert ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
  {- Arity: 5, Strictness: <S,U><S,U><S,U><L,U><S,1*U>, Inline: [0],
     Unfolding: (\ @ v
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (w :: v)
                   (w1 :: Data.HashMap.Base.HashMap Data.Text.Internal.Text v) ->
                 case {__pkg_ccall hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol hashable_fnv_hash_offset GHC.Prim.ByteArray#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.State#
                                                                                                                          GHC.Prim.RealWorld
                                                                                                                     -> (# GHC.Prim.State#
                                                                                                                             GHC.Prim.RealWorld,
                                                                                                                           GHC.Prim.Int# #)}
                        ww
                        (GHC.Prim.uncheckedIShiftL# ww1 1#)
                        (GHC.Prim.uncheckedIShiftL# ww2 1#)
                        -2578643520546668380#
                        GHC.Prim.realWorld# of wild1 { (#,#) ds1 ds2 ->
                 Duckling.Weight.Types.$wpoly_go1
                   @ v
                   (GHC.Prim.int2Word# ds2)
                   ww
                   ww1
                   ww2
                   w
                   0#
                   w1 }) -}
19721684ee74949b404baa14d34ecb64
  $wouter ::
    GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> [GHC.Types.Char]
    -> GHC.Prim.Char#
    -> GHC.Prim.Char#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 7, Strictness: <L,U><L,U><S,U><S,U><L,U><L,U><S,U>,
     Inline: [0] -}
912af0fd66b3b49a6d6708ed626f9755
  $wpoly_go1 ::
    GHC.Prim.Word#
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> GHC.Prim.Int#
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
  {- Arity: 7, Strictness: <S,U><L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
41a2e2b28fbb0942759ccfaa26dba44e
  axiom D:R:ResolvedValueWeightData::
      Duckling.Resolve.ResolvedValue Duckling.Weight.Types.WeightData
        = Duckling.Weight.Types.WeightValue
a86baca3d8d7ddb75087ea8e0c4ab363
  data IntervalDirection = Above | Under
a86baca3d8d7ddb75087ea8e0c4ab363
  axiom Rep_IntervalDirection::
      GHC.Generics.Rep Duckling.Weight.Types.IntervalDirection
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "IntervalDirection"
               "Duckling.Weight.Types"
               "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
41a2e2b28fbb0942759ccfaa26dba44e
  axiom Rep_Unit::
      GHC.Generics.Rep Duckling.Weight.Types.Unit
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Unit"
               "Duckling.Weight.Types"
               "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
               'GHC.Types.False)
            ((GHC.Generics.C1
                ('GHC.Generics.MetaCons
                   "Milligram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                GHC.Generics.U1
              GHC.Generics.:+: (GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "Liang" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1))
             GHC.Generics.:+: ((GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "Jin" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "Kilogram"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1)
                               GHC.Generics.:+: (GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "Pound"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.C1
                                                                    ('GHC.Generics.MetaCons
                                                                       "Tonne"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)))
41a2e2b28fbb0942759ccfaa26dba44e
  axiom Rep_WeightData::
      GHC.Generics.Rep Duckling.Weight.Types.WeightData
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "WeightData"
               "Duckling.Weight.Types"
               "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "WeightData" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "unit")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 (GHC.Base.Maybe Duckling.Weight.Types.Unit))
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "value")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double)))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "minValue")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "maxValue")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        (GHC.Base.Maybe GHC.Types.Double)))))
41a2e2b28fbb0942759ccfaa26dba44e
  data SingleValue
    = SingleValue {vUnit :: Duckling.Weight.Types.Unit,
                   vValue :: GHC.Types.Double}
41a2e2b28fbb0942759ccfaa26dba44e
  data Unit
    = Milligram | Liang | Gram | Jin | Kilogram | Pound | Tonne
41a2e2b28fbb0942759ccfaa26dba44e
  data WeightData
    = WeightData {unit :: GHC.Base.Maybe Duckling.Weight.Types.Unit,
                  value :: GHC.Base.Maybe GHC.Types.Double,
                  minValue :: GHC.Base.Maybe GHC.Types.Double,
                  maxValue :: GHC.Base.Maybe GHC.Types.Double}
41a2e2b28fbb0942759ccfaa26dba44e
  data WeightValue
    = SimpleValue Duckling.Weight.Types.SingleValue
    | IntervalValue (Duckling.Weight.Types.SingleValue,
                     Duckling.Weight.Types.SingleValue)
    | OpenIntervalValue (Duckling.Weight.Types.SingleValue,
                         Duckling.Weight.Types.IntervalDirection)
0866ae07b5b1e642ceadb59936cea502
  above ::
    Duckling.Weight.Types.Unit
    -> GHC.Types.Double -> Duckling.Weight.Types.WeightValue
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m3,
     Unfolding: InlineRule (2, True, False)
                (\ (u :: Duckling.Weight.Types.Unit) (v :: GHC.Types.Double) ->
                 Duckling.Weight.Types.OpenIntervalValue
                   (Duckling.Weight.Types.SingleValue u v,
                    Duckling.Weight.Types.Above)) -}
e2d14562e692541d444b68318518b9c5
  between ::
    Duckling.Weight.Types.Unit
    -> (GHC.Types.Double, GHC.Types.Double)
    -> Duckling.Weight.Types.WeightValue
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U(U,U)>m2,
     Unfolding: InlineRule (2, True, False)
                (\ (u :: Duckling.Weight.Types.Unit)
                   (ds :: (GHC.Types.Double, GHC.Types.Double)) ->
                 case ds of wild { (,) from to ->
                 Duckling.Weight.Types.IntervalValue
                   (Duckling.Weight.Types.SingleValue u from,
                    Duckling.Weight.Types.SingleValue u to) }) -}
3ea390c18e3386ef2064b0b1c8492f5f
  maxValue ::
    Duckling.Weight.Types.WeightData -> GHC.Base.Maybe GHC.Types.Double
  RecSel Left Duckling.Weight.Types.WeightData
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Duckling.Weight.Types.WeightData) ->
                 case ds of wild { Duckling.Weight.Types.WeightData ds1 ds2 ds3 ds4 ->
                 ds4 }) -}
63e564d3ddede95e9e7054f479d0a775
  minValue ::
    Duckling.Weight.Types.WeightData -> GHC.Base.Maybe GHC.Types.Double
  RecSel Left Duckling.Weight.Types.WeightData
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Duckling.Weight.Types.WeightData) ->
                 case ds of wild { Duckling.Weight.Types.WeightData ds1 ds2 ds3 ds4 ->
                 ds3 }) -}
0aa90f85caaa0890cbd9c9e1137c3e4e
  openInterval ::
    Duckling.Weight.Types.IntervalDirection
    -> Duckling.Weight.Types.Unit
    -> GHC.Types.Double
    -> Duckling.Weight.Types.WeightValue
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><L,U>m3,
     Unfolding: InlineRule (3, True, False)
                (\ (direction :: Duckling.Weight.Types.IntervalDirection)
                   (u :: Duckling.Weight.Types.Unit)
                   (v :: GHC.Types.Double) ->
                 Duckling.Weight.Types.OpenIntervalValue
                   (Duckling.Weight.Types.SingleValue u v, direction)) -}
bcead02b0118df30ef58f6ea63e06ba2
  simple ::
    Duckling.Weight.Types.Unit
    -> GHC.Types.Double -> Duckling.Weight.Types.WeightValue
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m1,
     Unfolding: InlineRule (2, True, False)
                (\ (u :: Duckling.Weight.Types.Unit) (v :: GHC.Types.Double) ->
                 Duckling.Weight.Types.SimpleValue
                   (Duckling.Weight.Types.SingleValue u v)) -}
67f0d6ad41a250984aa62cdb55099ee2
  single ::
    Duckling.Weight.Types.Unit
    -> GHC.Types.Double -> Duckling.Weight.Types.SingleValue
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m,
     Unfolding: InlineRule (0, True, True)
                Duckling.Weight.Types.SingleValue -}
1ca6397ffb1106adc12ded5fa7ed5952
  under ::
    Duckling.Weight.Types.Unit
    -> GHC.Types.Double -> Duckling.Weight.Types.WeightValue
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m3,
     Unfolding: InlineRule (2, True, False)
                (\ (u :: Duckling.Weight.Types.Unit) (v :: GHC.Types.Double) ->
                 Duckling.Weight.Types.OpenIntervalValue
                   (Duckling.Weight.Types.SingleValue u v,
                    Duckling.Weight.Types.Under)) -}
10f8f96b5bc26692659e941d4b70b65e
  unit ::
    Duckling.Weight.Types.WeightData
    -> GHC.Base.Maybe Duckling.Weight.Types.Unit
  RecSel Left Duckling.Weight.Types.WeightData
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Duckling.Weight.Types.WeightData) ->
                 case ds of wild { Duckling.Weight.Types.WeightData ds1 ds2 ds3 ds4 ->
                 ds1 }) -}
dc1eee1633e8479df4b4ad6462f80399
  vUnit ::
    Duckling.Weight.Types.SingleValue -> Duckling.Weight.Types.Unit
  RecSel Left Duckling.Weight.Types.SingleValue
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Duckling.Weight.Types.SingleValue) ->
                 case ds of wild { Duckling.Weight.Types.SingleValue ds1 ds2 ->
                 ds1 }) -}
34f8b4acfb7548d10fc000734700d084
  vValue :: Duckling.Weight.Types.SingleValue -> GHC.Types.Double
  RecSel Left Duckling.Weight.Types.SingleValue
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Duckling.Weight.Types.SingleValue) ->
                 case ds of wild { Duckling.Weight.Types.SingleValue ds1 ds2 ->
                 ds2 }) -}
a57aac85ab491b87f1ee2e5954fa4789
  value ::
    Duckling.Weight.Types.WeightData -> GHC.Base.Maybe GHC.Types.Double
  RecSel Left Duckling.Weight.Types.WeightData
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Duckling.Weight.Types.WeightData) ->
                 case ds of wild { Duckling.Weight.Types.WeightData ds1 ds2 ds3 ds4 ->
                 ds2 }) -}
instance GHC.Classes.Eq [Duckling.Weight.Types.IntervalDirection]
  = Duckling.Weight.Types.$fEqIntervalDirection
instance GHC.Classes.Eq [Duckling.Weight.Types.SingleValue]
  = Duckling.Weight.Types.$fEqSingleValue
instance GHC.Classes.Eq [Duckling.Weight.Types.Unit]
  = Duckling.Weight.Types.$fEqUnit
instance GHC.Classes.Eq [Duckling.Weight.Types.WeightData]
  = Duckling.Weight.Types.$fEqWeightData
instance GHC.Classes.Eq [Duckling.Weight.Types.WeightValue]
  = Duckling.Weight.Types.$fEqWeightValue
instance GHC.Generics.Generic [Duckling.Weight.Types.IntervalDirection]
  = Duckling.Weight.Types.$fGenericIntervalDirection
instance GHC.Generics.Generic [Duckling.Weight.Types.Unit]
  = Duckling.Weight.Types.$fGenericUnit
instance GHC.Generics.Generic [Duckling.Weight.Types.WeightData]
  = Duckling.Weight.Types.$fGenericWeightData
instance Data.Hashable.Class.Hashable [Duckling.Weight.Types.IntervalDirection]
  = Duckling.Weight.Types.$fHashableIntervalDirection
instance Data.Hashable.Class.Hashable [Duckling.Weight.Types.Unit]
  = Duckling.Weight.Types.$fHashableUnit
instance Data.Hashable.Class.Hashable [Duckling.Weight.Types.WeightData]
  = Duckling.Weight.Types.$fHashableWeightData
instance Control.DeepSeq.NFData [Duckling.Weight.Types.IntervalDirection]
  = Duckling.Weight.Types.$fNFDataIntervalDirection
instance Control.DeepSeq.NFData [Duckling.Weight.Types.Unit]
  = Duckling.Weight.Types.$fNFDataUnit
instance Control.DeepSeq.NFData [Duckling.Weight.Types.WeightData]
  = Duckling.Weight.Types.$fNFDataWeightData
instance GHC.Classes.Ord [Duckling.Weight.Types.IntervalDirection]
  = Duckling.Weight.Types.$fOrdIntervalDirection
instance GHC.Classes.Ord [Duckling.Weight.Types.SingleValue]
  = Duckling.Weight.Types.$fOrdSingleValue
instance GHC.Classes.Ord [Duckling.Weight.Types.Unit]
  = Duckling.Weight.Types.$fOrdUnit
instance GHC.Classes.Ord [Duckling.Weight.Types.WeightData]
  = Duckling.Weight.Types.$fOrdWeightData
instance GHC.Classes.Ord [Duckling.Weight.Types.WeightValue]
  = Duckling.Weight.Types.$fOrdWeightValue
instance Duckling.Resolve.Resolve [Duckling.Weight.Types.WeightData]
  = Duckling.Weight.Types.$fResolveWeightData
instance GHC.Show.Show [Duckling.Weight.Types.IntervalDirection]
  = Duckling.Weight.Types.$fShowIntervalDirection
instance GHC.Show.Show [Duckling.Weight.Types.SingleValue]
  = Duckling.Weight.Types.$fShowSingleValue
instance GHC.Show.Show [Duckling.Weight.Types.Unit]
  = Duckling.Weight.Types.$fShowUnit
instance GHC.Show.Show [Duckling.Weight.Types.WeightData]
  = Duckling.Weight.Types.$fShowWeightData
instance GHC.Show.Show [Duckling.Weight.Types.WeightValue]
  = Duckling.Weight.Types.$fShowWeightValue
instance Data.Aeson.Types.ToJSON.ToJSON [Duckling.Weight.Types.SingleValue]
  = Duckling.Weight.Types.$fToJSONSingleValue
instance Data.Aeson.Types.ToJSON.ToJSON [Duckling.Weight.Types.Unit]
  = Duckling.Weight.Types.$fToJSONUnit
instance Data.Aeson.Types.ToJSON.ToJSON [Duckling.Weight.Types.WeightValue]
  = Duckling.Weight.Types.$fToJSONWeightValue
family instance GHC.Generics.Rep [Duckling.Weight.Types.IntervalDirection]
  = Duckling.Weight.Types.Rep_IntervalDirection
family instance GHC.Generics.Rep [Duckling.Weight.Types.WeightData]
  = Duckling.Weight.Types.Rep_WeightData
family instance GHC.Generics.Rep [Duckling.Weight.Types.Unit]
  = Duckling.Weight.Types.Rep_Unit
family instance Duckling.Resolve.ResolvedValue [Duckling.Weight.Types.WeightData]
  = Duckling.Weight.Types.D:R:ResolvedValueWeightData
"SPEC/Duckling.Weight.Types $dmhashWithSalt @ IntervalDirection" [ALWAYS] forall ($dGHashable :: Data.Hashable.Class.GHashable
                                                                                                   Data.Hashable.Class.Zero
                                                                                                   (GHC.Generics.Rep
                                                                                                      Duckling.Weight.Types.IntervalDirection))
                                                                                 ($dGeneric :: GHC.Generics.Generic
                                                                                                 Duckling.Weight.Types.IntervalDirection)
                                                                                 ($dHashable :: Data.Hashable.Class.Hashable
                                                                                                  Duckling.Weight.Types.IntervalDirection)
  Data.Hashable.Class.$dmhashWithSalt @ Duckling.Weight.Types.IntervalDirection
                                      $dHashable
                                      $dGeneric
                                      $dGHashable
  = Duckling.Weight.Types.$fHashableIntervalDirection_$s$dmhashWithSalt
"SPEC/Duckling.Weight.Types $dmrnf @ IntervalDirection" [ALWAYS] forall ($dGNFData :: Control.DeepSeq.GNFData
                                                                                        (GHC.Generics.Rep
                                                                                           Duckling.Weight.Types.IntervalDirection))
                                                                        ($dGeneric :: GHC.Generics.Generic
                                                                                        Duckling.Weight.Types.IntervalDirection)
                                                                        ($dNFData :: Control.DeepSeq.NFData
                                                                                       Duckling.Weight.Types.IntervalDirection)
  Control.DeepSeq.$dmrnf @ Duckling.Weight.Types.IntervalDirection
                         $dNFData
                         $dGeneric
                         $dGNFData
  = Duckling.Weight.Types.$fNFDataIntervalDirection_$s$dmrnf
"SPEC/Duckling.Weight.Types $dmrnf @ Unit" [ALWAYS] forall ($dGNFData :: Control.DeepSeq.GNFData
                                                                           (GHC.Generics.Rep
                                                                              Duckling.Weight.Types.Unit))
                                                           ($dGeneric :: GHC.Generics.Generic
                                                                           Duckling.Weight.Types.Unit)
                                                           ($dNFData :: Control.DeepSeq.NFData
                                                                          Duckling.Weight.Types.Unit)
  Control.DeepSeq.$dmrnf @ Duckling.Weight.Types.Unit
                         $dNFData
                         $dGeneric
                         $dGNFData
  = Duckling.Weight.Types.$fNFDataUnit_$s$dmrnf
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

