
==================== FINAL INTERFACE ====================
2019-03-14 03:00:38.728213 UTC

interface duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.CreditCardNumber.Types [family instance module] 8002
  interface hash: 8d8d920714246fb27a180ca05a648206
  ABI hash: 81fe06b4314b4604371cc015e9908e21
  export-list hash: 8db62903b79d3bc1584e480b56e21fcc
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 4ae87d550706f16feac139f337004fb0
  sig of: Nothing
  used TH splices: False
  where
exports:
  Duckling.CreditCardNumber.Types.CreditCardNumberData{Duckling.CreditCardNumber.Types.CreditCardNumberData issuer number}
  Duckling.CreditCardNumber.Types.CreditCardNumberValue{Duckling.CreditCardNumber.Types.CreditCardNumberValue vIssuer vNumber}
  Duckling.CreditCardNumber.Types.Issuer{Duckling.CreditCardNumber.Types.Amex Duckling.CreditCardNumber.Types.DinerClub Duckling.CreditCardNumber.Types.Discover Duckling.CreditCardNumber.Types.Mastercard Duckling.CreditCardNumber.Types.Other Duckling.CreditCardNumber.Types.Visa}
module dependencies: Duckling.Locale Duckling.Region
                     Duckling.Resolve
package dependencies: aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      generic-deriving-1.11.2@generic-deriving-1.11.2-FTRmVS5RM6G7R2MgyiZHgW
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI
                      th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      timezone-series-0.1.8@timezone-series-0.1.8-4K4l0A0wjZPUt7r2oV8PT
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Applicative
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Concurrent
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Exception
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Monad.ST
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Array
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Bool
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.ByteString
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Char
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Complex
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Data
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Dynamic
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Either
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Fixed
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Floating
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Compose
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Identity
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Product
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Sum
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Integral
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.List
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.List.NonEmpty
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Maybe
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Monoid
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Ord
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Proxy
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Ratio
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Semigroup
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Text
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Tuple
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Type.Coercion
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Type.Equality
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Typeable
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Version
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Void
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Foreign.C.Types
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Foreign.Ptr
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Event
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Fingerprint
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Generics
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.RTS.Flags
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Stack
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.StaticPtr
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Stats
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.TypeLits
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Numeric.Natural
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.System.Exit
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.System.IO
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.System.Posix.Types
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Text.Read
         th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI:Language.Haskell.TH.Lift
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Locale
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Region
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.FromStringTextShow
                         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Options
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k:Data.Aeson 1af00541e969ad203c27ee12864de00d
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k:Data.Aeson.Types.Internal 4c7adfaf9946e7eb59b1a47b47e68246
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k:Data.Aeson.Types.ToJSON d6ae344f2a743c9940980d0869569ad4
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Generics 1dbec2bc7dd1c5bd8c89ed857eaed19b
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  deepseq-1.4.2.0@deepseq-1.4.2.0:Control.DeepSeq 0a99763cf6016b16bbf55422778a79b2
import  -/  Duckling.Resolve 15ce2eadafd5cc42f057e1d0f9191938
  exports: 6e20ad884e276a7b8b73219b25eea656
  Resolve 857149e63f1fbb61ae9c206e0802b0fa
  ResolvedValue d3c9ab28ab95ed33280b467fbe72cd58
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable 0e86f32bd46d4c618b1e312455011c77
import  -/  hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Class bc4f00f60e55accb5753c8e0ce3cde5f
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text f7d3d648ffeef1043fe2e522e7e66c1b
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Internal 9bfcbbbe07ecef48f631025a838df7da
eb0ba1e8838524b66ff805106380d8cb
  $fEqCreditCardNumberData ::
    GHC.Classes.Eq Duckling.CreditCardNumber.Types.CreditCardNumberData
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.CreditCardNumber.Types.CreditCardNumberData
                  Duckling.CreditCardNumber.Types.$fEqCreditCardNumberData_$c==
                  Duckling.CreditCardNumber.Types.$fEqCreditCardNumberData_$c/= -}
eb0ba1e8838524b66ff805106380d8cb
  $fEqCreditCardNumberData_$c/= ::
    Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)L),1*U(1*U(U,U,U),1*U)><S(S(LLS)L),1*U(1*U(U,U,U),1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.CreditCardNumber.Types.CreditCardNumberData)
                   (b :: Duckling.CreditCardNumber.Types.CreditCardNumberData) ->
                 case Duckling.CreditCardNumber.Types.$fEqCreditCardNumberData_$c==
                        a
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
eb0ba1e8838524b66ff805106380d8cb
  $fEqCreditCardNumberData_$c== ::
    Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)L),1*U(1*U(U,U,U),1*U)><S(S(LLS)L),1*U(1*U(U,U,U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.CreditCardNumber.Types.CreditCardNumberData)
                   (w1 :: Duckling.CreditCardNumber.Types.CreditCardNumberData) ->
                 case w of ww { Duckling.CreditCardNumber.Types.CreditCardNumberData ww1 ww2 ->
                 case ww1 of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 case w1 of ww7 { Duckling.CreditCardNumber.Types.CreditCardNumberData ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Duckling.CreditCardNumber.Types.$w$c==
                   ww4
                   ww5
                   ww6
                   ww2
                   ww11
                   ww12
                   ww13
                   ww9 } } } }) -}
7242b555aa3d28322fe91967ef549c66
  $fEqCreditCardNumberData_$c==1 ::
    Duckling.CreditCardNumber.Types.Issuer
    -> Duckling.CreditCardNumber.Types.Issuer -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Duckling.CreditCardNumber.Types.Issuer)
                   (ds1 :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case ds of wild {
                   Duckling.CreditCardNumber.Types.Visa
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Visa -> GHC.Types.True }
                   Duckling.CreditCardNumber.Types.Amex
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Amex -> GHC.Types.True }
                   Duckling.CreditCardNumber.Types.Discover
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Discover -> GHC.Types.True }
                   Duckling.CreditCardNumber.Types.Mastercard
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Mastercard -> GHC.Types.True }
                   Duckling.CreditCardNumber.Types.DinerClub
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.True }
                   Duckling.CreditCardNumber.Types.Other
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.True } }) -}
4b7c9f4dbd0474c7cfe36565839736af
  $fEqCreditCardNumberValue ::
    GHC.Classes.Eq
      Duckling.CreditCardNumber.Types.CreditCardNumberValue
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.CreditCardNumber.Types.CreditCardNumberValue
                  Duckling.CreditCardNumber.Types.$fEqCreditCardNumberValue_$c==
                  Duckling.CreditCardNumber.Types.$fEqCreditCardNumberValue_$c/= -}
4b7c9f4dbd0474c7cfe36565839736af
  $fEqCreditCardNumberValue_$c/= ::
    Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)L),1*U(1*U(U,U,U),1*U)><S(S(LLS)L),1*U(1*U(U,U,U),1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.CreditCardNumber.Types.CreditCardNumberValue)
                   (b :: Duckling.CreditCardNumber.Types.CreditCardNumberValue) ->
                 case Duckling.CreditCardNumber.Types.$fEqCreditCardNumberValue_$c==
                        a
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
4b7c9f4dbd0474c7cfe36565839736af
  $fEqCreditCardNumberValue_$c== ::
    Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)L),1*U(1*U(U,U,U),1*U)><S(S(LLS)L),1*U(1*U(U,U,U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.CreditCardNumber.Types.CreditCardNumberValue)
                   (w1 :: Duckling.CreditCardNumber.Types.CreditCardNumberValue) ->
                 case w of ww { Duckling.CreditCardNumber.Types.CreditCardNumberValue ww1 ww2 ->
                 case ww1 of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 case w1 of ww7 { Duckling.CreditCardNumber.Types.CreditCardNumberValue ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Duckling.CreditCardNumber.Types.$w$c==1
                   ww4
                   ww5
                   ww6
                   ww2
                   ww11
                   ww12
                   ww13
                   ww9 } } } }) -}
7242b555aa3d28322fe91967ef549c66
  $fEqIssuer :: GHC.Classes.Eq Duckling.CreditCardNumber.Types.Issuer
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.CreditCardNumber.Types.Issuer
                  Duckling.CreditCardNumber.Types.$fEqCreditCardNumberData_$c==1
                  Duckling.CreditCardNumber.Types.$fEqIssuer_$c/= -}
7242b555aa3d28322fe91967ef549c66
  $fEqIssuer_$c/= ::
    Duckling.CreditCardNumber.Types.Issuer
    -> Duckling.CreditCardNumber.Types.Issuer -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.CreditCardNumber.Types.Issuer)
                   (b :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case a of wild {
                   Duckling.CreditCardNumber.Types.Visa
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Visa -> GHC.Types.False }
                   Duckling.CreditCardNumber.Types.Amex
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Amex -> GHC.Types.False }
                   Duckling.CreditCardNumber.Types.Discover
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Discover -> GHC.Types.False }
                   Duckling.CreditCardNumber.Types.Mastercard
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Mastercard -> GHC.Types.False }
                   Duckling.CreditCardNumber.Types.DinerClub
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.False }
                   Duckling.CreditCardNumber.Types.Other
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.False } }) -}
eb0ba1e8838524b66ff805106380d8cb
  $fGenericCreditCardNumberData ::
    GHC.Generics.Generic
      Duckling.CreditCardNumber.Types.CreditCardNumberData
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.CreditCardNumber.Types.CreditCardNumberData
                  Duckling.CreditCardNumber.Types.$fGenericCreditCardNumberData_$cfrom
                  Duckling.CreditCardNumber.Types.$fGenericCreditCardNumberData_$cto -}
eb0ba1e8838524b66ff805106380d8cb
  $fGenericCreditCardNumberData1 ::
    Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "CreditCardNumberData" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "number")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "issuer")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1
                                GHC.Generics.R Duckling.CreditCardNumber.Types.Issuer))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x
                   (x1 :: Duckling.CreditCardNumber.Types.CreditCardNumberData) ->
                 case x1 of wild { Duckling.CreditCardNumber.Types.CreditCardNumberData g1 g2 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "number")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "issuer")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1
                            GHC.Generics.R Duckling.CreditCardNumber.Types.Issuer))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <Data.Text.Internal.Text>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "number")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1
                                      GHC.Generics.R Data.Text.Internal.Text>_R) <x>_N))
                    g2
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P
                                   <Duckling.CreditCardNumber.Types.Issuer>_R
                                   <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "issuer")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1
                                      GHC.Generics.R
                                      Duckling.CreditCardNumber.Types.Issuer>_R) <x>_N)))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "CreditCardNumberData" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "number")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "issuer")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Duckling.CreditCardNumber.Types.Issuer)>_R) <x>_N) }) -}
eb0ba1e8838524b66ff805106380d8cb
  $fGenericCreditCardNumberData_$cfrom ::
    Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> GHC.Generics.Rep
         Duckling.CreditCardNumber.Types.CreditCardNumberData x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Duckling.CreditCardNumber.Types.$fGenericCreditCardNumberData1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Duckling.CreditCardNumber.Types.CreditCardNumberData>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "CreditCardNumberData"
                                       "Duckling.CreditCardNumber.Types"
                                       "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "CreditCardNumberData"
                                          'GHC.Generics.PrefixI
                                          'GHC.Types.True)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "number")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                                        GHC.Generics.:*: GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "issuer")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R
                                                              Duckling.CreditCardNumber.Types.Issuer))>_R))
                          (Sub (Sym (Duckling.CreditCardNumber.Types.Rep_CreditCardNumberData[0]))) <x>_N) -}
eb0ba1e8838524b66ff805106380d8cb
  $fGenericCreditCardNumberData_$cto ::
    GHC.Generics.Rep
      Duckling.CreditCardNumber.Types.CreditCardNumberData x
    -> Duckling.CreditCardNumber.Types.CreditCardNumberData
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x
                   (ds :: GHC.Generics.Rep
                            Duckling.CreditCardNumber.Types.CreditCardNumberData x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Duckling.CreditCardNumber.Types.Rep_CreditCardNumberData[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "CreditCardNumberData"
                                        "Duckling.CreditCardNumber.Types"
                                        "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "CreditCardNumberData"
                                           'GHC.Generics.PrefixI
                                           'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "number")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "issuer")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               Duckling.CreditCardNumber.Types.Issuer))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "CreditCardNumberData"
                                        'GHC.Generics.PrefixI
                                        'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "number")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "issuer")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            Duckling.CreditCardNumber.Types.Issuer)>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 Duckling.CreditCardNumber.Types.CreditCardNumberData
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "number")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <Data.Text.Internal.Text>_R <x>_P))
                   ds2
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "issuer")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Duckling.CreditCardNumber.Types.Issuer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P
                             <Duckling.CreditCardNumber.Types.Issuer>_R
                             <x>_P)) }) -}
7242b555aa3d28322fe91967ef549c66
  $fGenericIssuer ::
    GHC.Generics.Generic Duckling.CreditCardNumber.Types.Issuer
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.CreditCardNumber.Types.Issuer
                  Duckling.CreditCardNumber.Types.$fGenericIssuer_$cfrom
                  Duckling.CreditCardNumber.Types.$fGenericIssuer_$cto -}
7242b555aa3d28322fe91967ef549c66
  $fGenericIssuer1 ::
    Duckling.CreditCardNumber.Types.Issuer
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "Discover" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1))
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "Other" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case x1 of wild {
                   Duckling.CreditCardNumber.Types.Visa
                   -> Duckling.CreditCardNumber.Types.$fGenericIssuer16 @ x
                   Duckling.CreditCardNumber.Types.Amex
                   -> Duckling.CreditCardNumber.Types.$fGenericIssuer13 @ x
                   Duckling.CreditCardNumber.Types.Discover
                   -> Duckling.CreditCardNumber.Types.$fGenericIssuer10 @ x
                   Duckling.CreditCardNumber.Types.Mastercard
                   -> Duckling.CreditCardNumber.Types.$fGenericIssuer8 @ x
                   Duckling.CreditCardNumber.Types.DinerClub
                   -> Duckling.CreditCardNumber.Types.$fGenericIssuer5 @ x
                   Duckling.CreditCardNumber.Types.Other
                   -> Duckling.CreditCardNumber.Types.$fGenericIssuer2 @ x }) -}
80882bb8b9e7e437b5ba759ec465c7f5
  $fGenericIssuer10 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Discover" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Other" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Discover"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Other"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.CreditCardNumber.Types.$fGenericIssuer11 @ x)) -}
67a966db217a7f51d0f18019a0586813
  $fGenericIssuer11 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Discover" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Discover" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Duckling.CreditCardNumber.Types.$fGenericIssuer12 @ x)) -}
dc186ebdbc4b261245bb92b6adae8bda
  $fGenericIssuer12 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Discover" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Discover" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Discover" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
be3718edacc3c53c9a8cf1a00470eb4a
  $fGenericIssuer13 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Discover" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Other" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Discover"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Other"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.CreditCardNumber.Types.$fGenericIssuer14 @ x)) -}
4787302521aa8e8300bf2b88603ff344
  $fGenericIssuer14 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Discover" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Discover" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Duckling.CreditCardNumber.Types.$fGenericIssuer15 @ x)) -}
4fe9da37ac7fca2c9b64a8c02a2dd911
  $fGenericIssuer15 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Discover" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Discover" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
b58505112df860bf8a81aa0622832e17
  $fGenericIssuer16 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Discover" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Other" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Discover"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Other"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.CreditCardNumber.Types.$fGenericIssuer17 @ x)) -}
eb1ac8d1e241e46cd7b260bcfe2c3ad2
  $fGenericIssuer17 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Discover" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Discover" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
e57723bbc9ed94cf59bb339c2bbe0a50
  $fGenericIssuer2 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Discover" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Other" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Discover"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Other"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.CreditCardNumber.Types.$fGenericIssuer3 @ x)) -}
223caf44b6a60d19f3afe4674a70bee3
  $fGenericIssuer3 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Other" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Other" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Duckling.CreditCardNumber.Types.$fGenericIssuer4 @ x)) -}
0e00be7126eadd491dc2de1f3388ca74
  $fGenericIssuer4 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Other" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Other" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Other" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
5e15d0c2265d146dc870512564fd71d0
  $fGenericIssuer5 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Discover" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Other" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Discover"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Other"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.CreditCardNumber.Types.$fGenericIssuer6 @ x)) -}
c94034b23ef341cb2cb2f64c2ead69d8
  $fGenericIssuer6 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Other" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Other" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Duckling.CreditCardNumber.Types.$fGenericIssuer7 @ x)) -}
f9c54e97eefa6b66161335dae4bf558c
  $fGenericIssuer7 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Other" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Other" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
09879f2dba3a98ebd232dae42b995ada
  $fGenericIssuer8 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Discover" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Other" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Discover"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Other"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.CreditCardNumber.Types.$fGenericIssuer9 @ x)) -}
3aa12f95672026d170644cc6533bb722
  $fGenericIssuer9 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Other" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Other" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
7242b555aa3d28322fe91967ef549c66
  $fGenericIssuer_$cfrom ::
    Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Generics.Rep Duckling.CreditCardNumber.Types.Issuer x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Duckling.CreditCardNumber.Types.$fGenericIssuer1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Duckling.CreditCardNumber.Types.Issuer>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "Issuer"
                                       "Duckling.CreditCardNumber.Types"
                                       "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                       'GHC.Types.False>_P
                                    <(GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1
                                      GHC.Generics.:+: (GHC.Generics.M1
                                                          GHC.Generics.C
                                                          ('GHC.Generics.MetaCons
                                                             "Amex"
                                                             'GHC.Generics.PrefixI
                                                             'GHC.Types.False)
                                                          GHC.Generics.U1
                                                        GHC.Generics.:+: GHC.Generics.M1
                                                                           GHC.Generics.C
                                                                           ('GHC.Generics.MetaCons
                                                                              "Discover"
                                                                              'GHC.Generics.PrefixI
                                                                              'GHC.Types.False)
                                                                           GHC.Generics.U1))
                                     GHC.Generics.:+: (GHC.Generics.M1
                                                         GHC.Generics.C
                                                         ('GHC.Generics.MetaCons
                                                            "Mastercard"
                                                            'GHC.Generics.PrefixI
                                                            'GHC.Types.False)
                                                         GHC.Generics.U1
                                                       GHC.Generics.:+: (GHC.Generics.M1
                                                                           GHC.Generics.C
                                                                           ('GHC.Generics.MetaCons
                                                                              "DinerClub"
                                                                              'GHC.Generics.PrefixI
                                                                              'GHC.Types.False)
                                                                           GHC.Generics.U1
                                                                         GHC.Generics.:+: GHC.Generics.M1
                                                                                            GHC.Generics.C
                                                                                            ('GHC.Generics.MetaCons
                                                                                               "Other"
                                                                                               'GHC.Generics.PrefixI
                                                                                               'GHC.Types.False)
                                                                                            GHC.Generics.U1))>_R))
                          (Sub (Sym (Duckling.CreditCardNumber.Types.Rep_Issuer[0]))) <x>_N) -}
7242b555aa3d28322fe91967ef549c66
  $fGenericIssuer_$cto ::
    GHC.Generics.Rep Duckling.CreditCardNumber.Types.Issuer x
    -> Duckling.CreditCardNumber.Types.Issuer
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ x
                   (ds :: GHC.Generics.Rep
                            Duckling.CreditCardNumber.Types.Issuer x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Duckling.CreditCardNumber.Types.Rep_Issuer[0]))
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.D>_P
                                <'GHC.Generics.MetaData
                                   "Issuer"
                                   "Duckling.CreditCardNumber.Types"
                                   "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                   'GHC.Types.False>_P
                                <(GHC.Generics.M1
                                    GHC.Generics.C
                                    ('GHC.Generics.MetaCons
                                       "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                  GHC.Generics.:+: (GHC.Generics.M1
                                                      GHC.Generics.C
                                                      ('GHC.Generics.MetaCons
                                                         "Amex"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: GHC.Generics.M1
                                                                       GHC.Generics.C
                                                                       ('GHC.Generics.MetaCons
                                                                          "Discover"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1))
                                 GHC.Generics.:+: (GHC.Generics.M1
                                                     GHC.Generics.C
                                                     ('GHC.Generics.MetaCons
                                                        "Mastercard"
                                                        'GHC.Generics.PrefixI
                                                        'GHC.Types.False)
                                                     GHC.Generics.U1
                                                   GHC.Generics.:+: (GHC.Generics.M1
                                                                       GHC.Generics.C
                                                                       ('GHC.Generics.MetaCons
                                                                          "DinerClub"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: GHC.Generics.M1
                                                                                        GHC.Generics.C
                                                                                        ('GHC.Generics.MetaCons
                                                                                           "Other"
                                                                                           'GHC.Generics.PrefixI
                                                                                           'GHC.Types.False)
                                                                                        GHC.Generics.U1))>_R) <x>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2 of tpl { DEFAULT ->
                           Duckling.CreditCardNumber.Types.Visa }
                        GHC.Generics.R1 ds2
                        -> case ds2 of wild2 {
                             GHC.Generics.L1 ds3
                             -> case ds3 of tpl { DEFAULT ->
                                Duckling.CreditCardNumber.Types.Amex }
                             GHC.Generics.R1 ds3
                             -> case ds3 of tpl { DEFAULT ->
                                Duckling.CreditCardNumber.Types.Discover } } }
                   GHC.Generics.R1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2 of tpl { DEFAULT ->
                           Duckling.CreditCardNumber.Types.Mastercard }
                        GHC.Generics.R1 ds2
                        -> case ds2 of wild2 {
                             GHC.Generics.L1 ds3
                             -> case ds3 of tpl { DEFAULT ->
                                Duckling.CreditCardNumber.Types.DinerClub }
                             GHC.Generics.R1 ds3
                             -> case ds3 of tpl { DEFAULT ->
                                Duckling.CreditCardNumber.Types.Other } } } }) -}
eb0ba1e8838524b66ff805106380d8cb
  $fHashableCreditCardNumberData ::
    Data.Hashable.Class.Hashable
      Duckling.CreditCardNumber.Types.CreditCardNumberData
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.CreditCardNumber.Types.CreditCardNumberData
                  Duckling.CreditCardNumber.Types.$fHashableCreditCardNumberData_$chashWithSalt
                  Duckling.CreditCardNumber.Types.$fHashableCreditCardNumberData_$chash -}
eb0ba1e8838524b66ff805106380d8cb
  $fHashableCreditCardNumberData_$chash ::
    Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (Duckling.CreditCardNumber.Types.$fHashableCreditCardNumberData_$chashWithSalt
                   Data.Hashable.Class.defaultSalt) -}
eb0ba1e8838524b66ff805106380d8cb
  $fHashableCreditCardNumberData_$chashWithSalt ::
    GHC.Types.Int
    -> Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S(SSS)L),1*U(1*U(U,U,U),1*U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Duckling.CreditCardNumber.Types.CreditCardNumberData) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Duckling.CreditCardNumber.Types.CreditCardNumberData ww3 ww4 ->
                 case ww3 of ww5 { Data.Text.Internal.Text ww6 ww7 ww8 ->
                 case Duckling.CreditCardNumber.Types.$w$chashWithSalt
                        ww1
                        ww6
                        ww7
                        ww8
                        ww4 of ww9 { DEFAULT ->
                 GHC.Types.I# ww9 } } } }) -}
7242b555aa3d28322fe91967ef549c66
  $fHashableIssuer ::
    Data.Hashable.Class.Hashable Duckling.CreditCardNumber.Types.Issuer
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.CreditCardNumber.Types.Issuer
                  Duckling.CreditCardNumber.Types.$fHashableIssuer_$chashWithSalt
                  Duckling.CreditCardNumber.Types.$fHashableIssuer_$chash -}
7242b555aa3d28322fe91967ef549c66
  $fHashableIssuer_$chash ::
    Duckling.CreditCardNumber.Types.Issuer -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (Duckling.CreditCardNumber.Types.$fHashableIssuer_$chashWithSalt
                   Data.Hashable.Class.defaultSalt) -}
7242b555aa3d28322fe91967ef549c66
  $fHashableIssuer_$chashWithSalt ::
    GHC.Types.Int
    -> Duckling.CreditCardNumber.Types.Issuer -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,1*U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of wild {
                   Duckling.CreditCardNumber.Types.Visa
                   -> GHC.Types.I# (GHC.Prim.*# (GHC.Prim.*# ww1 16777619#) 16777619#)
                   Duckling.CreditCardNumber.Types.Amex
                   -> GHC.Types.I#
                        (GHC.Prim.*#
                           (GHC.Prim.xorI# (GHC.Prim.*# ww1 16777619#) 1#)
                           16777619#)
                   Duckling.CreditCardNumber.Types.Discover
                   -> GHC.Types.I#
                        (GHC.Prim.*#
                           (GHC.Prim.xorI# (GHC.Prim.*# ww1 16777619#) 2#)
                           16777619#)
                   Duckling.CreditCardNumber.Types.Mastercard
                   -> GHC.Types.I#
                        (GHC.Prim.*#
                           (GHC.Prim.xorI# (GHC.Prim.*# ww1 16777619#) 3#)
                           16777619#)
                   Duckling.CreditCardNumber.Types.DinerClub
                   -> GHC.Types.I#
                        (GHC.Prim.*#
                           (GHC.Prim.xorI# (GHC.Prim.*# ww1 16777619#) 4#)
                           16777619#)
                   Duckling.CreditCardNumber.Types.Other
                   -> GHC.Types.I#
                        (GHC.Prim.*#
                           (GHC.Prim.xorI# (GHC.Prim.*# ww1 16777619#) 5#)
                           16777619#) } }) -}
eb0ba1e8838524b66ff805106380d8cb
  $fNFDataCreditCardNumberData ::
    Control.DeepSeq.NFData
      Duckling.CreditCardNumber.Types.CreditCardNumberData
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*H,1*U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Duckling.CreditCardNumber.Types.$fNFDataCreditCardNumberData_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Duckling.CreditCardNumber.Types.CreditCardNumberData>_N)) -}
84a23ce4ce2cc05ee941167246aceae7
  $fNFDataCreditCardNumberData1 ::
    Control.DeepSeq.GNFData
      (GHC.Generics.D1
         ('GHC.Generics.MetaData
            "Issuer"
            "Duckling.CreditCardNumber.Types"
            "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
            'GHC.Types.False)
         ((GHC.Generics.C1
             ('GHC.Generics.MetaCons
                "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
             GHC.Generics.U1
           GHC.Generics.:+: (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Discover"
                                                   'GHC.Generics.PrefixI
                                                   'GHC.Types.False)
                                                GHC.Generics.U1))
          GHC.Generics.:+: (GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: (GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "DinerClub"
                                                   'GHC.Generics.PrefixI
                                                   'GHC.Types.False)
                                                GHC.Generics.U1
                                              GHC.Generics.:+: GHC.Generics.C1
                                                                 ('GHC.Generics.MetaCons
                                                                    "Other"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.False)
                                                                 GHC.Generics.U1))))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Duckling.CreditCardNumber.Types.$fNFDataCreditCardNumberData2
                  `cast`
                (Trans
                     (forall (a1 :: <GHC.Types.*>_N).
                      Sym (GHC.Generics.N:M1[0]
                               <GHC.Generics.D>_P
                               <'GHC.Generics.MetaData
                                  "Issuer"
                                  "Duckling.CreditCardNumber.Types"
                                  "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                  'GHC.Types.False>_P
                               <(GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: (GHC.Generics.C1
                                                     ('GHC.Generics.MetaCons
                                                        "Amex"
                                                        'GHC.Generics.PrefixI
                                                        'GHC.Types.False)
                                                     GHC.Generics.U1
                                                   GHC.Generics.:+: GHC.Generics.C1
                                                                      ('GHC.Generics.MetaCons
                                                                         "Discover"
                                                                         'GHC.Generics.PrefixI
                                                                         'GHC.Types.False)
                                                                      GHC.Generics.U1))
                                GHC.Generics.:+: (GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Mastercard"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1
                                                  GHC.Generics.:+: (GHC.Generics.C1
                                                                      ('GHC.Generics.MetaCons
                                                                         "DinerClub"
                                                                         'GHC.Generics.PrefixI
                                                                         'GHC.Types.False)
                                                                      GHC.Generics.U1
                                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                                       ('GHC.Generics.MetaCons
                                                                                          "Other"
                                                                                          'GHC.Generics.PrefixI
                                                                                          'GHC.Types.False)
                                                                                       GHC.Generics.U1))>_R) <a1>_N
                      ->_R <()>_R)
                     (Sym (Control.DeepSeq.N:GNFData[0]
                               <GHC.Types.*>_N
                               <GHC.Generics.M1
                                  GHC.Generics.D
                                  ('GHC.Generics.MetaData
                                     "Issuer"
                                     "Duckling.CreditCardNumber.Types"
                                     "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                     'GHC.Types.False)
                                  ((GHC.Generics.C1
                                      ('GHC.Generics.MetaCons
                                         "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1
                                    GHC.Generics.:+: (GHC.Generics.C1
                                                        ('GHC.Generics.MetaCons
                                                           "Amex"
                                                           'GHC.Generics.PrefixI
                                                           'GHC.Types.False)
                                                        GHC.Generics.U1
                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                         ('GHC.Generics.MetaCons
                                                                            "Discover"
                                                                            'GHC.Generics.PrefixI
                                                                            'GHC.Types.False)
                                                                         GHC.Generics.U1))
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "Mastercard"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: (GHC.Generics.C1
                                                                         ('GHC.Generics.MetaCons
                                                                            "DinerClub"
                                                                            'GHC.Generics.PrefixI
                                                                            'GHC.Types.False)
                                                                         GHC.Generics.U1
                                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                                          ('GHC.Generics.MetaCons
                                                                                             "Other"
                                                                                             'GHC.Generics.PrefixI
                                                                                             'GHC.Types.False)
                                                                                          GHC.Generics.U1)))>_N))) -}
2fe668acf225ec6c8279567539a30aa0
  $fNFDataCreditCardNumberData2 ::
    (GHC.Generics.:+:)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.C1
                           ('GHC.Generics.MetaCons
                              "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.C1
                                            ('GHC.Generics.MetaCons
                                               "Discover" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.C1
                           ('GHC.Generics.MetaCons
                              "DinerClub" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.C1
                                            ('GHC.Generics.MetaCons
                                               "Other" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      a1
    -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ a1
                   (ds :: (GHC.Generics.:+:)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: (GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1
                                               GHC.Generics.:+: GHC.Generics.C1
                                                                  ('GHC.Generics.MetaCons
                                                                     "Discover"
                                                                     'GHC.Generics.PrefixI
                                                                     'GHC.Types.False)
                                                                  GHC.Generics.U1))
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: (GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "DinerClub"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1
                                               GHC.Generics.:+: GHC.Generics.C1
                                                                  ('GHC.Generics.MetaCons
                                                                     "Other"
                                                                     'GHC.Generics.PrefixI
                                                                     'GHC.Types.False)
                                                                  GHC.Generics.U1))
                            a1) ->
                 case ds of wild {
                   GHC.Generics.L1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1 -> case x1 of tpl { DEFAULT -> GHC.Tuple.() }
                        GHC.Generics.R1 x1
                        -> case x1 of wild2 {
                             GHC.Generics.L1 x2 -> case x2 of tpl { DEFAULT -> GHC.Tuple.() }
                             GHC.Generics.R1 x2
                             -> case x2 of tpl { DEFAULT -> GHC.Tuple.() } } }
                   GHC.Generics.R1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1 -> case x1 of tpl { DEFAULT -> GHC.Tuple.() }
                        GHC.Generics.R1 x1
                        -> case x1 of wild2 {
                             GHC.Generics.L1 x2 -> case x2 of tpl { DEFAULT -> GHC.Tuple.() }
                             GHC.Generics.R1 x2
                             -> case x2 of tpl { DEFAULT -> GHC.Tuple.() } } } }) -}
eb0ba1e8838524b66ff805106380d8cb
  $fNFDataCreditCardNumberData_$crnf ::
    Duckling.CreditCardNumber.Types.CreditCardNumberData -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*H,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Duckling.CreditCardNumber.Types.CreditCardNumberData) ->
                 case eta of wild { Duckling.CreditCardNumber.Types.CreditCardNumberData g1 g2 ->
                 case g1 of tpl { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Duckling.CreditCardNumber.Types.$fNFDataCreditCardNumberData_$s$dmrnf
                   g2 } }) -}
7242b555aa3d28322fe91967ef549c66
  $fNFDataCreditCardNumberData_$s$dmrnf ::
    Duckling.CreditCardNumber.Types.Issuer -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (-3, True, False)
                (\ (eta :: Duckling.CreditCardNumber.Types.Issuer) ->
                 Duckling.CreditCardNumber.Types.$fNFDataCreditCardNumberData1
                   `cast`
                 (Control.DeepSeq.N:GNFData[0]
                      <GHC.Types.*>_N
                      (Sym (Duckling.CreditCardNumber.Types.Rep_Issuer[0])))
                   @ GHC.Prim.Any
                   (Duckling.CreditCardNumber.Types.$fGenericIssuer_$cfrom
                      @ GHC.Prim.Any
                      eta)) -}
7242b555aa3d28322fe91967ef549c66
  $fNFDataIssuer ::
    Control.DeepSeq.NFData Duckling.CreditCardNumber.Types.Issuer
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Duckling.CreditCardNumber.Types.$fNFDataCreditCardNumberData_$s$dmrnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Duckling.CreditCardNumber.Types.Issuer>_N)) -}
eb0ba1e8838524b66ff805106380d8cb
  $fOrdCreditCardNumberData ::
    GHC.Classes.Ord
      Duckling.CreditCardNumber.Types.CreditCardNumberData
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.CreditCardNumber.Types.CreditCardNumberData
                  Duckling.CreditCardNumber.Types.$fEqCreditCardNumberData
                  Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$ccompare
                  Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$c<
                  Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$c<=
                  Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$c>
                  Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$c>=
                  Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$cmax
                  Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$cmin -}
eb0ba1e8838524b66ff805106380d8cb
  $fOrdCreditCardNumberData_$c< ::
    Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)L),1*U(1*U(U,U,U),1*U)><S(S(SSS)L),1*U(1*U(U,U,U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.CreditCardNumber.Types.CreditCardNumberData)
                   (w1 :: Duckling.CreditCardNumber.Types.CreditCardNumberData) ->
                 case w of ww { Duckling.CreditCardNumber.Types.CreditCardNumberData ww1 ww2 ->
                 case ww1 of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 case w1 of ww7 { Duckling.CreditCardNumber.Types.CreditCardNumberData ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Duckling.CreditCardNumber.Types.$w$c<
                   ww4
                   ww5
                   ww6
                   ww2
                   ww11
                   ww12
                   ww13
                   ww9 } } } }) -}
7242b555aa3d28322fe91967ef549c66
  $fOrdCreditCardNumberData_$c<1 ::
    Duckling.CreditCardNumber.Types.Issuer
    -> Duckling.CreditCardNumber.Types.Issuer -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.CreditCardNumber.Types.Issuer)
                   (b :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case a of wild {
                   Duckling.CreditCardNumber.Types.Visa
                   -> case b of wild1 {
                        Duckling.CreditCardNumber.Types.Visa -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Amex -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Discover -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Mastercard -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.True }
                   Duckling.CreditCardNumber.Types.Amex
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Discover -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Mastercard -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.True }
                   Duckling.CreditCardNumber.Types.Discover
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Mastercard -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.True }
                   Duckling.CreditCardNumber.Types.Mastercard
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.True }
                   Duckling.CreditCardNumber.Types.DinerClub
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.True }
                   Duckling.CreditCardNumber.Types.Other
                   -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
eb0ba1e8838524b66ff805106380d8cb
  $fOrdCreditCardNumberData_$c<= ::
    Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)L),1*U(1*U(U,U,U),1*U)><S(S(SSS)L),1*U(1*U(U,U,U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.CreditCardNumber.Types.CreditCardNumberData)
                   (w1 :: Duckling.CreditCardNumber.Types.CreditCardNumberData) ->
                 case w of ww { Duckling.CreditCardNumber.Types.CreditCardNumberData ww1 ww2 ->
                 case ww1 of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 case w1 of ww7 { Duckling.CreditCardNumber.Types.CreditCardNumberData ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Duckling.CreditCardNumber.Types.$w$c<=
                   ww4
                   ww5
                   ww6
                   ww2
                   ww11
                   ww12
                   ww13
                   ww9 } } } }) -}
7242b555aa3d28322fe91967ef549c66
  $fOrdCreditCardNumberData_$c<=1 ::
    Duckling.CreditCardNumber.Types.Issuer
    -> Duckling.CreditCardNumber.Types.Issuer -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.CreditCardNumber.Types.Issuer)
                   (b :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case a of wild {
                   Duckling.CreditCardNumber.Types.Visa
                   -> case b of wild1 { DEFAULT -> GHC.Types.True }
                   Duckling.CreditCardNumber.Types.Amex
                   -> case b of wild1 {
                        Duckling.CreditCardNumber.Types.Visa -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Amex -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Discover -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Mastercard -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.True }
                   Duckling.CreditCardNumber.Types.Discover
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Discover -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Mastercard -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.True }
                   Duckling.CreditCardNumber.Types.Mastercard
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Mastercard -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.True }
                   Duckling.CreditCardNumber.Types.DinerClub
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.True }
                   Duckling.CreditCardNumber.Types.Other
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.True } }) -}
eb0ba1e8838524b66ff805106380d8cb
  $fOrdCreditCardNumberData_$c> ::
    Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)L),1*U(1*U(U,U,U),1*U)><S(S(SSS)L),1*U(1*U(U,U,U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.CreditCardNumber.Types.CreditCardNumberData)
                   (w1 :: Duckling.CreditCardNumber.Types.CreditCardNumberData) ->
                 case w of ww { Duckling.CreditCardNumber.Types.CreditCardNumberData ww1 ww2 ->
                 case ww1 of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 case w1 of ww7 { Duckling.CreditCardNumber.Types.CreditCardNumberData ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Duckling.CreditCardNumber.Types.$w$c>
                   ww4
                   ww5
                   ww6
                   ww2
                   ww11
                   ww12
                   ww13
                   ww9 } } } }) -}
7242b555aa3d28322fe91967ef549c66
  $fOrdCreditCardNumberData_$c>1 ::
    Duckling.CreditCardNumber.Types.Issuer
    -> Duckling.CreditCardNumber.Types.Issuer -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.CreditCardNumber.Types.Issuer)
                   (b :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case a of wild {
                   Duckling.CreditCardNumber.Types.Visa
                   -> case b of wild1 { DEFAULT -> GHC.Types.False }
                   Duckling.CreditCardNumber.Types.Amex
                   -> case b of wild1 {
                        Duckling.CreditCardNumber.Types.Visa -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Amex -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Discover -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Mastercard -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.False }
                   Duckling.CreditCardNumber.Types.Discover
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Discover -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Mastercard -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.False }
                   Duckling.CreditCardNumber.Types.Mastercard
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Mastercard -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.False }
                   Duckling.CreditCardNumber.Types.DinerClub
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.False }
                   Duckling.CreditCardNumber.Types.Other
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.False } }) -}
eb0ba1e8838524b66ff805106380d8cb
  $fOrdCreditCardNumberData_$c>= ::
    Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)L),1*U(1*U(U,U,U),1*U)><S(S(SSS)L),1*U(1*U(U,U,U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.CreditCardNumber.Types.CreditCardNumberData)
                   (w1 :: Duckling.CreditCardNumber.Types.CreditCardNumberData) ->
                 case w of ww { Duckling.CreditCardNumber.Types.CreditCardNumberData ww1 ww2 ->
                 case ww1 of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 case w1 of ww7 { Duckling.CreditCardNumber.Types.CreditCardNumberData ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Duckling.CreditCardNumber.Types.$w$c>=
                   ww4
                   ww5
                   ww6
                   ww2
                   ww11
                   ww12
                   ww13
                   ww9 } } } }) -}
7242b555aa3d28322fe91967ef549c66
  $fOrdCreditCardNumberData_$c>=1 ::
    Duckling.CreditCardNumber.Types.Issuer
    -> Duckling.CreditCardNumber.Types.Issuer -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.CreditCardNumber.Types.Issuer)
                   (b :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case a of wild {
                   Duckling.CreditCardNumber.Types.Visa
                   -> case b of wild1 {
                        Duckling.CreditCardNumber.Types.Visa -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Amex -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Discover -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Mastercard -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.False }
                   Duckling.CreditCardNumber.Types.Amex
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Discover -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Mastercard -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.False }
                   Duckling.CreditCardNumber.Types.Discover
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Mastercard -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.False }
                   Duckling.CreditCardNumber.Types.Mastercard
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.False
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.False }
                   Duckling.CreditCardNumber.Types.DinerClub
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.False }
                   Duckling.CreditCardNumber.Types.Other
                   -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
eb0ba1e8838524b66ff805106380d8cb
  $fOrdCreditCardNumberData_$ccompare ::
    Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)L),1*U(1*U(U,U,U),1*U)><S(S(SSS)L),1*U(1*U(U,U,U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.CreditCardNumber.Types.CreditCardNumberData)
                   (w1 :: Duckling.CreditCardNumber.Types.CreditCardNumberData) ->
                 case w of ww { Duckling.CreditCardNumber.Types.CreditCardNumberData ww1 ww2 ->
                 case ww1 of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 case w1 of ww7 { Duckling.CreditCardNumber.Types.CreditCardNumberData ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Duckling.CreditCardNumber.Types.$w$ccompare
                   ww4
                   ww5
                   ww6
                   ww2
                   ww11
                   ww12
                   ww13
                   ww9 } } } }) -}
7242b555aa3d28322fe91967ef549c66
  $fOrdCreditCardNumberData_$ccompare1 ::
    Duckling.CreditCardNumber.Types.Issuer
    -> Duckling.CreditCardNumber.Types.Issuer -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.CreditCardNumber.Types.Issuer)
                   (b :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case a of wild {
                   Duckling.CreditCardNumber.Types.Visa
                   -> case b of wild1 {
                        Duckling.CreditCardNumber.Types.Visa -> GHC.Types.EQ
                        Duckling.CreditCardNumber.Types.Amex -> GHC.Types.LT
                        Duckling.CreditCardNumber.Types.Discover -> GHC.Types.LT
                        Duckling.CreditCardNumber.Types.Mastercard -> GHC.Types.LT
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.LT
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.LT }
                   Duckling.CreditCardNumber.Types.Amex
                   -> case b of wild1 {
                        Duckling.CreditCardNumber.Types.Visa -> GHC.Types.GT
                        Duckling.CreditCardNumber.Types.Amex -> GHC.Types.EQ
                        Duckling.CreditCardNumber.Types.Discover -> GHC.Types.LT
                        Duckling.CreditCardNumber.Types.Mastercard -> GHC.Types.LT
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.LT
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.LT }
                   Duckling.CreditCardNumber.Types.Discover
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Duckling.CreditCardNumber.Types.Discover -> GHC.Types.EQ
                        Duckling.CreditCardNumber.Types.Mastercard -> GHC.Types.LT
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.LT
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.LT }
                   Duckling.CreditCardNumber.Types.Mastercard
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Duckling.CreditCardNumber.Types.Mastercard -> GHC.Types.EQ
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.LT
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.LT }
                   Duckling.CreditCardNumber.Types.DinerClub
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Duckling.CreditCardNumber.Types.DinerClub -> GHC.Types.EQ
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.LT }
                   Duckling.CreditCardNumber.Types.Other
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Duckling.CreditCardNumber.Types.Other -> GHC.Types.EQ } }) -}
eb0ba1e8838524b66ff805106380d8cb
  $fOrdCreditCardNumberData_$cmax ::
    Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> Duckling.CreditCardNumber.Types.CreditCardNumberData
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)L),1*U(U(U,U,U),U)><S(S(SSS)L),1*U(U(U,U,U),U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.CreditCardNumber.Types.CreditCardNumberData)
                   (w1 :: Duckling.CreditCardNumber.Types.CreditCardNumberData) ->
                 case w of ww { Duckling.CreditCardNumber.Types.CreditCardNumberData ww1 ww2 ->
                 case ww1 of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 case w1 of ww7 { Duckling.CreditCardNumber.Types.CreditCardNumberData ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 case Data.Text.$w$ccompare ww4 ww5 ww6 ww11 ww12 ww13 of wild {
                   GHC.Types.LT
                   -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                        (Data.Text.Internal.Text ww11 ww12 ww13)
                        ww9
                   GHC.Types.EQ
                   -> case ww2 of wild1 {
                        Duckling.CreditCardNumber.Types.Visa
                        -> case ww9 of wild2 { DEFAULT ->
                           Duckling.CreditCardNumber.Types.CreditCardNumberData
                             (Data.Text.Internal.Text ww11 ww12 ww13)
                             wild2 }
                        Duckling.CreditCardNumber.Types.Amex
                        -> case ww9 of wild2 {
                             Duckling.CreditCardNumber.Types.Visa
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Amex
                             Duckling.CreditCardNumber.Types.Amex
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Amex
                             Duckling.CreditCardNumber.Types.Discover
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Discover
                             Duckling.CreditCardNumber.Types.Mastercard
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Mastercard
                             Duckling.CreditCardNumber.Types.DinerClub
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.DinerClub
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Other }
                        Duckling.CreditCardNumber.Types.Discover
                        -> case ww9 of wild2 {
                             DEFAULT
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Discover
                             Duckling.CreditCardNumber.Types.Discover
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Discover
                             Duckling.CreditCardNumber.Types.Mastercard
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Mastercard
                             Duckling.CreditCardNumber.Types.DinerClub
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.DinerClub
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Other }
                        Duckling.CreditCardNumber.Types.Mastercard
                        -> case ww9 of wild2 {
                             DEFAULT
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Mastercard
                             Duckling.CreditCardNumber.Types.Mastercard
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Mastercard
                             Duckling.CreditCardNumber.Types.DinerClub
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.DinerClub
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Other }
                        Duckling.CreditCardNumber.Types.DinerClub
                        -> case ww9 of wild2 {
                             DEFAULT
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.DinerClub
                             Duckling.CreditCardNumber.Types.DinerClub
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.DinerClub
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Other }
                        Duckling.CreditCardNumber.Types.Other
                        -> case ww9 of wild2 {
                             DEFAULT
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Other
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Other } }
                   GHC.Types.GT
                   -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                        (Data.Text.Internal.Text ww4 ww5 ww6)
                        ww2 } } } } }) -}
eb0ba1e8838524b66ff805106380d8cb
  $fOrdCreditCardNumberData_$cmin ::
    Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> Duckling.CreditCardNumber.Types.CreditCardNumberData
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)L),1*U(U(U,U,U),U)><S(S(SSS)L),1*U(U(U,U,U),U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.CreditCardNumber.Types.CreditCardNumberData)
                   (w1 :: Duckling.CreditCardNumber.Types.CreditCardNumberData) ->
                 case w of ww { Duckling.CreditCardNumber.Types.CreditCardNumberData ww1 ww2 ->
                 case ww1 of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 case w1 of ww7 { Duckling.CreditCardNumber.Types.CreditCardNumberData ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 case Data.Text.$w$ccompare ww4 ww5 ww6 ww11 ww12 ww13 of wild {
                   GHC.Types.LT
                   -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                        (Data.Text.Internal.Text ww4 ww5 ww6)
                        ww2
                   GHC.Types.EQ
                   -> case ww2 of wild1 {
                        Duckling.CreditCardNumber.Types.Visa
                        -> case ww9 of wild2 { DEFAULT ->
                           Duckling.CreditCardNumber.Types.CreditCardNumberData
                             (Data.Text.Internal.Text ww4 ww5 ww6)
                             Duckling.CreditCardNumber.Types.Visa }
                        Duckling.CreditCardNumber.Types.Amex
                        -> case ww9 of wild2 {
                             Duckling.CreditCardNumber.Types.Visa
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Visa
                             Duckling.CreditCardNumber.Types.Amex
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Amex
                             Duckling.CreditCardNumber.Types.Discover
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Amex
                             Duckling.CreditCardNumber.Types.Mastercard
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Amex
                             Duckling.CreditCardNumber.Types.DinerClub
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Amex
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Amex }
                        Duckling.CreditCardNumber.Types.Discover
                        -> case ww9 of wild2 {
                             DEFAULT
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  wild2
                             Duckling.CreditCardNumber.Types.Discover
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Discover
                             Duckling.CreditCardNumber.Types.Mastercard
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Discover
                             Duckling.CreditCardNumber.Types.DinerClub
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Discover
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Discover }
                        Duckling.CreditCardNumber.Types.Mastercard
                        -> case ww9 of wild2 {
                             DEFAULT
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  wild2
                             Duckling.CreditCardNumber.Types.Mastercard
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Mastercard
                             Duckling.CreditCardNumber.Types.DinerClub
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Mastercard
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Mastercard }
                        Duckling.CreditCardNumber.Types.DinerClub
                        -> case ww9 of wild2 {
                             DEFAULT
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  wild2
                             Duckling.CreditCardNumber.Types.DinerClub
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.DinerClub
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.DinerClub }
                        Duckling.CreditCardNumber.Types.Other
                        -> case ww9 of wild2 {
                             DEFAULT
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  wild2
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Other } }
                   GHC.Types.GT
                   -> Duckling.CreditCardNumber.Types.CreditCardNumberData
                        (Data.Text.Internal.Text ww11 ww12 ww13)
                        ww9 } } } } }) -}
4b7c9f4dbd0474c7cfe36565839736af
  $fOrdCreditCardNumberValue ::
    GHC.Classes.Ord
      Duckling.CreditCardNumber.Types.CreditCardNumberValue
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.CreditCardNumber.Types.CreditCardNumberValue
                  Duckling.CreditCardNumber.Types.$fEqCreditCardNumberValue
                  Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberValue_$ccompare
                  Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberValue_$c<
                  Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberValue_$c<=
                  Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberValue_$c>
                  Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberValue_$c>=
                  Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberValue_$cmax
                  Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberValue_$cmin -}
4b7c9f4dbd0474c7cfe36565839736af
  $fOrdCreditCardNumberValue_$c< ::
    Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)L),1*U(1*U(U,U,U),1*U)><S(S(SSS)L),1*U(1*U(U,U,U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.CreditCardNumber.Types.CreditCardNumberValue)
                   (w1 :: Duckling.CreditCardNumber.Types.CreditCardNumberValue) ->
                 case w of ww { Duckling.CreditCardNumber.Types.CreditCardNumberValue ww1 ww2 ->
                 case ww1 of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 case w1 of ww7 { Duckling.CreditCardNumber.Types.CreditCardNumberValue ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Duckling.CreditCardNumber.Types.$w$c<1
                   ww4
                   ww5
                   ww6
                   ww2
                   ww11
                   ww12
                   ww13
                   ww9 } } } }) -}
4b7c9f4dbd0474c7cfe36565839736af
  $fOrdCreditCardNumberValue_$c<= ::
    Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)L),1*U(1*U(U,U,U),1*U)><S(S(SSS)L),1*U(1*U(U,U,U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.CreditCardNumber.Types.CreditCardNumberValue)
                   (w1 :: Duckling.CreditCardNumber.Types.CreditCardNumberValue) ->
                 case w of ww { Duckling.CreditCardNumber.Types.CreditCardNumberValue ww1 ww2 ->
                 case ww1 of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 case w1 of ww7 { Duckling.CreditCardNumber.Types.CreditCardNumberValue ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Duckling.CreditCardNumber.Types.$w$c<=1
                   ww4
                   ww5
                   ww6
                   ww2
                   ww11
                   ww12
                   ww13
                   ww9 } } } }) -}
4b7c9f4dbd0474c7cfe36565839736af
  $fOrdCreditCardNumberValue_$c> ::
    Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)L),1*U(1*U(U,U,U),1*U)><S(S(SSS)L),1*U(1*U(U,U,U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.CreditCardNumber.Types.CreditCardNumberValue)
                   (w1 :: Duckling.CreditCardNumber.Types.CreditCardNumberValue) ->
                 case w of ww { Duckling.CreditCardNumber.Types.CreditCardNumberValue ww1 ww2 ->
                 case ww1 of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 case w1 of ww7 { Duckling.CreditCardNumber.Types.CreditCardNumberValue ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Duckling.CreditCardNumber.Types.$w$c>1
                   ww4
                   ww5
                   ww6
                   ww2
                   ww11
                   ww12
                   ww13
                   ww9 } } } }) -}
4b7c9f4dbd0474c7cfe36565839736af
  $fOrdCreditCardNumberValue_$c>= ::
    Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)L),1*U(1*U(U,U,U),1*U)><S(S(SSS)L),1*U(1*U(U,U,U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.CreditCardNumber.Types.CreditCardNumberValue)
                   (w1 :: Duckling.CreditCardNumber.Types.CreditCardNumberValue) ->
                 case w of ww { Duckling.CreditCardNumber.Types.CreditCardNumberValue ww1 ww2 ->
                 case ww1 of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 case w1 of ww7 { Duckling.CreditCardNumber.Types.CreditCardNumberValue ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Duckling.CreditCardNumber.Types.$w$c>=1
                   ww4
                   ww5
                   ww6
                   ww2
                   ww11
                   ww12
                   ww13
                   ww9 } } } }) -}
4b7c9f4dbd0474c7cfe36565839736af
  $fOrdCreditCardNumberValue_$ccompare ::
    Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)L),1*U(1*U(U,U,U),1*U)><S(S(SSS)L),1*U(1*U(U,U,U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.CreditCardNumber.Types.CreditCardNumberValue)
                   (w1 :: Duckling.CreditCardNumber.Types.CreditCardNumberValue) ->
                 case w of ww { Duckling.CreditCardNumber.Types.CreditCardNumberValue ww1 ww2 ->
                 case ww1 of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 case w1 of ww7 { Duckling.CreditCardNumber.Types.CreditCardNumberValue ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Duckling.CreditCardNumber.Types.$w$ccompare1
                   ww4
                   ww5
                   ww6
                   ww2
                   ww11
                   ww12
                   ww13
                   ww9 } } } }) -}
4b7c9f4dbd0474c7cfe36565839736af
  $fOrdCreditCardNumberValue_$cmax ::
    Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)L),1*U(U(U,U,U),U)><S(S(SSS)L),1*U(U(U,U,U),U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.CreditCardNumber.Types.CreditCardNumberValue)
                   (w1 :: Duckling.CreditCardNumber.Types.CreditCardNumberValue) ->
                 case w of ww { Duckling.CreditCardNumber.Types.CreditCardNumberValue ww1 ww2 ->
                 case ww1 of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 case w1 of ww7 { Duckling.CreditCardNumber.Types.CreditCardNumberValue ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 case Data.Text.$w$ccompare ww4 ww5 ww6 ww11 ww12 ww13 of wild {
                   GHC.Types.LT
                   -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                        (Data.Text.Internal.Text ww11 ww12 ww13)
                        ww9
                   GHC.Types.EQ
                   -> case ww2 of wild1 {
                        Duckling.CreditCardNumber.Types.Visa
                        -> case ww9 of wild2 { DEFAULT ->
                           Duckling.CreditCardNumber.Types.CreditCardNumberValue
                             (Data.Text.Internal.Text ww11 ww12 ww13)
                             wild2 }
                        Duckling.CreditCardNumber.Types.Amex
                        -> case ww9 of wild2 {
                             Duckling.CreditCardNumber.Types.Visa
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Amex
                             Duckling.CreditCardNumber.Types.Amex
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Amex
                             Duckling.CreditCardNumber.Types.Discover
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Discover
                             Duckling.CreditCardNumber.Types.Mastercard
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Mastercard
                             Duckling.CreditCardNumber.Types.DinerClub
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.DinerClub
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Other }
                        Duckling.CreditCardNumber.Types.Discover
                        -> case ww9 of wild2 {
                             DEFAULT
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Discover
                             Duckling.CreditCardNumber.Types.Discover
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Discover
                             Duckling.CreditCardNumber.Types.Mastercard
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Mastercard
                             Duckling.CreditCardNumber.Types.DinerClub
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.DinerClub
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Other }
                        Duckling.CreditCardNumber.Types.Mastercard
                        -> case ww9 of wild2 {
                             DEFAULT
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Mastercard
                             Duckling.CreditCardNumber.Types.Mastercard
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Mastercard
                             Duckling.CreditCardNumber.Types.DinerClub
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.DinerClub
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Other }
                        Duckling.CreditCardNumber.Types.DinerClub
                        -> case ww9 of wild2 {
                             DEFAULT
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.DinerClub
                             Duckling.CreditCardNumber.Types.DinerClub
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.DinerClub
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Other }
                        Duckling.CreditCardNumber.Types.Other
                        -> case ww9 of wild2 {
                             DEFAULT
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Other
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Other } }
                   GHC.Types.GT
                   -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                        (Data.Text.Internal.Text ww4 ww5 ww6)
                        ww2 } } } } }) -}
4b7c9f4dbd0474c7cfe36565839736af
  $fOrdCreditCardNumberValue_$cmin ::
    Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)L),1*U(U(U,U,U),U)><S(S(SSS)L),1*U(U(U,U,U),U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.CreditCardNumber.Types.CreditCardNumberValue)
                   (w1 :: Duckling.CreditCardNumber.Types.CreditCardNumberValue) ->
                 case w of ww { Duckling.CreditCardNumber.Types.CreditCardNumberValue ww1 ww2 ->
                 case ww1 of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 case w1 of ww7 { Duckling.CreditCardNumber.Types.CreditCardNumberValue ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 case Data.Text.$w$ccompare ww4 ww5 ww6 ww11 ww12 ww13 of wild {
                   GHC.Types.LT
                   -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                        (Data.Text.Internal.Text ww4 ww5 ww6)
                        ww2
                   GHC.Types.EQ
                   -> case ww2 of wild1 {
                        Duckling.CreditCardNumber.Types.Visa
                        -> case ww9 of wild2 { DEFAULT ->
                           Duckling.CreditCardNumber.Types.CreditCardNumberValue
                             (Data.Text.Internal.Text ww4 ww5 ww6)
                             Duckling.CreditCardNumber.Types.Visa }
                        Duckling.CreditCardNumber.Types.Amex
                        -> case ww9 of wild2 {
                             Duckling.CreditCardNumber.Types.Visa
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  Duckling.CreditCardNumber.Types.Visa
                             Duckling.CreditCardNumber.Types.Amex
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Amex
                             Duckling.CreditCardNumber.Types.Discover
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Amex
                             Duckling.CreditCardNumber.Types.Mastercard
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Amex
                             Duckling.CreditCardNumber.Types.DinerClub
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Amex
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Amex }
                        Duckling.CreditCardNumber.Types.Discover
                        -> case ww9 of wild2 {
                             DEFAULT
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  wild2
                             Duckling.CreditCardNumber.Types.Discover
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Discover
                             Duckling.CreditCardNumber.Types.Mastercard
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Discover
                             Duckling.CreditCardNumber.Types.DinerClub
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Discover
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Discover }
                        Duckling.CreditCardNumber.Types.Mastercard
                        -> case ww9 of wild2 {
                             DEFAULT
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  wild2
                             Duckling.CreditCardNumber.Types.Mastercard
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Mastercard
                             Duckling.CreditCardNumber.Types.DinerClub
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Mastercard
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Mastercard }
                        Duckling.CreditCardNumber.Types.DinerClub
                        -> case ww9 of wild2 {
                             DEFAULT
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  wild2
                             Duckling.CreditCardNumber.Types.DinerClub
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.DinerClub
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.DinerClub }
                        Duckling.CreditCardNumber.Types.Other
                        -> case ww9 of wild2 {
                             DEFAULT
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww11 ww12 ww13)
                                  wild2
                             Duckling.CreditCardNumber.Types.Other
                             -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  (Data.Text.Internal.Text ww4 ww5 ww6)
                                  Duckling.CreditCardNumber.Types.Other } }
                   GHC.Types.GT
                   -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
                        (Data.Text.Internal.Text ww11 ww12 ww13)
                        ww9 } } } } }) -}
7242b555aa3d28322fe91967ef549c66
  $fOrdIssuer ::
    GHC.Classes.Ord Duckling.CreditCardNumber.Types.Issuer
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.CreditCardNumber.Types.Issuer
                  Duckling.CreditCardNumber.Types.$fEqIssuer
                  Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$ccompare1
                  Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$c<1
                  Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$c<=1
                  Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$c>1
                  Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$c>=1
                  Duckling.CreditCardNumber.Types.$fOrdIssuer_$cmax
                  Duckling.CreditCardNumber.Types.$fOrdIssuer_$cmin -}
7242b555aa3d28322fe91967ef549c66
  $fOrdIssuer_$cmax ::
    Duckling.CreditCardNumber.Types.Issuer
    -> Duckling.CreditCardNumber.Types.Issuer
    -> Duckling.CreditCardNumber.Types.Issuer
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Duckling.CreditCardNumber.Types.Issuer)
                   (y :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case x of wild {
                   Duckling.CreditCardNumber.Types.Visa -> y
                   Duckling.CreditCardNumber.Types.Amex
                   -> case y of wild1 {
                        DEFAULT -> Duckling.CreditCardNumber.Types.Amex
                        Duckling.CreditCardNumber.Types.Discover
                        -> Duckling.CreditCardNumber.Types.Discover
                        Duckling.CreditCardNumber.Types.Mastercard
                        -> Duckling.CreditCardNumber.Types.Mastercard
                        Duckling.CreditCardNumber.Types.DinerClub
                        -> Duckling.CreditCardNumber.Types.DinerClub
                        Duckling.CreditCardNumber.Types.Other
                        -> Duckling.CreditCardNumber.Types.Other }
                   Duckling.CreditCardNumber.Types.Discover
                   -> case y of wild1 {
                        DEFAULT -> Duckling.CreditCardNumber.Types.Discover
                        Duckling.CreditCardNumber.Types.Mastercard
                        -> Duckling.CreditCardNumber.Types.Mastercard
                        Duckling.CreditCardNumber.Types.DinerClub
                        -> Duckling.CreditCardNumber.Types.DinerClub
                        Duckling.CreditCardNumber.Types.Other
                        -> Duckling.CreditCardNumber.Types.Other }
                   Duckling.CreditCardNumber.Types.Mastercard
                   -> case y of wild1 {
                        DEFAULT -> Duckling.CreditCardNumber.Types.Mastercard
                        Duckling.CreditCardNumber.Types.DinerClub
                        -> Duckling.CreditCardNumber.Types.DinerClub
                        Duckling.CreditCardNumber.Types.Other
                        -> Duckling.CreditCardNumber.Types.Other }
                   Duckling.CreditCardNumber.Types.DinerClub
                   -> case y of wild1 {
                        DEFAULT -> Duckling.CreditCardNumber.Types.DinerClub
                        Duckling.CreditCardNumber.Types.Other
                        -> Duckling.CreditCardNumber.Types.Other }
                   Duckling.CreditCardNumber.Types.Other
                   -> case y of wild1 { DEFAULT ->
                      Duckling.CreditCardNumber.Types.Other } }) -}
7242b555aa3d28322fe91967ef549c66
  $fOrdIssuer_$cmin ::
    Duckling.CreditCardNumber.Types.Issuer
    -> Duckling.CreditCardNumber.Types.Issuer
    -> Duckling.CreditCardNumber.Types.Issuer
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Duckling.CreditCardNumber.Types.Issuer)
                   (y :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case x of wild {
                   Duckling.CreditCardNumber.Types.Visa
                   -> case y of wild1 { DEFAULT ->
                      Duckling.CreditCardNumber.Types.Visa }
                   Duckling.CreditCardNumber.Types.Amex
                   -> case y of wild1 {
                        Duckling.CreditCardNumber.Types.Visa
                        -> Duckling.CreditCardNumber.Types.Visa
                        Duckling.CreditCardNumber.Types.Amex
                        -> Duckling.CreditCardNumber.Types.Amex
                        Duckling.CreditCardNumber.Types.Discover
                        -> Duckling.CreditCardNumber.Types.Amex
                        Duckling.CreditCardNumber.Types.Mastercard
                        -> Duckling.CreditCardNumber.Types.Amex
                        Duckling.CreditCardNumber.Types.DinerClub
                        -> Duckling.CreditCardNumber.Types.Amex
                        Duckling.CreditCardNumber.Types.Other
                        -> Duckling.CreditCardNumber.Types.Amex }
                   Duckling.CreditCardNumber.Types.Discover
                   -> case y of wild1 {
                        DEFAULT -> wild1
                        Duckling.CreditCardNumber.Types.Discover
                        -> Duckling.CreditCardNumber.Types.Discover
                        Duckling.CreditCardNumber.Types.Mastercard
                        -> Duckling.CreditCardNumber.Types.Discover
                        Duckling.CreditCardNumber.Types.DinerClub
                        -> Duckling.CreditCardNumber.Types.Discover
                        Duckling.CreditCardNumber.Types.Other
                        -> Duckling.CreditCardNumber.Types.Discover }
                   Duckling.CreditCardNumber.Types.Mastercard
                   -> case y of wild1 {
                        DEFAULT -> wild1
                        Duckling.CreditCardNumber.Types.Mastercard
                        -> Duckling.CreditCardNumber.Types.Mastercard
                        Duckling.CreditCardNumber.Types.DinerClub
                        -> Duckling.CreditCardNumber.Types.Mastercard
                        Duckling.CreditCardNumber.Types.Other
                        -> Duckling.CreditCardNumber.Types.Mastercard }
                   Duckling.CreditCardNumber.Types.DinerClub
                   -> case y of wild1 {
                        DEFAULT -> wild1
                        Duckling.CreditCardNumber.Types.DinerClub
                        -> Duckling.CreditCardNumber.Types.DinerClub
                        Duckling.CreditCardNumber.Types.Other
                        -> Duckling.CreditCardNumber.Types.DinerClub }
                   Duckling.CreditCardNumber.Types.Other -> y }) -}
eb0ba1e8838524b66ff805106380d8cb
  $fResolveCreditCardNumberData ::
    Duckling.Resolve.Resolve
      Duckling.CreditCardNumber.Types.CreditCardNumberData
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.CreditCardNumber.Types.CreditCardNumberData
                  Duckling.CreditCardNumber.Types.$fEqCreditCardNumberValue
                    `cast`
                  (GHC.Classes.Eq
                     (Sym (Duckling.CreditCardNumber.Types.D:R:ResolvedValueCreditCardNumberData[0])))_R
                  Duckling.CreditCardNumber.Types.$fShowCreditCardNumberValue
                    `cast`
                  (GHC.Show.Show
                     (Sym (Duckling.CreditCardNumber.Types.D:R:ResolvedValueCreditCardNumberData[0])))_R
                  Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue
                    `cast`
                  (Data.Aeson.Types.ToJSON.ToJSON
                     (Sym (Duckling.CreditCardNumber.Types.D:R:ResolvedValueCreditCardNumberData[0])))_R
                  Duckling.CreditCardNumber.Types.$fResolveCreditCardNumberData_$cresolve -}
eb0ba1e8838524b66ff805106380d8cb
  $fResolveCreditCardNumberData_$cresolve ::
    Duckling.Resolve.Context
    -> Duckling.Resolve.Options
    -> Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> GHC.Base.Maybe
         (Duckling.Resolve.ResolvedValue
            Duckling.CreditCardNumber.Types.CreditCardNumberData,
          GHC.Types.Bool)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><S,1*U(U,U)>m2,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: Duckling.Resolve.Context)
                   (ds1 :: Duckling.Resolve.Options)
                   (ds2 :: Duckling.CreditCardNumber.Types.CreditCardNumberData) ->
                 case ds2 of wild { Duckling.CreditCardNumber.Types.CreditCardNumberData ds3 ds4 ->
                 (GHC.Base.Just
                    @ (Duckling.CreditCardNumber.Types.CreditCardNumberValue,
                       GHC.Types.Bool)
                    (Duckling.CreditCardNumber.Types.CreditCardNumberValue ds3 ds4,
                     GHC.Types.False))
                   `cast`
                 (GHC.Base.Maybe
                    ((,)
                       (Sub (Sym (Duckling.CreditCardNumber.Types.D:R:ResolvedValueCreditCardNumberData[0])))
                       <GHC.Types.Bool>_R)_R)_R }) -}
eb0ba1e8838524b66ff805106380d8cb
  $fShowCreditCardNumberData ::
    GHC.Show.Show Duckling.CreditCardNumber.Types.CreditCardNumberData
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.CreditCardNumber.Types.CreditCardNumberData
                  Duckling.CreditCardNumber.Types.$fShowCreditCardNumberData_$cshowsPrec
                  Duckling.CreditCardNumber.Types.$fShowCreditCardNumberData_$cshow
                  Duckling.CreditCardNumber.Types.$fShowCreditCardNumberData_$cshowList -}
eb0ba1e8838524b66ff805106380d8cb
  $fShowCreditCardNumberData1 ::
    Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Duckling.CreditCardNumber.Types.CreditCardNumberData)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { Duckling.CreditCardNumber.Types.CreditCardNumberData ww1 ww2 ->
                 Duckling.CreditCardNumber.Types.$w$cshowsPrec2 0# ww1 ww2 w1 }) -}
f11675328fff4b130424421f62a68477
  $fShowCreditCardNumberData2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "CreditCardNumberData {"#) -}
99dbc5af8b1288719bde4fab12d93d7e
  $fShowCreditCardNumberData3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "issuer = "#) -}
74686f55a3c078721887906bfab00c82
  $fShowCreditCardNumberData4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "number = "#) -}
eb0ba1e8838524b66ff805106380d8cb
  $fShowCreditCardNumberData_$cshow ::
    Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U,U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Duckling.CreditCardNumber.Types.CreditCardNumberData) ->
                 Duckling.CreditCardNumber.Types.$fShowCreditCardNumberData_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
eb0ba1e8838524b66ff805106380d8cb
  $fShowCreditCardNumberData_$cshowList ::
    [Duckling.CreditCardNumber.Types.CreditCardNumberData]
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Duckling.CreditCardNumber.Types.CreditCardNumberData
                   Duckling.CreditCardNumber.Types.$fShowCreditCardNumberData1) -}
eb0ba1e8838524b66ff805106380d8cb
  $fShowCreditCardNumberData_$cshowsPrec ::
    GHC.Types.Int
    -> Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U),1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Duckling.CreditCardNumber.Types.CreditCardNumberData)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Duckling.CreditCardNumber.Types.CreditCardNumberData ww3 ww4 ->
                 Duckling.CreditCardNumber.Types.$w$cshowsPrec2
                   ww1
                   ww3
                   ww4
                   w2 } }) -}
4b7c9f4dbd0474c7cfe36565839736af
  $fShowCreditCardNumberValue ::
    GHC.Show.Show Duckling.CreditCardNumber.Types.CreditCardNumberValue
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.CreditCardNumber.Types.CreditCardNumberValue
                  Duckling.CreditCardNumber.Types.$fShowCreditCardNumberValue_$cshowsPrec
                  Duckling.CreditCardNumber.Types.$fShowCreditCardNumberValue_$cshow
                  Duckling.CreditCardNumber.Types.$fShowCreditCardNumberValue_$cshowList -}
4b7c9f4dbd0474c7cfe36565839736af
  $fShowCreditCardNumberValue1 ::
    Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Duckling.CreditCardNumber.Types.CreditCardNumberValue)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { Duckling.CreditCardNumber.Types.CreditCardNumberValue ww1 ww2 ->
                 Duckling.CreditCardNumber.Types.$w$cshowsPrec1 0# ww1 ww2 w1 }) -}
b90f6ff224fb46bc5d9da97bc3f3c3a5
  $fShowCreditCardNumberValue2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "CreditCardNumberValue {"#) -}
251952b40efdf7d763838a152863ecb7
  $fShowCreditCardNumberValue3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
adfa008376cddcba184d751e9d8cd2f1
  $fShowCreditCardNumberValue4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "vIssuer = "#) -}
1179496e306f310dfa7c230c3ebac535
  $fShowCreditCardNumberValue5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
1ecbac94fd7c23ebacb0832b01593938
  $fShowCreditCardNumberValue6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "vNumber = "#) -}
4b7c9f4dbd0474c7cfe36565839736af
  $fShowCreditCardNumberValue_$cshow ::
    Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U,U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Duckling.CreditCardNumber.Types.CreditCardNumberValue) ->
                 Duckling.CreditCardNumber.Types.$fShowCreditCardNumberValue_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
4b7c9f4dbd0474c7cfe36565839736af
  $fShowCreditCardNumberValue_$cshowList ::
    [Duckling.CreditCardNumber.Types.CreditCardNumberValue]
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Duckling.CreditCardNumber.Types.CreditCardNumberValue
                   Duckling.CreditCardNumber.Types.$fShowCreditCardNumberValue1) -}
4b7c9f4dbd0474c7cfe36565839736af
  $fShowCreditCardNumberValue_$cshowsPrec ::
    GHC.Types.Int
    -> Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U),1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Duckling.CreditCardNumber.Types.CreditCardNumberValue)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Duckling.CreditCardNumber.Types.CreditCardNumberValue ww3 ww4 ->
                 Duckling.CreditCardNumber.Types.$w$cshowsPrec1
                   ww1
                   ww3
                   ww4
                   w2 } }) -}
7242b555aa3d28322fe91967ef549c66
  $fShowIssuer ::
    GHC.Show.Show Duckling.CreditCardNumber.Types.Issuer
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.CreditCardNumber.Types.Issuer
                  Duckling.CreditCardNumber.Types.$fShowIssuer_$cshowsPrec
                  Duckling.CreditCardNumber.Types.$fShowIssuer_$cshow
                  Duckling.CreditCardNumber.Types.$fShowIssuer_$cshowList -}
7242b555aa3d28322fe91967ef549c66
  $fShowIssuer_$cshow ::
    Duckling.CreditCardNumber.Types.Issuer -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Duckling.CreditCardNumber.Types.Issuer) ->
                 Duckling.CreditCardNumber.Types.$fShowIssuer_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
7242b555aa3d28322fe91967ef549c66
  $fShowIssuer_$cshowList ::
    [Duckling.CreditCardNumber.Types.Issuer] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Duckling.CreditCardNumber.Types.Issuer
                   Duckling.CreditCardNumber.Types.$w$cshowsPrec) -}
7242b555aa3d28322fe91967ef549c66
  $fShowIssuer_$cshowsPrec ::
    GHC.Types.Int
    -> Duckling.CreditCardNumber.Types.Issuer -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Duckling.CreditCardNumber.Types.Issuer)
                   (w2 :: GHC.Base.String) ->
                 Duckling.CreditCardNumber.Types.$w$cshowsPrec w1 w2) -}
4b7c9f4dbd0474c7cfe36565839736af
  $fToJSONCreditCardNumberValue ::
    Data.Aeson.Types.ToJSON.ToJSON
      Duckling.CreditCardNumber.Types.CreditCardNumberValue
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.CreditCardNumber.Types.CreditCardNumberValue
                  Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue_$ctoJSON
                  Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue_$ctoEncoding
                  Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue_$ctoJSONList
                  Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue_$ctoEncodingList -}
29de61827962244eb5f79f84c219c499
  $fToJSONCreditCardNumberValue1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Other"#) -}
14e9a1c43090c3a000f4f07b25ac5897
  $fToJSONCreditCardNumberValue2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DinerClub"#) -}
a2924c38fa25af5ecc8da1e33d96f9c0
  $fToJSONCreditCardNumberValue3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Mastercard"#) -}
09a81780a0845eb2256b61cbed7a05b0
  $fToJSONCreditCardNumberValue4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Discover"#) -}
bcbcc890cbb45fd8f9e12ed33778e252
  $fToJSONCreditCardNumberValue5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Amex"#) -}
950cfdb873973596dbac55b3bb30a59e
  $fToJSONCreditCardNumberValue6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Visa"#) -}
e58ff1cc4a6934322402894b7bcd1c45
  $fToJSONCreditCardNumberValue7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "issuer"#) -}
04576074c5837fa82e07cb1dd402ce5b
  $fToJSONCreditCardNumberValue8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "value"#) -}
4b7c9f4dbd0474c7cfe36565839736af
  $fToJSONCreditCardNumberValue_$ctoEncoding ::
    Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(U,1*U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Duckling.CreditCardNumber.Types.CreditCardNumberValue) ->
                 Data.Aeson.Encoding.Internal.value
                   (Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue_$ctoJSON
                      eta)) -}
4b7c9f4dbd0474c7cfe36565839736af
  $fToJSONCreditCardNumberValue_$ctoEncodingList ::
    [Duckling.CreditCardNumber.Types.CreditCardNumberValue]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Duckling.CreditCardNumber.Types.CreditCardNumberValue]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue_$ctoJSON
                                  x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Duckling.CreditCardNumber.Types.CreditCardNumberValue)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue_$ctoJSON
                                              v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Duckling.CreditCardNumber.Types.CreditCardNumberValue>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
4b7c9f4dbd0474c7cfe36565839736af
  $fToJSONCreditCardNumberValue_$ctoJSON ::
    Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,1*U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Duckling.CreditCardNumber.Types.CreditCardNumberValue) ->
                 case w of ww { Duckling.CreditCardNumber.Types.CreditCardNumberValue ww1 ww2 ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue8,
                            Data.Aeson.Types.Internal.$WString ww1)
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue7,
                               Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue_$ctoJSON1
                                 ww2)
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                 Data.Aeson.Types.Internal.Object dt } }) -}
7242b555aa3d28322fe91967ef549c66
  $fToJSONCreditCardNumberValue_$ctoJSON1 ::
    Duckling.CreditCardNumber.Types.Issuer
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m3, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case Duckling.CreditCardNumber.Types.$w$ctoJSON
                        w of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.String ww1 }) -}
4b7c9f4dbd0474c7cfe36565839736af
  $fToJSONCreditCardNumberValue_$ctoJSONList ::
    [Duckling.CreditCardNumber.Types.CreditCardNumberValue]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Duckling.CreditCardNumber.Types.CreditCardNumberValue]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Duckling.CreditCardNumber.Types.CreditCardNumberValue
                                       c
                                       Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
7242b555aa3d28322fe91967ef549c66
  $fToJSONIssuer ::
    Data.Aeson.Types.ToJSON.ToJSON
      Duckling.CreditCardNumber.Types.Issuer
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.CreditCardNumber.Types.Issuer
                  Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue_$ctoJSON1
                  Duckling.CreditCardNumber.Types.$fToJSONIssuer_$ctoEncoding
                  Duckling.CreditCardNumber.Types.$fToJSONIssuer_$ctoJSONList
                  Duckling.CreditCardNumber.Types.$fToJSONIssuer_$ctoEncodingList -}
7242b555aa3d28322fe91967ef549c66
  $fToJSONIssuer_$ctoEncoding ::
    Duckling.CreditCardNumber.Types.Issuer
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Duckling.CreditCardNumber.Types.Issuer) ->
                 Data.Aeson.Encoding.Internal.value
                   (Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue_$ctoJSON1
                      eta)) -}
7242b555aa3d28322fe91967ef549c66
  $fToJSONIssuer_$ctoEncodingList ::
    [Duckling.CreditCardNumber.Types.Issuer]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Duckling.CreditCardNumber.Types.Issuer]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue_$ctoJSON1
                                  x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Duckling.CreditCardNumber.Types.Issuer
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Duckling.CreditCardNumber.Types.Issuer)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue_$ctoJSON1
                                              v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Duckling.CreditCardNumber.Types.Issuer>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
7242b555aa3d28322fe91967ef549c66
  $fToJSONIssuer_$ctoJSONList ::
    [Duckling.CreditCardNumber.Types.Issuer]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Duckling.CreditCardNumber.Types.Issuer]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Duckling.CreditCardNumber.Types.Issuer
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Duckling.CreditCardNumber.Types.Issuer
                                       c
                                       Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue_$ctoJSON1)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
be8c3e5517fd7d350b03c3cde8e3b4d2
  $tc'Amex :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15942629301630470562##
                   12095370550103573663##
                   Duckling.CreditCardNumber.Types.$trModule
                   Duckling.CreditCardNumber.Types.$tc'Amex1) -}
2b95ad77bc88fc9ffa0848c661ea7a0f
  $tc'Amex1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Amex"#) -}
a90663ef24fc53078baf86552d8ca1f2
  $tc'CreditCardNumberData :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9815683003986448033##
                   6343185775468216935##
                   Duckling.CreditCardNumber.Types.$trModule
                   Duckling.CreditCardNumber.Types.$tc'CreditCardNumberData1) -}
5bbbe19264b0821917051f846ac2f1f9
  $tc'CreditCardNumberData1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CreditCardNumberData"#) -}
2495c0e29fd88bcf055ffa4e7ae20d04
  $tc'CreditCardNumberValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8629794387102367652##
                   11036543361954815856##
                   Duckling.CreditCardNumber.Types.$trModule
                   Duckling.CreditCardNumber.Types.$tc'CreditCardNumberValue1) -}
f133500f2d12a69a059992bead1dad4e
  $tc'CreditCardNumberValue1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CreditCardNumberValue"#) -}
a9f212bf1e4e5de39e51350842d772a1
  $tc'DinerClub :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13602537025568467241##
                   10916778028146558754##
                   Duckling.CreditCardNumber.Types.$trModule
                   Duckling.CreditCardNumber.Types.$tc'DinerClub1) -}
67704c96949d718aa0f9cdb22e6d167e
  $tc'DinerClub1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'DinerClub"#) -}
cbb927e2608b5b285c715892dd79b748
  $tc'Discover :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6265933934436670496##
                   3313519219301341332##
                   Duckling.CreditCardNumber.Types.$trModule
                   Duckling.CreditCardNumber.Types.$tc'Discover1) -}
eae6b6f7a3f409936bb98aefc6f26c73
  $tc'Discover1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Discover"#) -}
548777d5c95a71c9981463802a231d0a
  $tc'Mastercard :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12602230949125263448##
                   18343447186402762995##
                   Duckling.CreditCardNumber.Types.$trModule
                   Duckling.CreditCardNumber.Types.$tc'Mastercard1) -}
61d43ec111bc059c9c27057d4aacf265
  $tc'Mastercard1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Mastercard"#) -}
9f565e6c72994c801e80684652006b4a
  $tc'Other :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1582483267567846946##
                   17157818938445796507##
                   Duckling.CreditCardNumber.Types.$trModule
                   Duckling.CreditCardNumber.Types.$tc'Other1) -}
c006a0a480a4e6e46e4e39ab887a2c7f
  $tc'Other1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Other"#) -}
10dd21fb207adb2fa1a8b493f6793131
  $tc'Visa :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11581852553035850587##
                   12822298888848550850##
                   Duckling.CreditCardNumber.Types.$trModule
                   Duckling.CreditCardNumber.Types.$tc'Visa1) -}
2625d2a4a1b7f1e75dc5a51d31fa85ef
  $tc'Visa1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Visa"#) -}
edeb258a1c327bc551fc8f1f754844c4
  $tcCreditCardNumberData :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13815939415970981204##
                   15679814225809108020##
                   Duckling.CreditCardNumber.Types.$trModule
                   Duckling.CreditCardNumber.Types.$tcCreditCardNumberData1) -}
0a7b6d494d07ba7830f1f66d0f21a046
  $tcCreditCardNumberData1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "CreditCardNumberData"#) -}
06ec036f545f36535196576dc2aee301
  $tcCreditCardNumberValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   329573436264345941##
                   5392230269590805946##
                   Duckling.CreditCardNumber.Types.$trModule
                   Duckling.CreditCardNumber.Types.$tcCreditCardNumberValue1) -}
87dfab1538a7bc7816b013d739b459d6
  $tcCreditCardNumberValue1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "CreditCardNumberValue"#) -}
0b4559b06fe86817dd01edaa55d8a517
  $tcIssuer :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17574521601916882125##
                   3358811996378902736##
                   Duckling.CreditCardNumber.Types.$trModule
                   Duckling.CreditCardNumber.Types.$tcIssuer1) -}
de2c2c364f6369268e558dd9f9a491f7
  $tcIssuer1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Issuer"#) -}
5c9ac3080bf75538f8a32aa19016dd0b
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Duckling.CreditCardNumber.Types.$trModule2
                   Duckling.CreditCardNumber.Types.$trModule1) -}
242e6cbf98e4e3a4f054c15aa874da0d
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Duckling.CreditCardNumber.Types"#) -}
c360fbee3c0803941da01ca6c3ba2aa7
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"#) -}
78afa4e7778022b8adf9927a1108042d
  $w$c< ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><S,U><S,U><L,1*U><S,U><S,U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: Duckling.CreditCardNumber.Types.Issuer)
                   (ww4 :: GHC.Prim.ByteArray#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (ww7 :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case Data.Text.$w$ccompare ww ww1 ww2 ww4 ww5 ww6 of wild {
                   GHC.Types.LT -> GHC.Types.True
                   GHC.Types.EQ
                   -> Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$c<1
                        ww3
                        ww7
                   GHC.Types.GT -> GHC.Types.False }) -}
9d2d094ccbd34c30aa4bfdac13209082
  $w$c<1 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><S,U><S,U><L,1*U><S,U><S,U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: Duckling.CreditCardNumber.Types.Issuer)
                   (ww4 :: GHC.Prim.ByteArray#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (ww7 :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case Data.Text.$w$ccompare ww ww1 ww2 ww4 ww5 ww6 of wild {
                   GHC.Types.LT -> GHC.Types.True
                   GHC.Types.EQ
                   -> Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$c<1
                        ww3
                        ww7
                   GHC.Types.GT -> GHC.Types.False }) -}
c239cd6e4c588d6e9aca15a19ab262bd
  $w$c<= ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><S,U><S,U><L,1*U><S,U><S,U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: Duckling.CreditCardNumber.Types.Issuer)
                   (ww4 :: GHC.Prim.ByteArray#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (ww7 :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case Data.Text.$w$ccompare ww ww1 ww2 ww4 ww5 ww6 of wild {
                   GHC.Types.LT -> GHC.Types.True
                   GHC.Types.EQ
                   -> Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$c<=1
                        ww3
                        ww7
                   GHC.Types.GT -> GHC.Types.False }) -}
fea48b646aa2137f54aa9cec992df94f
  $w$c<=1 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><S,U><S,U><L,1*U><S,U><S,U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: Duckling.CreditCardNumber.Types.Issuer)
                   (ww4 :: GHC.Prim.ByteArray#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (ww7 :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case Data.Text.$w$ccompare ww ww1 ww2 ww4 ww5 ww6 of wild {
                   GHC.Types.LT -> GHC.Types.True
                   GHC.Types.EQ
                   -> Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$c<=1
                        ww3
                        ww7
                   GHC.Types.GT -> GHC.Types.False }) -}
c5cea6a43b5b809d467ee10d6c1fd6c8
  $w$c== ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <L,U><L,U><S,U><L,1*U><L,U><L,U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: Duckling.CreditCardNumber.Types.Issuer)
                   (ww4 :: GHC.Prim.ByteArray#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (ww7 :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww2 ww6) of wild2 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case {__pkg_ccall text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00 _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                         -> GHC.Prim.Word#
                                                                                                         -> GHC.Prim.ByteArray#
                                                                                                         -> GHC.Prim.Word#
                                                                                                         -> GHC.Prim.Word#
                                                                                                         -> GHC.Prim.State#
                                                                                                              GHC.Prim.RealWorld
                                                                                                         -> (# GHC.Prim.State#
                                                                                                                 GHC.Prim.RealWorld,
                                                                                                               GHC.Prim.Int# #)}
                             ww
                             (GHC.Prim.int2Word# ww1)
                             ww4
                             (GHC.Prim.int2Word# ww5)
                             (GHC.Prim.int2Word# ww2)
                             GHC.Prim.realWorld# of wild { (#,#) ds11 ds12 ->
                      case GHC.Prim.narrow32Int# ds12 of wild1 {
                        DEFAULT -> GHC.Types.False
                        0#
                        -> Duckling.CreditCardNumber.Types.$fEqCreditCardNumberData_$c==1
                             ww3
                             ww7 } } }) -}
bb3355684bd7ef8dd3e3431de2b69428
  $w$c==1 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <L,U><L,U><S,U><L,1*U><L,U><L,U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: Duckling.CreditCardNumber.Types.Issuer)
                   (ww4 :: GHC.Prim.ByteArray#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (ww7 :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww2 ww6) of wild2 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case {__pkg_ccall text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00 _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                         -> GHC.Prim.Word#
                                                                                                         -> GHC.Prim.ByteArray#
                                                                                                         -> GHC.Prim.Word#
                                                                                                         -> GHC.Prim.Word#
                                                                                                         -> GHC.Prim.State#
                                                                                                              GHC.Prim.RealWorld
                                                                                                         -> (# GHC.Prim.State#
                                                                                                                 GHC.Prim.RealWorld,
                                                                                                               GHC.Prim.Int# #)}
                             ww
                             (GHC.Prim.int2Word# ww1)
                             ww4
                             (GHC.Prim.int2Word# ww5)
                             (GHC.Prim.int2Word# ww2)
                             GHC.Prim.realWorld# of wild { (#,#) ds11 ds12 ->
                      case GHC.Prim.narrow32Int# ds12 of wild1 {
                        DEFAULT -> GHC.Types.False
                        0#
                        -> Duckling.CreditCardNumber.Types.$fEqCreditCardNumberData_$c==1
                             ww3
                             ww7 } } }) -}
eb8c2aff4a3b11513fdbad84c22d7aa1
  $w$c> ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><S,U><S,U><L,1*U><S,U><S,U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: Duckling.CreditCardNumber.Types.Issuer)
                   (ww4 :: GHC.Prim.ByteArray#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (ww7 :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case Data.Text.$w$ccompare ww ww1 ww2 ww4 ww5 ww6 of wild {
                   GHC.Types.LT -> GHC.Types.False
                   GHC.Types.EQ
                   -> Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$c>1
                        ww3
                        ww7
                   GHC.Types.GT -> GHC.Types.True }) -}
2d6c321285bc07c2f0f621f0b99887e1
  $w$c>1 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><S,U><S,U><L,1*U><S,U><S,U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: Duckling.CreditCardNumber.Types.Issuer)
                   (ww4 :: GHC.Prim.ByteArray#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (ww7 :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case Data.Text.$w$ccompare ww ww1 ww2 ww4 ww5 ww6 of wild {
                   GHC.Types.LT -> GHC.Types.False
                   GHC.Types.EQ
                   -> Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$c>1
                        ww3
                        ww7
                   GHC.Types.GT -> GHC.Types.True }) -}
b80d655752fa5f717766804694947b0e
  $w$c>= ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><S,U><S,U><L,1*U><S,U><S,U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: Duckling.CreditCardNumber.Types.Issuer)
                   (ww4 :: GHC.Prim.ByteArray#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (ww7 :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case Data.Text.$w$ccompare ww ww1 ww2 ww4 ww5 ww6 of wild {
                   GHC.Types.LT -> GHC.Types.False
                   GHC.Types.EQ
                   -> Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$c>=1
                        ww3
                        ww7
                   GHC.Types.GT -> GHC.Types.True }) -}
bf018397f4e6ac11f6a1fa92edd7ba10
  $w$c>=1 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><S,U><S,U><L,1*U><S,U><S,U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: Duckling.CreditCardNumber.Types.Issuer)
                   (ww4 :: GHC.Prim.ByteArray#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (ww7 :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case Data.Text.$w$ccompare ww ww1 ww2 ww4 ww5 ww6 of wild {
                   GHC.Types.LT -> GHC.Types.False
                   GHC.Types.EQ
                   -> Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$c>=1
                        ww3
                        ww7
                   GHC.Types.GT -> GHC.Types.True }) -}
703b3127b36a0074b0141067eb004a86
  $w$ccompare ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Types.Ordering
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><S,U><S,U><L,1*U><S,U><S,U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: Duckling.CreditCardNumber.Types.Issuer)
                   (ww4 :: GHC.Prim.ByteArray#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (ww7 :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case Data.Text.$w$ccompare ww ww1 ww2 ww4 ww5 ww6 of wild {
                   GHC.Types.LT -> GHC.Types.LT
                   GHC.Types.EQ
                   -> Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$ccompare1
                        ww3
                        ww7
                   GHC.Types.GT -> GHC.Types.GT }) -}
6d7534928dd9d8302899ad9daf1e8d4e
  $w$ccompare1 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Types.Ordering
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><S,U><S,U><L,1*U><S,U><S,U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: Duckling.CreditCardNumber.Types.Issuer)
                   (ww4 :: GHC.Prim.ByteArray#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (ww7 :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case Data.Text.$w$ccompare ww ww1 ww2 ww4 ww5 ww6 of wild {
                   GHC.Types.LT -> GHC.Types.LT
                   GHC.Types.EQ
                   -> Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData_$ccompare1
                        ww3
                        ww7
                   GHC.Types.GT -> GHC.Types.GT }) -}
518b9d8e103415cdbded6d52aaf6f8b0
  $w$chashWithSalt ::
    GHC.Prim.Int#
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Prim.Int#
  {- Arity: 5, HasNoCafRefs, Strictness: <S,U><S,U><S,U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.ByteArray#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case {__pkg_ccall hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol hashable_fnv_hash_offset GHC.Prim.ByteArray#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.State#
                                                                                                                          GHC.Prim.RealWorld
                                                                                                                     -> (# GHC.Prim.State#
                                                                                                                             GHC.Prim.RealWorld,
                                                                                                                           GHC.Prim.Int# #)}
                        ww1
                        (GHC.Prim.uncheckedIShiftL# ww2 1#)
                        (GHC.Prim.uncheckedIShiftL# ww3 1#)
                        ww
                        GHC.Prim.realWorld# of wild1 { (#,#) ds1 ds2 ->
                 case ww4 of wild {
                   Duckling.CreditCardNumber.Types.Visa
                   -> GHC.Prim.*# (GHC.Prim.*# ds2 16777619#) 16777619#
                   Duckling.CreditCardNumber.Types.Amex
                   -> GHC.Prim.*#
                        (GHC.Prim.xorI# (GHC.Prim.*# ds2 16777619#) 1#)
                        16777619#
                   Duckling.CreditCardNumber.Types.Discover
                   -> GHC.Prim.*#
                        (GHC.Prim.xorI# (GHC.Prim.*# ds2 16777619#) 2#)
                        16777619#
                   Duckling.CreditCardNumber.Types.Mastercard
                   -> GHC.Prim.*#
                        (GHC.Prim.xorI# (GHC.Prim.*# ds2 16777619#) 3#)
                        16777619#
                   Duckling.CreditCardNumber.Types.DinerClub
                   -> GHC.Prim.*#
                        (GHC.Prim.xorI# (GHC.Prim.*# ds2 16777619#) 4#)
                        16777619#
                   Duckling.CreditCardNumber.Types.Other
                   -> GHC.Prim.*#
                        (GHC.Prim.xorI# (GHC.Prim.*# ds2 16777619#) 5#)
                        16777619# } }) -}
7242b555aa3d28322fe91967ef549c66
  $w$cshowsPrec ::
    Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Duckling.CreditCardNumber.Types.Issuer)
                   (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Duckling.CreditCardNumber.Types.Visa
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue6
                        w1
                   Duckling.CreditCardNumber.Types.Amex
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue5
                        w1
                   Duckling.CreditCardNumber.Types.Discover
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue4
                        w1
                   Duckling.CreditCardNumber.Types.Mastercard
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue3
                        w1
                   Duckling.CreditCardNumber.Types.DinerClub
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue2
                        w1
                   Duckling.CreditCardNumber.Types.Other
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue1
                        w1 }) -}
b4401155ff79075e1e41a29598d9e2e0
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Data.Text.Internal.Text
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U(U,U,U)><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Data.Text.Internal.Text)
                   (ww2 :: Duckling.CreditCardNumber.Types.Issuer)
                   (w :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Duckling.CreditCardNumber.Types.$fShowCreditCardNumberValue6
                       (case Data.Text.Show.$w$cshowsPrec
                               ww1
                               (GHC.Base.++
                                  @ GHC.Types.Char
                                  Duckling.CreditCardNumber.Types.$fShowCreditCardNumberValue5
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     Duckling.CreditCardNumber.Types.$fShowCreditCardNumberValue4
                                     (Duckling.CreditCardNumber.Types.$w$cshowsPrec
                                        ww2
                                        (GHC.Base.++
                                           @ GHC.Types.Char
                                           Duckling.CreditCardNumber.Types.$fShowCreditCardNumberValue3
                                           x)))) of ww3 { (#,#) ww4 ww5 ->
                        GHC.Types.: @ GHC.Types.Char ww4 ww5 })
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.CreditCardNumber.Types.$fShowCreditCardNumberValue2
                        (g w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Duckling.CreditCardNumber.Types.$fShowCreditCardNumberValue2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w))) }) -}
430a2d9600c1042f74d423249f314141
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> Data.Text.Internal.Text
    -> Duckling.CreditCardNumber.Types.Issuer
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U(U,U,U)><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Data.Text.Internal.Text)
                   (ww2 :: Duckling.CreditCardNumber.Types.Issuer)
                   (w :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Duckling.CreditCardNumber.Types.$fShowCreditCardNumberData4
                       (case Data.Text.Show.$w$cshowsPrec
                               ww1
                               (GHC.Base.++
                                  @ GHC.Types.Char
                                  Duckling.CreditCardNumber.Types.$fShowCreditCardNumberValue5
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     Duckling.CreditCardNumber.Types.$fShowCreditCardNumberData3
                                     (Duckling.CreditCardNumber.Types.$w$cshowsPrec
                                        ww2
                                        (GHC.Base.++
                                           @ GHC.Types.Char
                                           Duckling.CreditCardNumber.Types.$fShowCreditCardNumberValue3
                                           x)))) of ww3 { (#,#) ww4 ww5 ->
                        GHC.Types.: @ GHC.Types.Char ww4 ww5 })
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.CreditCardNumber.Types.$fShowCreditCardNumberData2
                        (g w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Duckling.CreditCardNumber.Types.$fShowCreditCardNumberData2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w))) }) -}
7242b555aa3d28322fe91967ef549c66
  $w$ctoJSON ::
    Duckling.CreditCardNumber.Types.Issuer
    -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Duckling.CreditCardNumber.Types.Issuer) ->
                 case Duckling.CreditCardNumber.Types.$w$cshowsPrec
                        w
                        (GHC.Types.[] @ GHC.Types.Char) of dt { DEFAULT ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                10#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         Duckling.CreditCardNumber.Types.$wouter
                           ipv1
                           4#
                           dt
                           '\NUL'#
                           '\NUL'#
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt1 #) } } }) -}
4c45c43d1cf8548dd5c857d1d7bdbfa4
  $wouter ::
    GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> [GHC.Types.Char]
    -> GHC.Prim.Char#
    -> GHC.Prim.Char#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 7, Strictness: <L,U><L,U><S,U><S,U><L,U><L,U><S,U>,
     Inline: [0] -}
eb0ba1e8838524b66ff805106380d8cb
  data CreditCardNumberData
    = CreditCardNumberData {number :: Data.Text.Internal.Text,
                            issuer :: Duckling.CreditCardNumber.Types.Issuer}
4b7c9f4dbd0474c7cfe36565839736af
  data CreditCardNumberValue
    = CreditCardNumberValue {vNumber :: Data.Text.Internal.Text,
                             vIssuer :: Duckling.CreditCardNumber.Types.Issuer}
eb0ba1e8838524b66ff805106380d8cb
  axiom D:R:ResolvedValueCreditCardNumberData::
      Duckling.Resolve.ResolvedValue
        Duckling.CreditCardNumber.Types.CreditCardNumberData
        = Duckling.CreditCardNumber.Types.CreditCardNumberValue
7242b555aa3d28322fe91967ef549c66
  data Issuer
    = Visa | Amex | Discover | Mastercard | DinerClub | Other
eb0ba1e8838524b66ff805106380d8cb
  axiom Rep_CreditCardNumberData::
      GHC.Generics.Rep
        Duckling.CreditCardNumber.Types.CreditCardNumberData
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "CreditCardNumberData"
               "Duckling.CreditCardNumber.Types"
               "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "CreditCardNumberData" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "number")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 Data.Text.Internal.Text)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "issuer")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Duckling.CreditCardNumber.Types.Issuer)))
7242b555aa3d28322fe91967ef549c66
  axiom Rep_Issuer::
      GHC.Generics.Rep Duckling.CreditCardNumber.Types.Issuer
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Issuer"
               "Duckling.CreditCardNumber.Types"
               "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
               'GHC.Types.False)
            ((GHC.Generics.C1
                ('GHC.Generics.MetaCons
                   "Visa" 'GHC.Generics.PrefixI 'GHC.Types.False)
                GHC.Generics.U1
              GHC.Generics.:+: (GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "Amex" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "Discover"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1))
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Mastercard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "DinerClub"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.C1
                                                                    ('GHC.Generics.MetaCons
                                                                       "Other"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)))
1791c274d82853bd2a73b0a67d8031de
  issuer ::
    Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> Duckling.CreditCardNumber.Types.Issuer
  RecSel Left Duckling.CreditCardNumber.Types.CreditCardNumberData
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Duckling.CreditCardNumber.Types.CreditCardNumberData) ->
                 case ds of wild { Duckling.CreditCardNumber.Types.CreditCardNumberData ds1 ds2 ->
                 ds2 }) -}
939cbf5e3477b36e12e98b9746fb7d36
  number ::
    Duckling.CreditCardNumber.Types.CreditCardNumberData
    -> Data.Text.Internal.Text
  RecSel Left Duckling.CreditCardNumber.Types.CreditCardNumberData
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Duckling.CreditCardNumber.Types.CreditCardNumberData) ->
                 case ds of wild { Duckling.CreditCardNumber.Types.CreditCardNumberData ds1 ds2 ->
                 ds1 }) -}
bb410bdb437e42cf07e7a4aa4aed4d81
  vIssuer ::
    Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> Duckling.CreditCardNumber.Types.Issuer
  RecSel Left Duckling.CreditCardNumber.Types.CreditCardNumberValue
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Duckling.CreditCardNumber.Types.CreditCardNumberValue) ->
                 case ds of wild { Duckling.CreditCardNumber.Types.CreditCardNumberValue ds1 ds2 ->
                 ds2 }) -}
1d3a7e90ecfd80562ec6997f744f201c
  vNumber ::
    Duckling.CreditCardNumber.Types.CreditCardNumberValue
    -> Data.Text.Internal.Text
  RecSel Left Duckling.CreditCardNumber.Types.CreditCardNumberValue
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Duckling.CreditCardNumber.Types.CreditCardNumberValue) ->
                 case ds of wild { Duckling.CreditCardNumber.Types.CreditCardNumberValue ds1 ds2 ->
                 ds1 }) -}
instance GHC.Classes.Eq [Duckling.CreditCardNumber.Types.CreditCardNumberData]
  = Duckling.CreditCardNumber.Types.$fEqCreditCardNumberData
instance GHC.Classes.Eq [Duckling.CreditCardNumber.Types.CreditCardNumberValue]
  = Duckling.CreditCardNumber.Types.$fEqCreditCardNumberValue
instance GHC.Classes.Eq [Duckling.CreditCardNumber.Types.Issuer]
  = Duckling.CreditCardNumber.Types.$fEqIssuer
instance GHC.Generics.Generic [Duckling.CreditCardNumber.Types.CreditCardNumberData]
  = Duckling.CreditCardNumber.Types.$fGenericCreditCardNumberData
instance GHC.Generics.Generic [Duckling.CreditCardNumber.Types.Issuer]
  = Duckling.CreditCardNumber.Types.$fGenericIssuer
instance Data.Hashable.Class.Hashable [Duckling.CreditCardNumber.Types.CreditCardNumberData]
  = Duckling.CreditCardNumber.Types.$fHashableCreditCardNumberData
instance Data.Hashable.Class.Hashable [Duckling.CreditCardNumber.Types.Issuer]
  = Duckling.CreditCardNumber.Types.$fHashableIssuer
instance Control.DeepSeq.NFData [Duckling.CreditCardNumber.Types.CreditCardNumberData]
  = Duckling.CreditCardNumber.Types.$fNFDataCreditCardNumberData
instance Control.DeepSeq.NFData [Duckling.CreditCardNumber.Types.Issuer]
  = Duckling.CreditCardNumber.Types.$fNFDataIssuer
instance GHC.Classes.Ord [Duckling.CreditCardNumber.Types.CreditCardNumberData]
  = Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberData
instance GHC.Classes.Ord [Duckling.CreditCardNumber.Types.CreditCardNumberValue]
  = Duckling.CreditCardNumber.Types.$fOrdCreditCardNumberValue
instance GHC.Classes.Ord [Duckling.CreditCardNumber.Types.Issuer]
  = Duckling.CreditCardNumber.Types.$fOrdIssuer
instance Duckling.Resolve.Resolve [Duckling.CreditCardNumber.Types.CreditCardNumberData]
  = Duckling.CreditCardNumber.Types.$fResolveCreditCardNumberData
instance GHC.Show.Show [Duckling.CreditCardNumber.Types.CreditCardNumberData]
  = Duckling.CreditCardNumber.Types.$fShowCreditCardNumberData
instance GHC.Show.Show [Duckling.CreditCardNumber.Types.CreditCardNumberValue]
  = Duckling.CreditCardNumber.Types.$fShowCreditCardNumberValue
instance GHC.Show.Show [Duckling.CreditCardNumber.Types.Issuer]
  = Duckling.CreditCardNumber.Types.$fShowIssuer
instance Data.Aeson.Types.ToJSON.ToJSON [Duckling.CreditCardNumber.Types.CreditCardNumberValue]
  = Duckling.CreditCardNumber.Types.$fToJSONCreditCardNumberValue
instance Data.Aeson.Types.ToJSON.ToJSON [Duckling.CreditCardNumber.Types.Issuer]
  = Duckling.CreditCardNumber.Types.$fToJSONIssuer
family instance GHC.Generics.Rep [Duckling.CreditCardNumber.Types.CreditCardNumberData]
  = Duckling.CreditCardNumber.Types.Rep_CreditCardNumberData
family instance GHC.Generics.Rep [Duckling.CreditCardNumber.Types.Issuer]
  = Duckling.CreditCardNumber.Types.Rep_Issuer
family instance Duckling.Resolve.ResolvedValue [Duckling.CreditCardNumber.Types.CreditCardNumberData]
  = Duckling.CreditCardNumber.Types.D:R:ResolvedValueCreditCardNumberData
"SPEC/Duckling.CreditCardNumber.Types $dmrnf @ Issuer" [ALWAYS] forall ($dGNFData :: Control.DeepSeq.GNFData
                                                                                       (GHC.Generics.Rep
                                                                                          Duckling.CreditCardNumber.Types.Issuer))
                                                                       ($dGeneric :: GHC.Generics.Generic
                                                                                       Duckling.CreditCardNumber.Types.Issuer)
                                                                       ($dNFData :: Control.DeepSeq.NFData
                                                                                      Duckling.CreditCardNumber.Types.Issuer)
  Control.DeepSeq.$dmrnf @ Duckling.CreditCardNumber.Types.Issuer
                         $dNFData
                         $dGeneric
                         $dGNFData
  = Duckling.CreditCardNumber.Types.$fNFDataCreditCardNumberData_$s$dmrnf
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

