
==================== FINAL INTERFACE ====================
2019-03-14 03:00:17.738936 UTC

interface duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Quantity.Types [family instance module] 8002
  interface hash: d6c6102fffca0ed99a4145be66af37ac
  ABI hash: a54e787246c8f7674ea30ca428b1f9c0
  export-list hash: 6769709567c3fb43c23de2aeddb3e791
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 84c21971dd7bf8f250b8c00d8b7b6860
  sig of: Nothing
  used TH splices: False
  where
exports:
  Duckling.Quantity.Types.above
  Duckling.Quantity.Types.between
  Duckling.Quantity.Types.openInterval
  Duckling.Quantity.Types.simple
  Duckling.Quantity.Types.single
  Duckling.Quantity.Types.under
  Duckling.Quantity.Types.IntervalDirection{Duckling.Quantity.Types.Above Duckling.Quantity.Types.Under}
  Duckling.Quantity.Types.QuantityData{Duckling.Quantity.Types.QuantityData aproduct maxValue minValue unit value}
  Duckling.Quantity.Types.QuantityValue{Duckling.Quantity.Types.IntervalValue Duckling.Quantity.Types.OpenIntervalValue Duckling.Quantity.Types.SimpleValue}
  Duckling.Quantity.Types.SingleValue{Duckling.Quantity.Types.SingleValue vProduct vUnit vValue}
  Duckling.Quantity.Types.Unit{Duckling.Quantity.Types.Bowl Duckling.Quantity.Types.Cup Duckling.Quantity.Types.Custom Duckling.Quantity.Types.Dish Duckling.Quantity.Types.Gram Duckling.Quantity.Types.Ounce Duckling.Quantity.Types.Pint Duckling.Quantity.Types.Pound Duckling.Quantity.Types.Quart Duckling.Quantity.Types.Tablespoon Duckling.Quantity.Types.Teaspoon Duckling.Quantity.Types.Unnamed}
module dependencies: Duckling.Locale Duckling.Region
                     Duckling.Resolve
package dependencies: aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      generic-deriving-1.11.2@generic-deriving-1.11.2-FTRmVS5RM6G7R2MgyiZHgW
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI
                      th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      timezone-series-0.1.8@timezone-series-0.1.8-4K4l0A0wjZPUt7r2oV8PT
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Applicative
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Concurrent
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Exception
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Monad.ST
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Array
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Bool
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.ByteString
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Char
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Complex
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Data
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Dynamic
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Either
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Fixed
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Floating
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Compose
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Identity
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Product
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Sum
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Integral
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.List
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.List.NonEmpty
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Maybe
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Monoid
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Ord
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Proxy
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Ratio
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Semigroup
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Text
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Tuple
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Type.Coercion
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Type.Equality
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Typeable
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Version
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Void
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Foreign.C.Types
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Foreign.Ptr
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Event
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Fingerprint
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Generics
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.RTS.Flags
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Stack
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.StaticPtr
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Stats
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.TypeLits
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Numeric.Natural
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.System.Exit
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.System.IO
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.System.Posix.Types
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Text.Read
         th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI:Language.Haskell.TH.Lift
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Locale
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Region
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.FromStringTextShow
                         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Options
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k:Data.Aeson 1af00541e969ad203c27ee12864de00d
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k:Data.Aeson.Types.Internal 4c7adfaf9946e7eb59b1a47b47e68246
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k:Data.Aeson.Types.ToJSON d6ae344f2a743c9940980d0869569ad4
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Generics 1dbec2bc7dd1c5bd8c89ed857eaed19b
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  deepseq-1.4.2.0@deepseq-1.4.2.0:Control.DeepSeq 0a99763cf6016b16bbf55422778a79b2
import  -/  Duckling.Resolve 15ce2eadafd5cc42f057e1d0f9191938
  exports: 6e20ad884e276a7b8b73219b25eea656
  Resolve 857149e63f1fbb61ae9c206e0802b0fa
  ResolvedValue d3c9ab28ab95ed33280b467fbe72cd58
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable 0e86f32bd46d4c618b1e312455011c77
import  -/  hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Class bc4f00f60e55accb5753c8e0ce3cde5f
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text f7d3d648ffeef1043fe2e522e7e66c1b
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Internal 9bfcbbbe07ecef48f631025a838df7da
import  -/  unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base 05331f9dbdce4e8225c18ce1a8ba2f88
import  -/  unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Strict 74fd7b14a4a2f9eaf95c7dc9a18e61b1
8eb2fb9057740ab13264d610f0e647d3
  $fEqIntervalDirection ::
    GHC.Classes.Eq Duckling.Quantity.Types.IntervalDirection
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.IntervalDirection
                  Duckling.Quantity.Types.$fEqIntervalDirection_$c==
                  Duckling.Quantity.Types.$fEqIntervalDirection_$c/= -}
8eb2fb9057740ab13264d610f0e647d3
  $fEqIntervalDirection_$c/= ::
    Duckling.Quantity.Types.IntervalDirection
    -> Duckling.Quantity.Types.IntervalDirection -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.Quantity.Types.IntervalDirection)
                   (b :: Duckling.Quantity.Types.IntervalDirection) ->
                 case a of wild {
                   Duckling.Quantity.Types.Above
                   -> case b of wild1 {
                        Duckling.Quantity.Types.Above -> GHC.Types.False
                        Duckling.Quantity.Types.Under -> GHC.Types.True }
                   Duckling.Quantity.Types.Under
                   -> case b of wild1 {
                        Duckling.Quantity.Types.Above -> GHC.Types.True
                        Duckling.Quantity.Types.Under -> GHC.Types.False } }) -}
8eb2fb9057740ab13264d610f0e647d3
  $fEqIntervalDirection_$c== ::
    Duckling.Quantity.Types.IntervalDirection
    -> Duckling.Quantity.Types.IntervalDirection -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Duckling.Quantity.Types.IntervalDirection)
                   (ds1 :: Duckling.Quantity.Types.IntervalDirection) ->
                 case ds of wild {
                   Duckling.Quantity.Types.Above
                   -> case ds1 of wild1 {
                        Duckling.Quantity.Types.Above -> GHC.Types.True
                        Duckling.Quantity.Types.Under -> GHC.Types.False }
                   Duckling.Quantity.Types.Under
                   -> case ds1 of wild1 {
                        Duckling.Quantity.Types.Above -> GHC.Types.False
                        Duckling.Quantity.Types.Under -> GHC.Types.True } }) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fEqQuantityData ::
    GHC.Classes.Eq Duckling.Quantity.Types.QuantityData
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.QuantityData
                  Duckling.Quantity.Types.$fEqQuantityData_$c==
                  Duckling.Quantity.Types.$fEqQuantityData_$c/= -}
be6bba9b7c724f13379a9669ac27fcf8
  $fEqQuantityData_$c/= ::
    Duckling.Quantity.Types.QuantityData
    -> Duckling.Quantity.Types.QuantityData -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.Quantity.Types.QuantityData)
                   (b :: Duckling.Quantity.Types.QuantityData) ->
                 case Duckling.Quantity.Types.$fEqQuantityData_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fEqQuantityData_$c== ::
    Duckling.Quantity.Types.QuantityData
    -> Duckling.Quantity.Types.QuantityData -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Quantity.Types.QuantityData)
                   (w1 :: Duckling.Quantity.Types.QuantityData) ->
                 case w of ww { Duckling.Quantity.Types.QuantityData ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Duckling.Quantity.Types.QuantityData ww7 ww8 ww9 ww10 ww11 ->
                 Duckling.Quantity.Types.$w$c==
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11 } }) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fEqQuantityValue ::
    GHC.Classes.Eq Duckling.Quantity.Types.QuantityValue
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.QuantityValue
                  Duckling.Quantity.Types.$fEqQuantityValue_$c==
                  Duckling.Quantity.Types.$fEqQuantityValue_$c/= -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fEqQuantityValue_$c/= ::
    Duckling.Quantity.Types.QuantityValue
    -> Duckling.Quantity.Types.QuantityValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.Quantity.Types.QuantityValue)
                   (b :: Duckling.Quantity.Types.QuantityValue) ->
                 case Duckling.Quantity.Types.$fEqQuantityValue_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fEqQuantityValue_$c== ::
    Duckling.Quantity.Types.QuantityValue
    -> Duckling.Quantity.Types.QuantityValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Duckling.Quantity.Types.QuantityValue)
                   (ds1 :: Duckling.Quantity.Types.QuantityValue) ->
                 case ds of wild {
                   Duckling.Quantity.Types.SimpleValue a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Quantity.Types.SimpleValue b1
                        -> Duckling.Quantity.Types.$fEqQuantityValue_$c==1 a1 b1 }
                   Duckling.Quantity.Types.IntervalValue a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Quantity.Types.IntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Quantity.Types.SingleValue ww8 ww9 ww10 ->
                           case ww4 of ww11 { Duckling.Quantity.Types.SingleValue ww12 ww13 ww14 ->
                           case Duckling.Quantity.Types.$w$c==1
                                  ww8
                                  ww9
                                  ww10
                                  ww12
                                  ww13
                                  ww14 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> Duckling.Quantity.Types.$fEqQuantityValue_$c==1
                                  ww2
                                  ww5 } } } } } }
                   Duckling.Quantity.Types.OpenIntervalValue a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Quantity.Types.OpenIntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Quantity.Types.SingleValue ww8 ww9 ww10 ->
                           case ww4 of ww11 { Duckling.Quantity.Types.SingleValue ww12 ww13 ww14 ->
                           case Duckling.Quantity.Types.$w$c==1
                                  ww8
                                  ww9
                                  ww10
                                  ww12
                                  ww13
                                  ww14 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> Duckling.Quantity.Types.$fEqIntervalDirection_$c==
                                  ww2
                                  ww5 } } } } } } }) -}
e64b9042dac36283e0d466a7b36615e2
  $fEqQuantityValue_$c==1 ::
    Duckling.Quantity.Types.SingleValue
    -> Duckling.Quantity.Types.SingleValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(U),1*U)><S(SLL),1*U(1*U,1*U(U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Quantity.Types.SingleValue)
                   (w1 :: Duckling.Quantity.Types.SingleValue) ->
                 case w of ww { Duckling.Quantity.Types.SingleValue ww1 ww2 ww3 ->
                 case w1 of ww4 { Duckling.Quantity.Types.SingleValue ww5 ww6 ww7 ->
                 Duckling.Quantity.Types.$w$c==1 ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
e64b9042dac36283e0d466a7b36615e2
  $fEqSingleValue ::
    GHC.Classes.Eq Duckling.Quantity.Types.SingleValue
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.SingleValue
                  Duckling.Quantity.Types.$fEqQuantityValue_$c==1
                  Duckling.Quantity.Types.$fEqSingleValue_$c/= -}
e64b9042dac36283e0d466a7b36615e2
  $fEqSingleValue_$c/= ::
    Duckling.Quantity.Types.SingleValue
    -> Duckling.Quantity.Types.SingleValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(U),1*U)><S(SLL),1*U(1*U,1*U(U),1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.Quantity.Types.SingleValue)
                   (b :: Duckling.Quantity.Types.SingleValue) ->
                 case Duckling.Quantity.Types.$fEqQuantityValue_$c==1 a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
cc507958932a6d40d35b817e57a382bb
  $fEqUnit :: GHC.Classes.Eq Duckling.Quantity.Types.Unit
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.Unit
                  Duckling.Quantity.Types.$fEqUnit_$c==
                  Duckling.Quantity.Types.$fEqUnit_$c/= -}
cc507958932a6d40d35b817e57a382bb
  $fEqUnit_$c/= ::
    Duckling.Quantity.Types.Unit
    -> Duckling.Quantity.Types.Unit -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.Quantity.Types.Unit)
                   (b :: Duckling.Quantity.Types.Unit) ->
                 case a of wild {
                   DEFAULT
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==#
                                (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit wild)
                                (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit b)) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False }
                   Duckling.Quantity.Types.Custom a1
                   -> case b of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag#
                                  @ Duckling.Quantity.Types.Unit
                                  wild1 of wild2 {
                             DEFAULT -> GHC.Types.True 2# -> GHC.Types.False }
                        Duckling.Quantity.Types.Custom b1
                        -> case a1 of wild2 { Data.Text.Internal.Text dt dt1 dt2 ->
                           case b1 of wild3 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# dt2 dt5) of wild4 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True
                             -> case {__pkg_ccall text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00 _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                                   -> GHC.Prim.Word#
                                                                                                                   -> GHC.Prim.ByteArray#
                                                                                                                   -> GHC.Prim.Word#
                                                                                                                   -> GHC.Prim.Word#
                                                                                                                   -> GHC.Prim.State#
                                                                                                                        GHC.Prim.RealWorld
                                                                                                                   -> (# GHC.Prim.State#
                                                                                                                           GHC.Prim.RealWorld,
                                                                                                                         GHC.Prim.Int# #)}
                                       dt
                                       (GHC.Prim.int2Word# dt1)
                                       dt3
                                       (GHC.Prim.int2Word# dt4)
                                       (GHC.Prim.int2Word# dt2)
                                       GHC.Prim.realWorld# of wild5 { (#,#) ds11 ds12 ->
                                case GHC.Prim.narrow32Int# ds12 of wild6 {
                                  DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } } } } } } }) -}
cc507958932a6d40d35b817e57a382bb
  $fEqUnit_$c== ::
    Duckling.Quantity.Types.Unit
    -> Duckling.Quantity.Types.Unit -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Duckling.Quantity.Types.Unit)
                   (ds1 :: Duckling.Quantity.Types.Unit) ->
                 case ds of wild {
                   DEFAULT
                   -> GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==#
                           (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit wild)
                           (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit ds1))
                   Duckling.Quantity.Types.Custom a1
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag#
                                  @ Duckling.Quantity.Types.Unit
                                  wild1 of wild2 {
                             DEFAULT -> GHC.Types.False 2# -> GHC.Types.True }
                        Duckling.Quantity.Types.Custom b1
                        -> Data.Text.$fEqText_$c== a1 b1 } }) -}
8eb2fb9057740ab13264d610f0e647d3
  $fGenericIntervalDirection ::
    GHC.Generics.Generic Duckling.Quantity.Types.IntervalDirection
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.IntervalDirection
                  Duckling.Quantity.Types.$fGenericIntervalDirection_$cfrom
                  Duckling.Quantity.Types.$fGenericIntervalDirection_$cto -}
8eb2fb9057740ab13264d610f0e647d3
  $fGenericIntervalDirection1 ::
    Duckling.Quantity.Types.IntervalDirection
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Duckling.Quantity.Types.IntervalDirection) ->
                 case x1 of wild {
                   Duckling.Quantity.Types.Above
                   -> Duckling.Quantity.Types.$fGenericIntervalDirection3 @ x
                   Duckling.Quantity.Types.Under
                   -> Duckling.Quantity.Types.$fGenericIntervalDirection2 @ x }) -}
8d21b432c65eabdcc96e8470ec66eac9
  $fGenericIntervalDirection2 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Under" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
f5b5f2d175a2a94e248e771a5fc74311
  $fGenericIntervalDirection3 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Above" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
8eb2fb9057740ab13264d610f0e647d3
  $fGenericIntervalDirection_$cfrom ::
    Duckling.Quantity.Types.IntervalDirection
    -> GHC.Generics.Rep Duckling.Quantity.Types.IntervalDirection x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Duckling.Quantity.Types.$fGenericIntervalDirection1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Duckling.Quantity.Types.IntervalDirection>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "IntervalDirection"
                                       "Duckling.Quantity.Types"
                                       "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                       GHC.Generics.U1
                                     GHC.Generics.:+: GHC.Generics.M1
                                                        GHC.Generics.C
                                                        ('GHC.Generics.MetaCons
                                                           "Under"
                                                           'GHC.Generics.PrefixI
                                                           'GHC.Types.False)
                                                        GHC.Generics.U1>_R))
                          (Sub (Sym (Duckling.Quantity.Types.Rep_IntervalDirection[0]))) <x>_N) -}
8eb2fb9057740ab13264d610f0e647d3
  $fGenericIntervalDirection_$cto ::
    GHC.Generics.Rep Duckling.Quantity.Types.IntervalDirection x
    -> Duckling.Quantity.Types.IntervalDirection
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x
                   (ds :: GHC.Generics.Rep
                            Duckling.Quantity.Types.IntervalDirection x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Duckling.Quantity.Types.Rep_IntervalDirection[0]))
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.D>_P
                                <'GHC.Generics.MetaData
                                   "IntervalDirection"
                                   "Duckling.Quantity.Types"
                                   "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                   'GHC.Types.False>_P
                                <GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.M1
                                                    GHC.Generics.C
                                                    ('GHC.Generics.MetaCons
                                                       "Under"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1>_R) <x>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1 of tpl { DEFAULT -> Duckling.Quantity.Types.Above }
                   GHC.Generics.R1 ds1
                   -> case ds1 of tpl { DEFAULT ->
                      Duckling.Quantity.Types.Under } }) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fGenericQuantityData ::
    GHC.Generics.Generic Duckling.Quantity.Types.QuantityData
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.QuantityData
                  Duckling.Quantity.Types.$fGenericQuantityData_$cfrom
                  Duckling.Quantity.Types.$fGenericQuantityData_$cto -}
be6bba9b7c724f13379a9669ac27fcf8
  $fGenericQuantityData1 ::
    Duckling.Quantity.Types.QuantityData
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "QuantityData" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "unit")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1
                GHC.Generics.R (GHC.Base.Maybe Duckling.Quantity.Types.Unit))
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "value")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "aproduct")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R (GHC.Base.Maybe Data.Text.Internal.Text))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "minValue")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double))
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "maxValue")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    (GHC.Base.Maybe
                                                                       GHC.Types.Double)))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Duckling.Quantity.Types.QuantityData) ->
                 case x1 of wild { Duckling.Quantity.Types.QuantityData g1 g2 g3 g4 g5 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "unit")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1
                            GHC.Generics.R (GHC.Base.Maybe Duckling.Quantity.Types.Unit))
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "value")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "aproduct")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1
                            GHC.Generics.R (GHC.Base.Maybe Data.Text.Internal.Text))
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "minValue")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double))
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "maxValue")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               (GHC.Base.Maybe GHC.Types.Double))))
                    @ x
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "unit")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R (GHC.Base.Maybe Duckling.Quantity.Types.Unit)))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "value")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
                       @ x
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P
                                      <GHC.Base.Maybe Duckling.Quantity.Types.Unit>_R
                                      <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "unit")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R
                                         (GHC.Base.Maybe Duckling.Quantity.Types.Unit)>_R) <x>_N))
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.Maybe GHC.Types.Double>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "value")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R
                                         (GHC.Base.Maybe GHC.Types.Double)>_R) <x>_N)))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "aproduct")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R (GHC.Base.Maybe Data.Text.Internal.Text)))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "minValue")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double))
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "maxValue")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
                       @ x
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P
                                      <GHC.Base.Maybe Data.Text.Internal.Text>_R
                                      <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "aproduct")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R
                                         (GHC.Base.Maybe Data.Text.Internal.Text)>_R) <x>_N))
                       (GHC.Generics.:*:
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "minValue")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "maxValue")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
                          @ x
                          g4
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P
                                         <GHC.Base.Maybe GHC.Types.Double>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "minValue")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R
                                            (GHC.Base.Maybe GHC.Types.Double)>_R) <x>_N))
                          g5
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P
                                         <GHC.Base.Maybe GHC.Types.Double>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "maxValue")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R
                                            (GHC.Base.Maybe GHC.Types.Double)>_R) <x>_N)))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "QuantityData" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "unit")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R (GHC.Base.Maybe Duckling.Quantity.Types.Unit))
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "value")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   (GHC.Base.Maybe GHC.Types.Double)))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "aproduct")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   (GHC.Base.Maybe Data.Text.Internal.Text))
                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "minValue")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     (GHC.Base.Maybe
                                                                        GHC.Types.Double))
                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                   GHC.Generics.S
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Base.Just
                                                                                         "maxValue")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy)
                                                                                   (GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      (GHC.Base.Maybe
                                                                                         GHC.Types.Double))))>_R) <x>_N) }) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fGenericQuantityData_$cfrom ::
    Duckling.Quantity.Types.QuantityData
    -> GHC.Generics.Rep Duckling.Quantity.Types.QuantityData x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Duckling.Quantity.Types.$fGenericQuantityData1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Duckling.Quantity.Types.QuantityData>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "QuantityData"
                                       "Duckling.Quantity.Types"
                                       "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "QuantityData" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       ((GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "unit")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              (GHC.Base.Maybe Duckling.Quantity.Types.Unit))
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "value")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               (GHC.Base.Maybe GHC.Types.Double)))
                                        GHC.Generics.:*: (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "aproduct")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               (GHC.Base.Maybe
                                                                  Data.Text.Internal.Text))
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "minValue")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 (GHC.Base.Maybe
                                                                                    GHC.Types.Double))
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "maxValue")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  (GHC.Base.Maybe
                                                                                                     GHC.Types.Double)))))>_R))
                          (Sub (Sym (Duckling.Quantity.Types.Rep_QuantityData[0]))) <x>_N) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fGenericQuantityData_$cto ::
    GHC.Generics.Rep Duckling.Quantity.Types.QuantityData x
    -> Duckling.Quantity.Types.QuantityData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS(LS)),1*U(1*U(U,U),1*U(U,1*U(U,U)))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x
                   (ds :: GHC.Generics.Rep Duckling.Quantity.Types.QuantityData x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Duckling.Quantity.Types.Rep_QuantityData[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "QuantityData"
                                        "Duckling.Quantity.Types"
                                        "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "QuantityData" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "unit")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R
                                               (GHC.Base.Maybe Duckling.Quantity.Types.Unit))
                                          GHC.Generics.:*: GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "value")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                (GHC.Base.Maybe GHC.Types.Double)))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "aproduct")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                (GHC.Base.Maybe
                                                                   Data.Text.Internal.Text))
                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "minValue")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  (GHC.Base.Maybe
                                                                                     GHC.Types.Double))
                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "maxValue")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   (GHC.Base.Maybe
                                                                                                      GHC.Types.Double)))))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "QuantityData" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "unit")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1
                                            GHC.Generics.R
                                            (GHC.Base.Maybe Duckling.Quantity.Types.Unit))
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "value")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             (GHC.Base.Maybe GHC.Types.Double)))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "aproduct")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             (GHC.Base.Maybe
                                                                Data.Text.Internal.Text))
                                                        GHC.Generics.:*: (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "minValue")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               (GHC.Base.Maybe
                                                                                  GHC.Types.Double))
                                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                ('GHC.Base.Just
                                                                                                   "maxValue")
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                (GHC.Base.Maybe
                                                                                                   GHC.Types.Double))))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds1 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 case ds2 of wild2 { GHC.Generics.:*: ds5 ds6 ->
                 case ds6 of wild3 { GHC.Generics.:*: ds7 ds8 ->
                 Duckling.Quantity.Types.QuantityData
                   ds3
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "unit")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R
                                (GHC.Base.Maybe Duckling.Quantity.Types.Unit)>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P
                             <GHC.Base.Maybe Duckling.Quantity.Types.Unit>_R
                             <x>_P))
                   ds4
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "value")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.Maybe GHC.Types.Double>_R <x>_P))
                   ds5
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "aproduct")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R (GHC.Base.Maybe Data.Text.Internal.Text)>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P
                             <GHC.Base.Maybe Data.Text.Internal.Text>_R
                             <x>_P))
                   ds7
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "minValue")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.Maybe GHC.Types.Double>_R <x>_P))
                   ds8
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "maxValue")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P
                             <GHC.Base.Maybe GHC.Types.Double>_R
                             <x>_P)) } } } }) -}
e64b9042dac36283e0d466a7b36615e2
  $fGenericSingleValue ::
    GHC.Generics.Generic Duckling.Quantity.Types.SingleValue
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.SingleValue
                  Duckling.Quantity.Types.$fGenericSingleValue_$cfrom
                  Duckling.Quantity.Types.$fGenericSingleValue_$cto -}
e64b9042dac36283e0d466a7b36615e2
  $fGenericSingleValue1 ::
    Duckling.Quantity.Types.SingleValue
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "SingleValue" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "vUnit")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Duckling.Quantity.Types.Unit)
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "vValue")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "vProduct")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  (GHC.Base.Maybe Data.Text.Internal.Text))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Duckling.Quantity.Types.SingleValue) ->
                 case x1 of wild { Duckling.Quantity.Types.SingleValue g1 g2 g3 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "vUnit")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Duckling.Quantity.Types.Unit))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "vValue")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "vProduct")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R
                                             (GHC.Base.Maybe Data.Text.Internal.Text)))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <Duckling.Quantity.Types.Unit>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "vUnit")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1
                                      GHC.Generics.R Duckling.Quantity.Types.Unit>_R) <x>_N))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "vValue")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "vProduct")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R (GHC.Base.Maybe Data.Text.Internal.Text)))
                       @ x
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Types.Double>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "vValue")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Types.Double>_R) <x>_N))
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P
                                      <GHC.Base.Maybe Data.Text.Internal.Text>_R
                                      <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "vProduct")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R
                                         (GHC.Base.Maybe Data.Text.Internal.Text)>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "SingleValue" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "vUnit")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Duckling.Quantity.Types.Unit)
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "vValue")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "vProduct")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    (GHC.Base.Maybe
                                                                       Data.Text.Internal.Text)))>_R) <x>_N) }) -}
e64b9042dac36283e0d466a7b36615e2
  $fGenericSingleValue_$cfrom ::
    Duckling.Quantity.Types.SingleValue
    -> GHC.Generics.Rep Duckling.Quantity.Types.SingleValue x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Duckling.Quantity.Types.$fGenericSingleValue1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Duckling.Quantity.Types.SingleValue>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "SingleValue"
                                       "Duckling.Quantity.Types"
                                       "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "SingleValue" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "vUnit")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R Duckling.Quantity.Types.Unit)
                                        GHC.Generics.:*: (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "vValue")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Types.Double)
                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                             GHC.Generics.S
                                                                             ('GHC.Generics.MetaSel
                                                                                ('GHC.Base.Just
                                                                                   "vProduct")
                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                'GHC.Generics.NoSourceStrictness
                                                                                'GHC.Generics.DecidedLazy)
                                                                             (GHC.Generics.K1
                                                                                GHC.Generics.R
                                                                                (GHC.Base.Maybe
                                                                                   Data.Text.Internal.Text))))>_R))
                          (Sub (Sym (Duckling.Quantity.Types.Rep_SingleValue[0]))) <x>_N) -}
e64b9042dac36283e0d466a7b36615e2
  $fGenericSingleValue_$cto ::
    GHC.Generics.Rep Duckling.Quantity.Types.SingleValue x
    -> Duckling.Quantity.Types.SingleValue
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(U,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x
                   (ds :: GHC.Generics.Rep Duckling.Quantity.Types.SingleValue x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Duckling.Quantity.Types.Rep_SingleValue[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "SingleValue"
                                        "Duckling.Quantity.Types"
                                        "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "SingleValue" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "vUnit")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R Duckling.Quantity.Types.Unit)
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "vValue")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Types.Double)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "vProduct")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 (GHC.Base.Maybe
                                                                                    Data.Text.Internal.Text))))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "SingleValue" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "vUnit")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R Duckling.Quantity.Types.Unit)
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "vValue")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R GHC.Types.Double)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "vProduct")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              (GHC.Base.Maybe
                                                                                 Data.Text.Internal.Text)))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds2 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 Duckling.Quantity.Types.SingleValue
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "vUnit")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R Duckling.Quantity.Types.Unit>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <Duckling.Quantity.Types.Unit>_R <x>_P))
                   ds3
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "vValue")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Double>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Types.Double>_R <x>_P))
                   ds4
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "vProduct")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R (GHC.Base.Maybe Data.Text.Internal.Text)>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P
                             <GHC.Base.Maybe Data.Text.Internal.Text>_R
                             <x>_P)) } }) -}
cc507958932a6d40d35b817e57a382bb
  $fGenericUnit :: GHC.Generics.Generic Duckling.Quantity.Types.Unit
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.Unit
                  Duckling.Quantity.Types.$fGenericUnit_$cfrom
                  Duckling.Quantity.Types.$fGenericUnit_$cto -}
cc507958932a6d40d35b817e57a382bb
  $fGenericUnit1 ::
    Duckling.Quantity.Types.Unit
    -> (GHC.Generics.:+:)
         ((GHC.Generics.M1
             GHC.Generics.C
             ('GHC.Generics.MetaCons
                "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
             GHC.Generics.U1
           GHC.Generics.:+: (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.M1
                                                GHC.Generics.C
                                                ('GHC.Generics.MetaCons
                                                   "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                (GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      'GHC.Base.Nothing
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R Data.Text.Internal.Text))))
          GHC.Generics.:+: (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: (GHC.Generics.M1
                                                GHC.Generics.C
                                                ('GHC.Generics.MetaCons
                                                   "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1
                                              GHC.Generics.:+: GHC.Generics.M1
                                                                 GHC.Generics.C
                                                                 ('GHC.Generics.MetaCons
                                                                    "Ounce"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.False)
                                                                 GHC.Generics.U1)))
         ((GHC.Generics.M1
             GHC.Generics.C
             ('GHC.Generics.MetaCons
                "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
             GHC.Generics.U1
           GHC.Generics.:+: (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.M1
                                                GHC.Generics.C
                                                ('GHC.Generics.MetaCons
                                                   "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1))
          GHC.Generics.:+: (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: (GHC.Generics.M1
                                                GHC.Generics.C
                                                ('GHC.Generics.MetaCons
                                                   "Teaspoon"
                                                   'GHC.Generics.PrefixI
                                                   'GHC.Types.False)
                                                GHC.Generics.U1
                                              GHC.Generics.:+: GHC.Generics.M1
                                                                 GHC.Generics.C
                                                                 ('GHC.Generics.MetaCons
                                                                    "Unnamed"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.False)
                                                                 GHC.Generics.U1)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ x (x1 :: Duckling.Quantity.Types.Unit) ->
                 case x1 of wild {
                   Duckling.Quantity.Types.Bowl
                   -> Duckling.Quantity.Types.$fGenericUnit39 @ x
                   Duckling.Quantity.Types.Cup
                   -> Duckling.Quantity.Types.$fGenericUnit35 @ x
                   Duckling.Quantity.Types.Custom g1
                   -> GHC.Generics.L1
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: (GHC.Generics.M1
                                                GHC.Generics.C
                                                ('GHC.Generics.MetaCons
                                                   "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1
                                              GHC.Generics.:+: GHC.Generics.M1
                                                                 GHC.Generics.C
                                                                 ('GHC.Generics.MetaCons
                                                                    "Custom"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.False)
                                                                 (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       'GHC.Base.Nothing
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       Data.Text.Internal.Text))))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1
                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                 GHC.Generics.C
                                                                 ('GHC.Generics.MetaCons
                                                                    "Gram"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.False)
                                                                 GHC.Generics.U1
                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                  GHC.Generics.C
                                                                                  ('GHC.Generics.MetaCons
                                                                                     "Ounce"
                                                                                     'GHC.Generics.PrefixI
                                                                                     'GHC.Types.False)
                                                                                  GHC.Generics.U1)))
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: (GHC.Generics.M1
                                                GHC.Generics.C
                                                ('GHC.Generics.MetaCons
                                                   "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1
                                              GHC.Generics.:+: GHC.Generics.M1
                                                                 GHC.Generics.C
                                                                 ('GHC.Generics.MetaCons
                                                                    "Quart"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.False)
                                                                 GHC.Generics.U1))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "Tablespoon"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1
                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                 GHC.Generics.C
                                                                 ('GHC.Generics.MetaCons
                                                                    "Teaspoon"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.False)
                                                                 GHC.Generics.U1
                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                  GHC.Generics.C
                                                                                  ('GHC.Generics.MetaCons
                                                                                     "Unnamed"
                                                                                     'GHC.Generics.PrefixI
                                                                                     'GHC.Types.False)
                                                                                  GHC.Generics.U1)))
                        @ x
                        (GHC.Generics.L1
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.M1
                                                                   GHC.Generics.C
                                                                   ('GHC.Generics.MetaCons
                                                                      "Custom"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   (GHC.Generics.M1
                                                                      GHC.Generics.S
                                                                      ('GHC.Generics.MetaSel
                                                                         'GHC.Base.Nothing
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.K1
                                                                         GHC.Generics.R
                                                                         Data.Text.Internal.Text))))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.M1
                                                                   GHC.Generics.C
                                                                   ('GHC.Generics.MetaCons
                                                                      "Ounce"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1))
                           @ x
                           (GHC.Generics.R1
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.M1
                                                    GHC.Generics.C
                                                    ('GHC.Generics.MetaCons
                                                       "Custom"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    (GHC.Generics.M1
                                                       GHC.Generics.S
                                                       ('GHC.Generics.MetaSel
                                                          'GHC.Base.Nothing
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.K1
                                                          GHC.Generics.R Data.Text.Internal.Text)))
                              @ x
                              (GHC.Generics.R1
                                 @ (GHC.Generics.M1
                                      GHC.Generics.C
                                      ('GHC.Generics.MetaCons
                                         "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1)
                                 @ (GHC.Generics.M1
                                      GHC.Generics.C
                                      ('GHC.Generics.MetaCons
                                         "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      (GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            'GHC.Base.Nothing
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)))
                                 @ x
                                 g1
                                   `cast`
                                 (Trans
                                      (Sym (GHC.Generics.N:K1[0]
                                                <GHC.Generics.R>_P
                                                <Data.Text.Internal.Text>_R
                                                <x>_P))
                                      (Trans
                                           (Sym (GHC.Generics.N:M1[0]
                                                     <GHC.Generics.S>_P
                                                     <'GHC.Generics.MetaSel
                                                        'GHC.Base.Nothing
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy>_P
                                                     <GHC.Generics.K1
                                                        GHC.Generics.R Data.Text.Internal.Text>_R))
                                           (Sym (GHC.Generics.N:M1[0]
                                                     <GHC.Generics.C>_P
                                                     <'GHC.Generics.MetaCons
                                                        "Custom"
                                                        'GHC.Generics.PrefixI
                                                        'GHC.Types.False>_P
                                                     <GHC.Generics.M1
                                                        GHC.Generics.S
                                                        ('GHC.Generics.MetaSel
                                                           'GHC.Base.Nothing
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.K1
                                                           GHC.Generics.R
                                                           Data.Text.Internal.Text)>_R)) <x>_N)))))
                   Duckling.Quantity.Types.Dish
                   -> Duckling.Quantity.Types.$fGenericUnit32 @ x
                   Duckling.Quantity.Types.Gram
                   -> Duckling.Quantity.Types.$fGenericUnit28 @ x
                   Duckling.Quantity.Types.Ounce
                   -> Duckling.Quantity.Types.$fGenericUnit24 @ x
                   Duckling.Quantity.Types.Pint
                   -> Duckling.Quantity.Types.$fGenericUnit21 @ x
                   Duckling.Quantity.Types.Pound
                   -> Duckling.Quantity.Types.$fGenericUnit17 @ x
                   Duckling.Quantity.Types.Quart
                   -> Duckling.Quantity.Types.$fGenericUnit13 @ x
                   Duckling.Quantity.Types.Tablespoon
                   -> Duckling.Quantity.Types.$fGenericUnit10 @ x
                   Duckling.Quantity.Types.Teaspoon
                   -> Duckling.Quantity.Types.$fGenericUnit6 @ x
                   Duckling.Quantity.Types.Unnamed
                   -> Duckling.Quantity.Types.$fGenericUnit2 @ x }) -}
9162849d6adfce3d3fc53266a5ed8368
  $fGenericUnit10 ::
    (GHC.Generics.:+:)
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   'GHC.Base.Nothing
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text))))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Ounce"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Unnamed"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Custom"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  'GHC.Base.Nothing
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  Data.Text.Internal.Text))))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Gram"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Ounce"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Quart"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Teaspoon"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Unnamed"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit11 @ x)) -}
c3e567b2997622a1cdfcddf36eaf3881
  $fGenericUnit11 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Unnamed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Quart"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Unnamed"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit12 @ x)) -}
9d51a728eb0fd364086109688d2b36a2
  $fGenericUnit12 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Unnamed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Unnamed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
78e3acf0c65f74a85a373f5437ebd543
  $fGenericUnit13 ::
    (GHC.Generics.:+:)
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   'GHC.Base.Nothing
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text))))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Ounce"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Unnamed"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Custom"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  'GHC.Base.Nothing
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  Data.Text.Internal.Text))))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Gram"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Ounce"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Quart"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Teaspoon"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Unnamed"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit14 @ x)) -}
639a5aca29e100feac4f893932af67dd
  $fGenericUnit14 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Unnamed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Quart"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Unnamed"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit15 @ x)) -}
bf1f2deca6e6f7d1caf5ed28c5f5c26b
  $fGenericUnit15 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit16 @ x)) -}
ac794f5cf4c8ce8f1a04e69c88bc8360
  $fGenericUnit16 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
1e61e66c253ccee51f5973e0595de1a2
  $fGenericUnit17 ::
    (GHC.Generics.:+:)
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   'GHC.Base.Nothing
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text))))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Ounce"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Unnamed"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Custom"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  'GHC.Base.Nothing
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  Data.Text.Internal.Text))))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Gram"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Ounce"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Quart"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Teaspoon"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Unnamed"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit18 @ x)) -}
01780c9bd2700b1b6a2db8df4e2e92cf
  $fGenericUnit18 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Unnamed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Quart"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Unnamed"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit19 @ x)) -}
d21a993888a6da46a8085bf02099ba47
  $fGenericUnit19 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit20 @ x)) -}
1b97310708161bb69a70a0496c48d8f1
  $fGenericUnit2 ::
    (GHC.Generics.:+:)
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   'GHC.Base.Nothing
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text))))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Ounce"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Unnamed"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Custom"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  'GHC.Base.Nothing
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  Data.Text.Internal.Text))))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Gram"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Ounce"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Quart"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Teaspoon"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Unnamed"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit3 @ x)) -}
46da34037cfc6f4bb135ccbf9f90abe8
  $fGenericUnit20 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
ade0f9e10283cb7fe18c3ca178caaab7
  $fGenericUnit21 ::
    (GHC.Generics.:+:)
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   'GHC.Base.Nothing
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text))))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Ounce"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Unnamed"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Custom"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  'GHC.Base.Nothing
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  Data.Text.Internal.Text))))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Gram"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Ounce"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Quart"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Teaspoon"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Unnamed"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit22 @ x)) -}
f0c684863957aff7dc17383d36d99d85
  $fGenericUnit22 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Unnamed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Quart"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Unnamed"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit23 @ x)) -}
efac9a7dae06df52e9dfac7fb142e9ff
  $fGenericUnit23 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
8496eceeab6fa37b80b5c2868e887d66
  $fGenericUnit24 ::
    (GHC.Generics.:+:)
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   'GHC.Base.Nothing
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text))))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Ounce"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Unnamed"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Custom"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  'GHC.Base.Nothing
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  Data.Text.Internal.Text))))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Gram"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Ounce"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Quart"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Teaspoon"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Unnamed"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit25 @ x)) -}
1d47f093062a6e80fb65964651d98cd2
  $fGenericUnit25 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  'GHC.Base.Nothing
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R Data.Text.Internal.Text))))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Ounce" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Custom"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Data.Text.Internal.Text))))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Ounce"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit26 @ x)) -}
83a893f7b138a2bc5e9198599d49002f
  $fGenericUnit26 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Ounce" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Ounce" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit27 @ x)) -}
e1c83c89ab290d49463590c16157e8cf
  $fGenericUnit27 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Ounce" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Ounce" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Ounce" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
bac4b12e49e20ad20c8d9d079ea51363
  $fGenericUnit28 ::
    (GHC.Generics.:+:)
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   'GHC.Base.Nothing
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text))))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Ounce"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Unnamed"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Custom"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  'GHC.Base.Nothing
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  Data.Text.Internal.Text))))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Gram"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Ounce"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Quart"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Teaspoon"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Unnamed"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit29 @ x)) -}
d99759d6dfad218acd22e7f5a58964ea
  $fGenericUnit29 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  'GHC.Base.Nothing
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R Data.Text.Internal.Text))))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Ounce" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Custom"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Data.Text.Internal.Text))))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Ounce"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit30 @ x)) -}
c3857ad93dfdcaa3da779dda1851adfa
  $fGenericUnit3 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Unnamed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Quart"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Unnamed"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit4 @ x)) -}
0ca94735ccc0095720bf462921ca54c0
  $fGenericUnit30 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Ounce" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Ounce" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit31 @ x)) -}
f1f485604b15f75a403064806085b8c1
  $fGenericUnit31 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Ounce" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Ounce" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
c4b369f3565bf0ceaee3b2ae3bf55e63
  $fGenericUnit32 ::
    (GHC.Generics.:+:)
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   'GHC.Base.Nothing
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text))))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Ounce"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Unnamed"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Custom"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  'GHC.Base.Nothing
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  Data.Text.Internal.Text))))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Gram"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Ounce"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Quart"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Teaspoon"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Unnamed"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit33 @ x)) -}
89dd49b7ad54c1f67d7140df1453e257
  $fGenericUnit33 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  'GHC.Base.Nothing
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R Data.Text.Internal.Text))))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Ounce" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Custom"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Data.Text.Internal.Text))))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Ounce"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit34 @ x)) -}
8fc2c059d5377d3f794cb6a605572041
  $fGenericUnit34 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Ounce" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Ounce" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
8888d127e2ecc77cd6aeeeb5bd9a26a5
  $fGenericUnit35 ::
    (GHC.Generics.:+:)
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   'GHC.Base.Nothing
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text))))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Ounce"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Unnamed"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Custom"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  'GHC.Base.Nothing
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  Data.Text.Internal.Text))))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Gram"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Ounce"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Quart"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Teaspoon"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Unnamed"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit36 @ x)) -}
f38e212b765c29aa522847035d36567e
  $fGenericUnit36 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  'GHC.Base.Nothing
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R Data.Text.Internal.Text))))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Ounce" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Custom"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Data.Text.Internal.Text))))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Ounce"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit37 @ x)) -}
5f4adb486ac18b7e0fe003c58579c8d1
  $fGenericUnit37 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               'GHC.Base.Nothing
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R Data.Text.Internal.Text)))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit38 @ x)) -}
c021251eb58d68fab2e8718a6694fb4e
  $fGenericUnit38 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)))
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
8924068c7efd413c040a8fde188db6eb
  $fGenericUnit39 ::
    (GHC.Generics.:+:)
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   'GHC.Base.Nothing
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text))))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Ounce"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Unnamed"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Custom"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  'GHC.Base.Nothing
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  Data.Text.Internal.Text))))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Gram"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Ounce"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Quart"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Teaspoon"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Unnamed"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit40 @ x)) -}
a0c098eccd7c4b099eb6e45abcd7350f
  $fGenericUnit4 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Unnamed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Unnamed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit5 @ x)) -}
9b40a47a097f3057e89df25c4cb45b31
  $fGenericUnit40 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  'GHC.Base.Nothing
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R Data.Text.Internal.Text))))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Ounce" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Custom"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Data.Text.Internal.Text))))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Ounce"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit41 @ x)) -}
4bb6286159c26ba4733f8ba8ea291809
  $fGenericUnit41 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               'GHC.Base.Nothing
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R Data.Text.Internal.Text)))
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
7199dc80c3887008c6bb36aa09364b00
  $fGenericUnit5 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Unnamed" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Unnamed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Unnamed" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
27c532538911500b0920caed51802bd7
  $fGenericUnit6 ::
    (GHC.Generics.:+:)
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   'GHC.Base.Nothing
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text))))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Ounce"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
          GHC.Generics.U1
        GHC.Generics.:+: (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "Unnamed"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Custom"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  'GHC.Base.Nothing
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  Data.Text.Internal.Text))))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Gram"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Ounce"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: (GHC.Generics.M1
                                           GHC.Generics.C
                                           ('GHC.Generics.MetaCons
                                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Quart"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "Teaspoon"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Unnamed"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit7 @ x)) -}
b34d0c7943e2bec1637eeb67c13ca4a6
  $fGenericUnit7 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Unnamed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Quart"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Unnamed"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit8 @ x)) -}
1eb88870af8d373967030506c8d2182b
  $fGenericUnit8 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Unnamed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Unnamed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Duckling.Quantity.Types.$fGenericUnit9 @ x)) -}
562a2dc6a9d5dd9bb1a4a9d4eb90078f
  $fGenericUnit9 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Unnamed" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Unnamed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
cc507958932a6d40d35b817e57a382bb
  $fGenericUnit_$cfrom ::
    Duckling.Quantity.Types.Unit
    -> GHC.Generics.Rep Duckling.Quantity.Types.Unit x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Duckling.Quantity.Types.$fGenericUnit1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Duckling.Quantity.Types.Unit>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "Unit"
                                       "Duckling.Quantity.Types"
                                       "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                       'GHC.Types.False>_P
                                    <((GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1
                                       GHC.Generics.:+: (GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Cup"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1
                                                         GHC.Generics.:+: GHC.Generics.M1
                                                                            GHC.Generics.C
                                                                            ('GHC.Generics.MetaCons
                                                                               "Custom"
                                                                               'GHC.Generics.PrefixI
                                                                               'GHC.Types.False)
                                                                            (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  'GHC.Base.Nothing
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  Data.Text.Internal.Text))))
                                      GHC.Generics.:+: (GHC.Generics.M1
                                                          GHC.Generics.C
                                                          ('GHC.Generics.MetaCons
                                                             "Dish"
                                                             'GHC.Generics.PrefixI
                                                             'GHC.Types.False)
                                                          GHC.Generics.U1
                                                        GHC.Generics.:+: (GHC.Generics.M1
                                                                            GHC.Generics.C
                                                                            ('GHC.Generics.MetaCons
                                                                               "Gram"
                                                                               'GHC.Generics.PrefixI
                                                                               'GHC.Types.False)
                                                                            GHC.Generics.U1
                                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                                             GHC.Generics.C
                                                                                             ('GHC.Generics.MetaCons
                                                                                                "Ounce"
                                                                                                'GHC.Generics.PrefixI
                                                                                                'GHC.Types.False)
                                                                                             GHC.Generics.U1)))
                                     GHC.Generics.:+: ((GHC.Generics.M1
                                                          GHC.Generics.C
                                                          ('GHC.Generics.MetaCons
                                                             "Pint"
                                                             'GHC.Generics.PrefixI
                                                             'GHC.Types.False)
                                                          GHC.Generics.U1
                                                        GHC.Generics.:+: (GHC.Generics.M1
                                                                            GHC.Generics.C
                                                                            ('GHC.Generics.MetaCons
                                                                               "Pound"
                                                                               'GHC.Generics.PrefixI
                                                                               'GHC.Types.False)
                                                                            GHC.Generics.U1
                                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                                             GHC.Generics.C
                                                                                             ('GHC.Generics.MetaCons
                                                                                                "Quart"
                                                                                                'GHC.Generics.PrefixI
                                                                                                'GHC.Types.False)
                                                                                             GHC.Generics.U1))
                                                       GHC.Generics.:+: (GHC.Generics.M1
                                                                           GHC.Generics.C
                                                                           ('GHC.Generics.MetaCons
                                                                              "Tablespoon"
                                                                              'GHC.Generics.PrefixI
                                                                              'GHC.Types.False)
                                                                           GHC.Generics.U1
                                                                         GHC.Generics.:+: (GHC.Generics.M1
                                                                                             GHC.Generics.C
                                                                                             ('GHC.Generics.MetaCons
                                                                                                "Teaspoon"
                                                                                                'GHC.Generics.PrefixI
                                                                                                'GHC.Types.False)
                                                                                             GHC.Generics.U1
                                                                                           GHC.Generics.:+: GHC.Generics.M1
                                                                                                              GHC.Generics.C
                                                                                                              ('GHC.Generics.MetaCons
                                                                                                                 "Unnamed"
                                                                                                                 'GHC.Generics.PrefixI
                                                                                                                 'GHC.Types.False)
                                                                                                              GHC.Generics.U1)))>_R))
                          (Sub (Sym (Duckling.Quantity.Types.Rep_Unit[0]))) <x>_N) -}
cc507958932a6d40d35b817e57a382bb
  $fGenericUnit_$cto ::
    GHC.Generics.Rep Duckling.Quantity.Types.Unit x
    -> Duckling.Quantity.Types.Unit
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ x
                   (ds :: GHC.Generics.Rep Duckling.Quantity.Types.Unit x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Duckling.Quantity.Types.Rep_Unit[0]))
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.D>_P
                                <'GHC.Generics.MetaData
                                   "Unit"
                                   "Duckling.Quantity.Types"
                                   "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                   'GHC.Types.False>_P
                                <((GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.M1
                                                       GHC.Generics.C
                                                       ('GHC.Generics.MetaCons
                                                          "Cup"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.M1
                                                                        GHC.Generics.C
                                                                        ('GHC.Generics.MetaCons
                                                                           "Custom"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        (GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              'GHC.Base.Nothing
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              Data.Text.Internal.Text))))
                                  GHC.Generics.:+: (GHC.Generics.M1
                                                      GHC.Generics.C
                                                      ('GHC.Generics.MetaCons
                                                         "Dish"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.M1
                                                                        GHC.Generics.C
                                                                        ('GHC.Generics.MetaCons
                                                                           "Gram"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.M1
                                                                                         GHC.Generics.C
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Ounce"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1)))
                                 GHC.Generics.:+: ((GHC.Generics.M1
                                                      GHC.Generics.C
                                                      ('GHC.Generics.MetaCons
                                                         "Pint"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.M1
                                                                        GHC.Generics.C
                                                                        ('GHC.Generics.MetaCons
                                                                           "Pound"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.M1
                                                                                         GHC.Generics.C
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Quart"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))
                                                   GHC.Generics.:+: (GHC.Generics.M1
                                                                       GHC.Generics.C
                                                                       ('GHC.Generics.MetaCons
                                                                          "Tablespoon"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: (GHC.Generics.M1
                                                                                         GHC.Generics.C
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Teaspoon"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1
                                                                                       GHC.Generics.:+: GHC.Generics.M1
                                                                                                          GHC.Generics.C
                                                                                                          ('GHC.Generics.MetaCons
                                                                                                             "Unnamed"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.False)
                                                                                                          GHC.Generics.U1)))>_R) <x>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2 of wild2 {
                             GHC.Generics.L1 ds3
                             -> case ds3 of tpl { DEFAULT -> Duckling.Quantity.Types.Bowl }
                             GHC.Generics.R1 ds3
                             -> case ds3 of wild3 {
                                  GHC.Generics.L1 ds4
                                  -> case ds4 of tpl { DEFAULT -> Duckling.Quantity.Types.Cup }
                                  GHC.Generics.R1 ds4
                                  -> Duckling.Quantity.Types.Custom
                                       ds4
                                         `cast`
                                       (Trans
                                            (Trans
                                                 (GHC.Generics.N:M1[0]
                                                      <GHC.Generics.C>_P
                                                      <'GHC.Generics.MetaCons
                                                         "Custom"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False>_P
                                                      <GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            Data.Text.Internal.Text)>_R)
                                                 (GHC.Generics.N:M1[0]
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         'GHC.Base.Nothing
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         Data.Text.Internal.Text>_R) <x>_N)
                                            (GHC.Generics.N:K1[0]
                                                 <GHC.Generics.R>_P
                                                 <Data.Text.Internal.Text>_R
                                                 <x>_P)) } }
                        GHC.Generics.R1 ds2
                        -> case ds2 of wild2 {
                             GHC.Generics.L1 ds3
                             -> case ds3 of tpl { DEFAULT -> Duckling.Quantity.Types.Dish }
                             GHC.Generics.R1 ds3
                             -> case ds3 of wild3 {
                                  GHC.Generics.L1 ds4
                                  -> case ds4 of tpl { DEFAULT -> Duckling.Quantity.Types.Gram }
                                  GHC.Generics.R1 ds4
                                  -> case ds4 of tpl { DEFAULT ->
                                     Duckling.Quantity.Types.Ounce } } } }
                   GHC.Generics.R1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2 of wild2 {
                             GHC.Generics.L1 ds3
                             -> case ds3 of tpl { DEFAULT -> Duckling.Quantity.Types.Pint }
                             GHC.Generics.R1 ds3
                             -> case ds3 of wild3 {
                                  GHC.Generics.L1 ds4
                                  -> case ds4 of tpl { DEFAULT -> Duckling.Quantity.Types.Pound }
                                  GHC.Generics.R1 ds4
                                  -> case ds4 of tpl { DEFAULT ->
                                     Duckling.Quantity.Types.Quart } } }
                        GHC.Generics.R1 ds2
                        -> case ds2 of wild2 {
                             GHC.Generics.L1 ds3
                             -> case ds3 of tpl { DEFAULT ->
                                Duckling.Quantity.Types.Tablespoon }
                             GHC.Generics.R1 ds3
                             -> case ds3 of wild3 {
                                  GHC.Generics.L1 ds4
                                  -> case ds4 of tpl { DEFAULT -> Duckling.Quantity.Types.Teaspoon }
                                  GHC.Generics.R1 ds4
                                  -> case ds4 of tpl { DEFAULT ->
                                     Duckling.Quantity.Types.Unnamed } } } } }) -}
8eb2fb9057740ab13264d610f0e647d3
  $fHashableIntervalDirection ::
    Data.Hashable.Class.Hashable
      Duckling.Quantity.Types.IntervalDirection
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.IntervalDirection
                  Duckling.Quantity.Types.$fHashableIntervalDirection_$s$dmhashWithSalt
                  Duckling.Quantity.Types.$fHashableIntervalDirection_$chash -}
7f0e8a46864f1ef51b4d6a97181cff04
  $fHashableIntervalDirection1 ::
    Data.Hashable.Class.GHashable
      Data.Hashable.Class.Zero
      (GHC.Generics.D1
         ('GHC.Generics.MetaData
            "IntervalDirection"
            "Duckling.Quantity.Types"
            "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
            'GHC.Types.False)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1))
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S(S),1*U(U)><S,1*U>m,
     Unfolding: InlineRule (0, True, True)
                Duckling.Quantity.Types.$fHashableIntervalDirection2
                  `cast`
                (Sym (Data.Hashable.Class.N:GHashable[0]
                          <Data.Hashable.Class.Zero>_N
                          <GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "IntervalDirection"
                                "Duckling.Quantity.Types"
                                "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                'GHC.Types.False)
                             (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1)>_N)) -}
256d2e24c9a702df43c02db7ca5cad62
  $fHashableIntervalDirection2 ::
    Data.Hashable.Class.HashArgs Data.Hashable.Class.Zero a1
    -> GHC.Types.Int
    -> GHC.Generics.M1
         GHC.Generics.D
         ('GHC.Generics.MetaData
            "IntervalDirection"
            "Duckling.Quantity.Types"
            "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
            'GHC.Types.False)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         a1
    -> GHC.Types.Int
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S(S),1*U(U)><S,1*U>m,
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (targs :: Data.Hashable.Class.HashArgs Data.Hashable.Class.Zero a1)
                   (salt :: GHC.Types.Int)
                   (x :: GHC.Generics.M1
                           GHC.Generics.D
                           ('GHC.Generics.MetaData
                              "IntervalDirection"
                              "Duckling.Quantity.Types"
                              "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                              'GHC.Types.False)
                           (GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1)
                           a1) ->
                 case salt of ww { GHC.Types.I# ww1 ->
                 case x `cast`
                      (GHC.Generics.N:M1[0]
                           <GHC.Generics.D>_P
                           <'GHC.Generics.MetaData
                              "IntervalDirection"
                              "Duckling.Quantity.Types"
                              "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                              'GHC.Types.False>_P
                           <GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1>_R <a1>_N) of wild {
                   GHC.Generics.L1 x1
                   -> case x1 of tpl { DEFAULT ->
                      GHC.Types.I# (GHC.Prim.*# (GHC.Prim.*# ww1 16777619#) 16777619#) }
                   GHC.Generics.R1 x1
                   -> case x1 of tpl { DEFAULT ->
                      GHC.Types.I#
                        (GHC.Prim.*#
                           (GHC.Prim.xorI# (GHC.Prim.*# ww1 16777619#) 1#)
                           16777619#) } } }) -}
8eb2fb9057740ab13264d610f0e647d3
  $fHashableIntervalDirection_$chash ::
    Duckling.Quantity.Types.IntervalDirection -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (x :: Duckling.Quantity.Types.IntervalDirection) ->
                 case x of wild {
                   Duckling.Quantity.Types.Above -> GHC.Types.I# -7234408896634655932#
                   Duckling.Quantity.Types.Under
                   -> GHC.Types.I# -7234408896617878313# }) -}
8eb2fb9057740ab13264d610f0e647d3
  $fHashableIntervalDirection_$s$dmhashWithSalt ::
    GHC.Types.Int
    -> Duckling.Quantity.Types.IntervalDirection -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,1*U>m,
     Unfolding: InlineRule (-3, True, False)
                (\ (salt :: GHC.Types.Int)
                   (x :: Duckling.Quantity.Types.IntervalDirection) ->
                 Duckling.Quantity.Types.$fHashableIntervalDirection1
                   `cast`
                 (Data.Hashable.Class.N:GHashable[0]
                      <Data.Hashable.Class.Zero>_N
                      (Sym (Duckling.Quantity.Types.Rep_IntervalDirection[0])))
                   @ GHC.Prim.Any
                   (Data.Hashable.Class.$WHashArgs0 @ GHC.Prim.Any)
                   salt
                   (Duckling.Quantity.Types.$fGenericIntervalDirection_$cfrom
                      @ GHC.Prim.Any
                      x)) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fHashableQuantityData ::
    Data.Hashable.Class.Hashable Duckling.Quantity.Types.QuantityData
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.QuantityData
                  Duckling.Quantity.Types.$fHashableQuantityData_$chashWithSalt
                  Duckling.Quantity.Types.$fHashableQuantityData_$chash -}
be6bba9b7c724f13379a9669ac27fcf8
  $fHashableQuantityData_$chash ::
    Duckling.Quantity.Types.QuantityData -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (Duckling.Quantity.Types.$fHashableQuantityData_$chashWithSalt
                   Data.Hashable.Class.defaultSalt) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fHashableQuantityData_$chashWithSalt ::
    GHC.Types.Int
    -> Duckling.Quantity.Types.QuantityData -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(SSSSS),1*U(1*U,1*U,1*U,1*U,1*U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Duckling.Quantity.Types.QuantityData) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Duckling.Quantity.Types.QuantityData ww3 ww4 ww5 ww6 ww7 ->
                 case Duckling.Quantity.Types.$w$dGHashable1
                        @ GHC.Prim.Any
                        ww1
                        ww3
                          `cast`
                        (Trans
                             (Sym (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P
                                       <GHC.Base.Maybe Duckling.Quantity.Types.Unit>_R
                                       <GHC.Prim.Any>_P))
                             (Sym (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "unit")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          (GHC.Base.Maybe
                                             Duckling.Quantity.Types.Unit)>_R) <GHC.Prim.Any>_N))
                        ww4
                          `cast`
                        (Trans
                             (Sym (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P
                                       <GHC.Base.Maybe GHC.Types.Double>_R
                                       <GHC.Prim.Any>_P))
                             (Sym (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "value")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          (GHC.Base.Maybe
                                             GHC.Types.Double)>_R) <GHC.Prim.Any>_N)) of ww8 { DEFAULT ->
                 case Duckling.Quantity.Types.$w$dGHashable
                        @ GHC.Prim.Any
                        ww8
                        ww5
                          `cast`
                        (Trans
                             (Sym (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P
                                       <GHC.Base.Maybe Data.Text.Internal.Text>_R
                                       <GHC.Prim.Any>_P))
                             (Sym (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "aproduct")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          (GHC.Base.Maybe
                                             Data.Text.Internal.Text)>_R) <GHC.Prim.Any>_N))
                        ww6
                          `cast`
                        (Trans
                             (Sym (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P
                                       <GHC.Base.Maybe GHC.Types.Double>_R
                                       <GHC.Prim.Any>_P))
                             (Sym (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "minValue")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          (GHC.Base.Maybe GHC.Types.Double)>_R) <GHC.Prim.Any>_N))
                        ww7
                          `cast`
                        (Trans
                             (Sym (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P
                                       <GHC.Base.Maybe GHC.Types.Double>_R
                                       <GHC.Prim.Any>_P))
                             (Sym (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "maxValue")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          (GHC.Base.Maybe
                                             GHC.Types.Double)>_R) <GHC.Prim.Any>_N)) of ww9 { DEFAULT ->
                 GHC.Types.I# ww9 } } } }) -}
e64b9042dac36283e0d466a7b36615e2
  $fHashableSingleValue ::
    Data.Hashable.Class.Hashable Duckling.Quantity.Types.SingleValue
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.SingleValue
                  Duckling.Quantity.Types.$fHashableSingleValue_$s$dmhashWithSalt
                  Duckling.Quantity.Types.$fHashableSingleValue_$chash -}
e79be0510256e1b9e8475a6b7b3e34d2
  $fHashableSingleValue1 ::
    Data.Hashable.Class.GHashable
      Data.Hashable.Class.Zero
      (GHC.Generics.D1
         ('GHC.Generics.MetaData
            "SingleValue"
            "Duckling.Quantity.Types"
            "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
            'GHC.Types.False)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "SingleValue" 'GHC.Generics.PrefixI 'GHC.Types.True)
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "vUnit")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 Duckling.Quantity.Types.Unit)
             GHC.Generics.:*: (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "vValue")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.Types.Double)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "vProduct")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.Rec0
                                                     (GHC.Base.Maybe Data.Text.Internal.Text))))))
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,A><S(S),1*U(U)><S(SS(S(S)S)),1*U(1*U,1*U(1*U(U),1*U))>m,
     Unfolding: InlineRule (0, True, True)
                Duckling.Quantity.Types.$fHashableSingleValue2
                  `cast`
                (Trans
                     (forall (a1 :: <*>_N).
                      <Data.Hashable.Class.HashArgs Data.Hashable.Class.Zero a1>_R
                      ->_R <GHC.Types.Int>_R
                      ->_R Trans
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.C>_P
                                         <'GHC.Generics.MetaCons
                                            "SingleValue" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                         <GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "vUnit")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 Duckling.Quantity.Types.Unit)
                                          GHC.Generics.:*: (GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "vValue")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0 GHC.Types.Double)
                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "vProduct")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.Rec0
                                                                                  (GHC.Base.Maybe
                                                                                     Data.Text.Internal.Text)))>_R))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.D>_P
                                         <'GHC.Generics.MetaData
                                            "SingleValue"
                                            "Duckling.Quantity.Types"
                                            "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                            'GHC.Types.False>_P
                                         <GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "SingleValue" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                            (GHC.Generics.S1
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "vUnit")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0 Duckling.Quantity.Types.Unit)
                                             GHC.Generics.:*: (GHC.Generics.S1
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "vValue")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.Rec0
                                                                    GHC.Types.Double)
                                                               GHC.Generics.:*: GHC.Generics.S1
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "vProduct")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.Rec0
                                                                                     (GHC.Base.Maybe
                                                                                        Data.Text.Internal.Text))))>_R)) <a1>_N
                      ->_R <GHC.Types.Int>_R)
                     (Sym (Data.Hashable.Class.N:GHashable[0]
                               <Data.Hashable.Class.Zero>_N
                               <GHC.Generics.M1
                                  GHC.Generics.D
                                  ('GHC.Generics.MetaData
                                     "SingleValue"
                                     "Duckling.Quantity.Types"
                                     "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                     'GHC.Types.False)
                                  (GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "SingleValue" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     (GHC.Generics.S1
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "vUnit")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 Duckling.Quantity.Types.Unit)
                                      GHC.Generics.:*: (GHC.Generics.S1
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "vValue")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.Rec0 GHC.Types.Double)
                                                        GHC.Generics.:*: GHC.Generics.S1
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "vProduct")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.Rec0
                                                                              (GHC.Base.Maybe
                                                                                 Data.Text.Internal.Text)))))>_N))) -}
76bde38c8c4de4c6f0246943a560ea46
  $fHashableSingleValue2 ::
    Data.Hashable.Class.HashArgs Data.Hashable.Class.Zero a1
    -> GHC.Types.Int
    -> (GHC.Generics.:*:)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "vUnit")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 Duckling.Quantity.Types.Unit))
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "vValue")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.Types.Double)
          GHC.Generics.:*: GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "vProduct")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 (GHC.Base.Maybe Data.Text.Internal.Text)))
         a1
    -> GHC.Types.Int
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,A><S(S),1*U(U)><S(SS(S(S)S)),1*U(1*U,1*U(1*U(U),1*U))>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Hashable.Class.HashArgs Data.Hashable.Class.Zero a1)
                   (w1 :: GHC.Types.Int)
                   (w2 :: (GHC.Generics.:*:)
                            (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "vUnit")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 Duckling.Quantity.Types.Unit))
                            (GHC.Generics.S1
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "vValue")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 GHC.Types.Double)
                             GHC.Generics.:*: GHC.Generics.S1
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "vProduct")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.Rec0
                                                   (GHC.Base.Maybe Data.Text.Internal.Text)))
                            a1) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { GHC.Generics.:*: ww3 ww4 ->
                 case ww4 of ww5 { GHC.Generics.:*: ww6 ww7 ->
                 case ww6
                        `cast`
                      (Trans
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.S>_P
                                <'GHC.Generics.MetaSel
                                   ('GHC.Base.Just "vValue")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy>_P
                                <GHC.Generics.Rec0 GHC.Types.Double>_R <a1>_N)
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P
                                <GHC.Types.Double>_R
                                <a1>_P)) of ww8 { GHC.Types.D# ww9 ->
                 case Duckling.Quantity.Types.$w$dGHashable2
                        @ a1
                        ww1
                        ww3
                        ww9
                        ww7 of ww10 { DEFAULT ->
                 GHC.Types.I# ww10 } } } } }) -}
e64b9042dac36283e0d466a7b36615e2
  $fHashableSingleValue_$chash ::
    Duckling.Quantity.Types.SingleValue -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (x :: Duckling.Quantity.Types.SingleValue) ->
                 case x of wild { Duckling.Quantity.Types.SingleValue g1 g2 g3 ->
                 case g2 of ww { GHC.Types.D# ww1 ->
                 case Duckling.Quantity.Types.$w$dGHashable2
                        @ GHC.Prim.Any
                        -2578643520546668380#
                        g1
                          `cast`
                        (Trans
                             (Sym (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P
                                       <Duckling.Quantity.Types.Unit>_R
                                       <GHC.Prim.Any>_P))
                             (Sym (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "vUnit")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          Duckling.Quantity.Types.Unit>_R) <GHC.Prim.Any>_N))
                        ww1
                        g3
                          `cast`
                        (Trans
                             (Sym (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P
                                       <GHC.Base.Maybe Data.Text.Internal.Text>_R
                                       <GHC.Prim.Any>_P))
                             (Sym (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "vProduct")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          (GHC.Base.Maybe
                                             Data.Text.Internal.Text)>_R) <GHC.Prim.Any>_N)) of ww2 { DEFAULT ->
                 GHC.Types.I# ww2 } } }) -}
e64b9042dac36283e0d466a7b36615e2
  $fHashableSingleValue_$s$dmhashWithSalt ::
    GHC.Types.Int
    -> Duckling.Quantity.Types.SingleValue -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(SS(S)S),1*U(1*U,1*U(U),1*U)>m,
     Unfolding: InlineRule (-3, True, False)
                (\ (salt :: GHC.Types.Int)
                   (x :: Duckling.Quantity.Types.SingleValue) ->
                 Duckling.Quantity.Types.$fHashableSingleValue1
                   `cast`
                 (Data.Hashable.Class.N:GHashable[0]
                      <Data.Hashable.Class.Zero>_N
                      (Sym (Duckling.Quantity.Types.Rep_SingleValue[0])))
                   @ GHC.Prim.Any
                   (Data.Hashable.Class.$WHashArgs0 @ GHC.Prim.Any)
                   salt
                   (Duckling.Quantity.Types.$fGenericSingleValue_$cfrom
                      @ GHC.Prim.Any
                      x)) -}
cc507958932a6d40d35b817e57a382bb
  $fHashableUnit ::
    Data.Hashable.Class.Hashable Duckling.Quantity.Types.Unit
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.Unit
                  Duckling.Quantity.Types.$fHashableUnit_$chashWithSalt
                  Duckling.Quantity.Types.$fHashableUnit_$chash -}
cc507958932a6d40d35b817e57a382bb
  $fHashableUnit_$chash ::
    Duckling.Quantity.Types.Unit -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (Duckling.Quantity.Types.$fHashableUnit_$chashWithSalt
                   Data.Hashable.Class.defaultSalt) -}
cc507958932a6d40d35b817e57a382bb
  $fHashableUnit_$chashWithSalt ::
    GHC.Types.Int -> Duckling.Quantity.Types.Unit -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,1*U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Duckling.Quantity.Types.Unit) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case Duckling.Quantity.Types.$w$chashWithSalt
                        ww1
                        w1 of ww2 { DEFAULT ->
                 GHC.Types.I# ww2 } }) -}
8eb2fb9057740ab13264d610f0e647d3
  $fNFDataIntervalDirection ::
    Control.DeepSeq.NFData Duckling.Quantity.Types.IntervalDirection
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Duckling.Quantity.Types.$fNFDataIntervalDirection_$s$dmrnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Duckling.Quantity.Types.IntervalDirection>_N)) -}
15d76cb3053da849807f6d0bf8e80b15
  $fNFDataIntervalDirection1 ::
    Control.DeepSeq.GNFData
      (GHC.Generics.D1
         ('GHC.Generics.MetaData
            "IntervalDirection"
            "Duckling.Quantity.Types"
            "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
            'GHC.Types.False)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Duckling.Quantity.Types.$fNFDataIntervalDirection2
                  `cast`
                (Sym (Control.DeepSeq.N:GNFData[0]
                          <GHC.Types.*>_N
                          <GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "IntervalDirection"
                                "Duckling.Quantity.Types"
                                "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                'GHC.Types.False)
                             (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1)>_N)) -}
57400457e5935b8554a54dd00a6e6a89
  $fNFDataIntervalDirection2 ::
    GHC.Generics.M1
      GHC.Generics.D
      ('GHC.Generics.MetaData
         "IntervalDirection"
         "Duckling.Quantity.Types"
         "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
         'GHC.Types.False)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.C1
                          ('GHC.Generics.MetaCons
                             "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      a1
    -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a1
                   (x :: GHC.Generics.M1
                           GHC.Generics.D
                           ('GHC.Generics.MetaData
                              "IntervalDirection"
                              "Duckling.Quantity.Types"
                              "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                              'GHC.Types.False)
                           (GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1)
                           a1) ->
                 case x `cast`
                      (GHC.Generics.N:M1[0]
                           <GHC.Generics.D>_P
                           <'GHC.Generics.MetaData
                              "IntervalDirection"
                              "Duckling.Quantity.Types"
                              "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                              'GHC.Types.False>_P
                           <GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1>_R <a1>_N) of wild {
                   GHC.Generics.L1 x1 -> case x1 of tpl { DEFAULT -> GHC.Tuple.() }
                   GHC.Generics.R1 x1
                   -> case x1 of tpl { DEFAULT -> GHC.Tuple.() } }) -}
8eb2fb9057740ab13264d610f0e647d3
  $fNFDataIntervalDirection_$s$dmrnf ::
    Duckling.Quantity.Types.IntervalDirection -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (-3, True, False)
                (\ (eta :: Duckling.Quantity.Types.IntervalDirection) ->
                 Duckling.Quantity.Types.$fNFDataIntervalDirection1
                   `cast`
                 (Control.DeepSeq.N:GNFData[0]
                      <GHC.Types.*>_N
                      (Sym (Duckling.Quantity.Types.Rep_IntervalDirection[0])))
                   @ GHC.Prim.Any
                   (Duckling.Quantity.Types.$fGenericIntervalDirection_$cfrom
                      @ GHC.Prim.Any
                      eta)) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fNFDataQuantityData ::
    Control.DeepSeq.NFData Duckling.Quantity.Types.QuantityData
  DFunId
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SSSSS),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Duckling.Quantity.Types.$fNFDataQuantityData_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Duckling.Quantity.Types.QuantityData>_N)) -}
945a80c4caa69e5eed5285dabe95401d
  $fNFDataQuantityData1 ::
    (GHC.Generics.:*:)
      (GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "unit")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 (GHC.Base.Maybe Duckling.Quantity.Types.Unit))
       GHC.Generics.:*: GHC.Generics.S1
                          ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "value")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double)))
      (GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "aproduct")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 (GHC.Base.Maybe Data.Text.Internal.Text))
       GHC.Generics.:*: (GHC.Generics.S1
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "minValue")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
                         GHC.Generics.:*: GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "maxValue")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))))
      a1
    -> ()
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(SS)S(SS(SS))),1*U(1*U(1*U,1*U),1*U(1*U,1*U(1*U,1*U)))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a1
                   (w :: (GHC.Generics.:*:)
                           (GHC.Generics.S1
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "unit")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.Rec0 (GHC.Base.Maybe Duckling.Quantity.Types.Unit))
                            GHC.Generics.:*: GHC.Generics.S1
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "value")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0
                                                  (GHC.Base.Maybe GHC.Types.Double)))
                           (GHC.Generics.S1
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "aproduct")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.Rec0 (GHC.Base.Maybe Data.Text.Internal.Text))
                            GHC.Generics.:*: (GHC.Generics.S1
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "minValue")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.Rec0
                                                   (GHC.Base.Maybe GHC.Types.Double))
                                              GHC.Generics.:*: GHC.Generics.S1
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "maxValue")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.Rec0
                                                                    (GHC.Base.Maybe
                                                                       GHC.Types.Double))))
                           a1) ->
                 case w of ww { GHC.Generics.:*: ww1 ww2 ->
                 case ww1 of ww3 { GHC.Generics.:*: ww4 ww5 ->
                 case ww2 of ww6 { GHC.Generics.:*: ww7 ww8 ->
                 case ww8 of ww9 { GHC.Generics.:*: ww10 ww11 ->
                 Duckling.Quantity.Types.$w$dGNFData
                   @ a1
                   ww4
                   ww5
                   ww7
                   ww10
                   ww11 } } } }) -}
8be5bec92dc7ac7c84c2bc7d6aef5f6b
  $fNFDataQuantityData2 ::
    (GHC.Generics.:+:)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.C1
                           ('GHC.Generics.MetaCons
                              "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.C1
                                            ('GHC.Generics.MetaCons
                                               "Quart" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.C1
                           ('GHC.Generics.MetaCons
                              "Teaspoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.C1
                                            ('GHC.Generics.MetaCons
                                               "Unnamed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      a1
    -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ a1
                   (ds :: (GHC.Generics.:+:)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: (GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1
                                               GHC.Generics.:+: GHC.Generics.C1
                                                                  ('GHC.Generics.MetaCons
                                                                     "Quart"
                                                                     'GHC.Generics.PrefixI
                                                                     'GHC.Types.False)
                                                                  GHC.Generics.U1))
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: (GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Teaspoon"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1
                                               GHC.Generics.:+: GHC.Generics.C1
                                                                  ('GHC.Generics.MetaCons
                                                                     "Unnamed"
                                                                     'GHC.Generics.PrefixI
                                                                     'GHC.Types.False)
                                                                  GHC.Generics.U1))
                            a1) ->
                 case ds of wild {
                   GHC.Generics.L1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1 -> case x1 of tpl { DEFAULT -> GHC.Tuple.() }
                        GHC.Generics.R1 x1
                        -> case x1 of wild2 {
                             GHC.Generics.L1 x2 -> case x2 of tpl { DEFAULT -> GHC.Tuple.() }
                             GHC.Generics.R1 x2
                             -> case x2 of tpl { DEFAULT -> GHC.Tuple.() } } }
                   GHC.Generics.R1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1 -> case x1 of tpl { DEFAULT -> GHC.Tuple.() }
                        GHC.Generics.R1 x1
                        -> case x1 of wild2 {
                             GHC.Generics.L1 x2 -> case x2 of tpl { DEFAULT -> GHC.Tuple.() }
                             GHC.Generics.R1 x2
                             -> case x2 of tpl { DEFAULT -> GHC.Tuple.() } } } }) -}
a53a456b4d2dfacc5040d747df445d90
  $fNFDataQuantityData3 ::
    (GHC.Generics.:+:)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.C1
                           ('GHC.Generics.MetaCons
                              "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.C1
                                            ('GHC.Generics.MetaCons
                                               "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            (GHC.Generics.S1
                                               ('GHC.Generics.MetaSel
                                                  'GHC.Base.Nothing
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0 Data.Text.Internal.Text))))
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.C1
                           ('GHC.Generics.MetaCons
                              "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.C1
                                            ('GHC.Generics.MetaCons
                                               "Ounce" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      a1
    -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ a1
                   (ds :: (GHC.Generics.:+:)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: (GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1
                                               GHC.Generics.:+: GHC.Generics.C1
                                                                  ('GHC.Generics.MetaCons
                                                                     "Custom"
                                                                     'GHC.Generics.PrefixI
                                                                     'GHC.Types.False)
                                                                  (GHC.Generics.S1
                                                                     ('GHC.Generics.MetaSel
                                                                        'GHC.Base.Nothing
                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                        'GHC.Generics.NoSourceStrictness
                                                                        'GHC.Generics.DecidedLazy)
                                                                     (GHC.Generics.Rec0
                                                                        Data.Text.Internal.Text))))
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: (GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1
                                               GHC.Generics.:+: GHC.Generics.C1
                                                                  ('GHC.Generics.MetaCons
                                                                     "Ounce"
                                                                     'GHC.Generics.PrefixI
                                                                     'GHC.Types.False)
                                                                  GHC.Generics.U1))
                            a1) ->
                 case ds of wild {
                   GHC.Generics.L1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1 -> case x1 of tpl { DEFAULT -> GHC.Tuple.() }
                        GHC.Generics.R1 x1
                        -> case x1 of wild2 {
                             GHC.Generics.L1 x2 -> case x2 of tpl { DEFAULT -> GHC.Tuple.() }
                             GHC.Generics.R1 x2
                             -> case x2 of tpl { DEFAULT -> GHC.Tuple.() } } }
                   GHC.Generics.R1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1 -> case x1 of tpl { DEFAULT -> GHC.Tuple.() }
                        GHC.Generics.R1 x1
                        -> case x1 of wild2 {
                             GHC.Generics.L1 x2 -> case x2 of tpl { DEFAULT -> GHC.Tuple.() }
                             GHC.Generics.R1 x2
                             -> case x2 of tpl { DEFAULT -> GHC.Tuple.() } } } }) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fNFDataQuantityData_$crnf ::
    Duckling.Quantity.Types.QuantityData -> ()
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SSSSS),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Duckling.Quantity.Types.QuantityData) ->
                 case eta of wild { Duckling.Quantity.Types.QuantityData g1 g2 g3 g4 g5 ->
                 Duckling.Quantity.Types.$fNFDataQuantityData1
                   @ GHC.Prim.Any
                   (GHC.Generics.:*:
                      @ (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "unit")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1
                              GHC.Generics.R (GHC.Base.Maybe Duckling.Quantity.Types.Unit))
                         GHC.Generics.:*: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "value")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
                      @ (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "aproduct")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1
                              GHC.Generics.R (GHC.Base.Maybe Data.Text.Internal.Text))
                         GHC.Generics.:*: (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "minValue")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double))
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "maxValue")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 (GHC.Base.Maybe
                                                                    GHC.Types.Double))))
                      @ GHC.Prim.Any
                      (GHC.Generics.:*:
                         @ (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "unit")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R (GHC.Base.Maybe Duckling.Quantity.Types.Unit)))
                         @ (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "value")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
                         @ GHC.Prim.Any
                         g1
                           `cast`
                         (Trans
                              (Sym (GHC.Generics.N:K1[0]
                                        <GHC.Generics.R>_P
                                        <GHC.Base.Maybe Duckling.Quantity.Types.Unit>_R
                                        <GHC.Prim.Any>_P))
                              (Sym (GHC.Generics.N:M1[0]
                                        <GHC.Generics.S>_P
                                        <'GHC.Generics.MetaSel
                                           ('GHC.Base.Just "unit")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy>_P
                                        <GHC.Generics.K1
                                           GHC.Generics.R
                                           (GHC.Base.Maybe
                                              Duckling.Quantity.Types.Unit)>_R) <GHC.Prim.Any>_N))
                         g2
                           `cast`
                         (Trans
                              (Sym (GHC.Generics.N:K1[0]
                                        <GHC.Generics.R>_P
                                        <GHC.Base.Maybe GHC.Types.Double>_R
                                        <GHC.Prim.Any>_P))
                              (Sym (GHC.Generics.N:M1[0]
                                        <GHC.Generics.S>_P
                                        <'GHC.Generics.MetaSel
                                           ('GHC.Base.Just "value")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy>_P
                                        <GHC.Generics.K1
                                           GHC.Generics.R
                                           (GHC.Base.Maybe GHC.Types.Double)>_R) <GHC.Prim.Any>_N)))
                      (GHC.Generics.:*:
                         @ (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "aproduct")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R (GHC.Base.Maybe Data.Text.Internal.Text)))
                         @ (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "minValue")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double))
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "maxValue")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
                         @ GHC.Prim.Any
                         g3
                           `cast`
                         (Trans
                              (Sym (GHC.Generics.N:K1[0]
                                        <GHC.Generics.R>_P
                                        <GHC.Base.Maybe Data.Text.Internal.Text>_R
                                        <GHC.Prim.Any>_P))
                              (Sym (GHC.Generics.N:M1[0]
                                        <GHC.Generics.S>_P
                                        <'GHC.Generics.MetaSel
                                           ('GHC.Base.Just "aproduct")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy>_P
                                        <GHC.Generics.K1
                                           GHC.Generics.R
                                           (GHC.Base.Maybe
                                              Data.Text.Internal.Text)>_R) <GHC.Prim.Any>_N))
                         (GHC.Generics.:*:
                            @ (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "minValue")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
                            @ (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "maxValue")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
                            @ GHC.Prim.Any
                            g4
                              `cast`
                            (Trans
                                 (Sym (GHC.Generics.N:K1[0]
                                           <GHC.Generics.R>_P
                                           <GHC.Base.Maybe GHC.Types.Double>_R
                                           <GHC.Prim.Any>_P))
                                 (Sym (GHC.Generics.N:M1[0]
                                           <GHC.Generics.S>_P
                                           <'GHC.Generics.MetaSel
                                              ('GHC.Base.Just "minValue")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy>_P
                                           <GHC.Generics.K1
                                              GHC.Generics.R
                                              (GHC.Base.Maybe
                                                 GHC.Types.Double)>_R) <GHC.Prim.Any>_N))
                            g5
                              `cast`
                            (Trans
                                 (Sym (GHC.Generics.N:K1[0]
                                           <GHC.Generics.R>_P
                                           <GHC.Base.Maybe GHC.Types.Double>_R
                                           <GHC.Prim.Any>_P))
                                 (Sym (GHC.Generics.N:M1[0]
                                           <GHC.Generics.S>_P
                                           <'GHC.Generics.MetaSel
                                              ('GHC.Base.Just "maxValue")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy>_P
                                           <GHC.Generics.K1
                                              GHC.Generics.R
                                              (GHC.Base.Maybe
                                                 GHC.Types.Double)>_R) <GHC.Prim.Any>_N))))) }) -}
e64b9042dac36283e0d466a7b36615e2
  $fNFDataSingleValue ::
    Control.DeepSeq.NFData Duckling.Quantity.Types.SingleValue
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SSS),1*U(1*U,1*U,1*U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Duckling.Quantity.Types.$fNFDataSingleValue_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Duckling.Quantity.Types.SingleValue>_N)) -}
1ffe1507e4a3743ade7355eb19fa2bca
  $fNFDataSingleValue1 ::
    (GHC.Generics.:*:)
      (GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "vUnit")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 Duckling.Quantity.Types.Unit))
      (GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "vValue")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Types.Double)
       GHC.Generics.:*: GHC.Generics.S1
                          ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "vProduct")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.Rec0 (GHC.Base.Maybe Data.Text.Internal.Text)))
      a1
    -> ()
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS(SS)),1*U(1*U,1*U(1*U,1*U))>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a1
                   (w :: (GHC.Generics.:*:)
                           (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "vUnit")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.Rec0 Duckling.Quantity.Types.Unit))
                           (GHC.Generics.S1
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "vValue")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.Rec0 GHC.Types.Double)
                            GHC.Generics.:*: GHC.Generics.S1
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "vProduct")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0
                                                  (GHC.Base.Maybe Data.Text.Internal.Text)))
                           a1) ->
                 case w of ww { GHC.Generics.:*: ww1 ww2 ->
                 case ww2 of ww3 { GHC.Generics.:*: ww4 ww5 ->
                 Duckling.Quantity.Types.$w$dGNFData1 @ a1 ww1 ww4 ww5 } }) -}
e64b9042dac36283e0d466a7b36615e2
  $fNFDataSingleValue_$crnf ::
    Duckling.Quantity.Types.SingleValue -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SSS),1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Duckling.Quantity.Types.SingleValue) ->
                 case eta of wild { Duckling.Quantity.Types.SingleValue g1 g2 g3 ->
                 Duckling.Quantity.Types.$fNFDataSingleValue1
                   @ GHC.Prim.Any
                   (GHC.Generics.:*:
                      @ (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "vUnit")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1 GHC.Generics.R Duckling.Quantity.Types.Unit))
                      @ (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "vValue")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double)
                         GHC.Generics.:*: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "vProduct")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R
                                               (GHC.Base.Maybe Data.Text.Internal.Text)))
                      @ GHC.Prim.Any
                      g1
                        `cast`
                      (Trans
                           (Sym (GHC.Generics.N:K1[0]
                                     <GHC.Generics.R>_P
                                     <Duckling.Quantity.Types.Unit>_R
                                     <GHC.Prim.Any>_P))
                           (Sym (GHC.Generics.N:M1[0]
                                     <GHC.Generics.S>_P
                                     <'GHC.Generics.MetaSel
                                        ('GHC.Base.Just "vUnit")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy>_P
                                     <GHC.Generics.K1
                                        GHC.Generics.R
                                        Duckling.Quantity.Types.Unit>_R) <GHC.Prim.Any>_N))
                      (GHC.Generics.:*:
                         @ (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "vValue")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double))
                         @ (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "vProduct")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R (GHC.Base.Maybe Data.Text.Internal.Text)))
                         @ GHC.Prim.Any
                         g2
                           `cast`
                         (Trans
                              (Sym (GHC.Generics.N:K1[0]
                                        <GHC.Generics.R>_P <GHC.Types.Double>_R <GHC.Prim.Any>_P))
                              (Sym (GHC.Generics.N:M1[0]
                                        <GHC.Generics.S>_P
                                        <'GHC.Generics.MetaSel
                                           ('GHC.Base.Just "vValue")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy>_P
                                        <GHC.Generics.K1
                                           GHC.Generics.R GHC.Types.Double>_R) <GHC.Prim.Any>_N))
                         g3
                           `cast`
                         (Trans
                              (Sym (GHC.Generics.N:K1[0]
                                        <GHC.Generics.R>_P
                                        <GHC.Base.Maybe Data.Text.Internal.Text>_R
                                        <GHC.Prim.Any>_P))
                              (Sym (GHC.Generics.N:M1[0]
                                        <GHC.Generics.S>_P
                                        <'GHC.Generics.MetaSel
                                           ('GHC.Base.Just "vProduct")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy>_P
                                        <GHC.Generics.K1
                                           GHC.Generics.R
                                           (GHC.Base.Maybe
                                              Data.Text.Internal.Text)>_R) <GHC.Prim.Any>_N)))) }) -}
cc507958932a6d40d35b817e57a382bb
  $fNFDataUnit :: Control.DeepSeq.NFData Duckling.Quantity.Types.Unit
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Duckling.Quantity.Types.$fNFDataUnit_$s$dmrnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Duckling.Quantity.Types.Unit>_N)) -}
4539386bdef1341681460a5c2e7f73a2
  $fNFDataUnit1 ::
    Control.DeepSeq.GNFData
      (GHC.Generics.D1
         ('GHC.Generics.MetaData
            "Unit"
            "Duckling.Quantity.Types"
            "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
            'GHC.Types.False)
         (((GHC.Generics.C1
              ('GHC.Generics.MetaCons
                 "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
              GHC.Generics.U1
            GHC.Generics.:+: (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 (GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 Data.Text.Internal.Text))))
           GHC.Generics.:+: (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: (GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1
                                               GHC.Generics.:+: GHC.Generics.C1
                                                                  ('GHC.Generics.MetaCons
                                                                     "Ounce"
                                                                     'GHC.Generics.PrefixI
                                                                     'GHC.Types.False)
                                                                  GHC.Generics.U1)))
          GHC.Generics.:+: ((GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: (GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1
                                               GHC.Generics.:+: GHC.Generics.C1
                                                                  ('GHC.Generics.MetaCons
                                                                     "Quart"
                                                                     'GHC.Generics.PrefixI
                                                                     'GHC.Types.False)
                                                                  GHC.Generics.U1))
                            GHC.Generics.:+: (GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Tablespoon"
                                                   'GHC.Generics.PrefixI
                                                   'GHC.Types.False)
                                                GHC.Generics.U1
                                              GHC.Generics.:+: (GHC.Generics.C1
                                                                  ('GHC.Generics.MetaCons
                                                                     "Teaspoon"
                                                                     'GHC.Generics.PrefixI
                                                                     'GHC.Types.False)
                                                                  GHC.Generics.U1
                                                                GHC.Generics.:+: GHC.Generics.C1
                                                                                   ('GHC.Generics.MetaCons
                                                                                      "Unnamed"
                                                                                      'GHC.Generics.PrefixI
                                                                                      'GHC.Types.False)
                                                                                   GHC.Generics.U1)))))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Duckling.Quantity.Types.$fNFDataUnit2
                  `cast`
                (Sym (Control.DeepSeq.N:GNFData[0]
                          <GHC.Types.*>_N
                          <GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "Unit"
                                "Duckling.Quantity.Types"
                                "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                                'GHC.Types.False)
                             (((GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: (GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                    GHC.Generics.U1
                                                  GHC.Generics.:+: GHC.Generics.C1
                                                                     ('GHC.Generics.MetaCons
                                                                        "Custom"
                                                                        'GHC.Generics.PrefixI
                                                                        'GHC.Types.False)
                                                                     (GHC.Generics.S1
                                                                        ('GHC.Generics.MetaSel
                                                                           'GHC.Base.Nothing
                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                           'GHC.Generics.NoSourceStrictness
                                                                           'GHC.Generics.DecidedLazy)
                                                                        (GHC.Generics.Rec0
                                                                           Data.Text.Internal.Text))))
                               GHC.Generics.:+: (GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: (GHC.Generics.C1
                                                                     ('GHC.Generics.MetaCons
                                                                        "Gram"
                                                                        'GHC.Generics.PrefixI
                                                                        'GHC.Types.False)
                                                                     GHC.Generics.U1
                                                                   GHC.Generics.:+: GHC.Generics.C1
                                                                                      ('GHC.Generics.MetaCons
                                                                                         "Ounce"
                                                                                         'GHC.Generics.PrefixI
                                                                                         'GHC.Types.False)
                                                                                      GHC.Generics.U1)))
                              GHC.Generics.:+: ((GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: (GHC.Generics.C1
                                                                     ('GHC.Generics.MetaCons
                                                                        "Pound"
                                                                        'GHC.Generics.PrefixI
                                                                        'GHC.Types.False)
                                                                     GHC.Generics.U1
                                                                   GHC.Generics.:+: GHC.Generics.C1
                                                                                      ('GHC.Generics.MetaCons
                                                                                         "Quart"
                                                                                         'GHC.Generics.PrefixI
                                                                                         'GHC.Types.False)
                                                                                      GHC.Generics.U1))
                                                GHC.Generics.:+: (GHC.Generics.C1
                                                                    ('GHC.Generics.MetaCons
                                                                       "Tablespoon"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: (GHC.Generics.C1
                                                                                      ('GHC.Generics.MetaCons
                                                                                         "Teaspoon"
                                                                                         'GHC.Generics.PrefixI
                                                                                         'GHC.Types.False)
                                                                                      GHC.Generics.U1
                                                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                                                       ('GHC.Generics.MetaCons
                                                                                                          "Unnamed"
                                                                                                          'GHC.Generics.PrefixI
                                                                                                          'GHC.Types.False)
                                                                                                       GHC.Generics.U1))))>_N)) -}
1ee850c09f1afb4ce75edc1d4fba764f
  $fNFDataUnit2 ::
    GHC.Generics.M1
      GHC.Generics.D
      ('GHC.Generics.MetaData
         "Unit"
         "Duckling.Quantity.Types"
         "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
         'GHC.Types.False)
      (((GHC.Generics.C1
           ('GHC.Generics.MetaCons
              "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
           GHC.Generics.U1
         GHC.Generics.:+: (GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1
                           GHC.Generics.:+: GHC.Generics.C1
                                              ('GHC.Generics.MetaCons
                                                 "Custom" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              (GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 Data.Text.Internal.Text))))
        GHC.Generics.:+: (GHC.Generics.C1
                            ('GHC.Generics.MetaCons
                               "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: (GHC.Generics.C1
                                              ('GHC.Generics.MetaCons
                                                 "Gram" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              GHC.Generics.U1
                                            GHC.Generics.:+: GHC.Generics.C1
                                                               ('GHC.Generics.MetaCons
                                                                  "Ounce"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1)))
       GHC.Generics.:+: ((GHC.Generics.C1
                            ('GHC.Generics.MetaCons
                               "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: (GHC.Generics.C1
                                              ('GHC.Generics.MetaCons
                                                 "Pound" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              GHC.Generics.U1
                                            GHC.Generics.:+: GHC.Generics.C1
                                                               ('GHC.Generics.MetaCons
                                                                  "Quart"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1))
                         GHC.Generics.:+: (GHC.Generics.C1
                                             ('GHC.Generics.MetaCons
                                                "Tablespoon" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: (GHC.Generics.C1
                                                               ('GHC.Generics.MetaCons
                                                                  "Teaspoon"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1
                                                             GHC.Generics.:+: GHC.Generics.C1
                                                                                ('GHC.Generics.MetaCons
                                                                                   "Unnamed"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.False)
                                                                                GHC.Generics.U1))))
      a1
    -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a1
                   (x :: GHC.Generics.M1
                           GHC.Generics.D
                           ('GHC.Generics.MetaData
                              "Unit"
                              "Duckling.Quantity.Types"
                              "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                              'GHC.Types.False)
                           (((GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Custom"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   (GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         'GHC.Base.Nothing
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         Data.Text.Internal.Text))))
                             GHC.Generics.:+: (GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1
                                               GHC.Generics.:+: (GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Gram"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1
                                                                 GHC.Generics.:+: GHC.Generics.C1
                                                                                    ('GHC.Generics.MetaCons
                                                                                       "Ounce"
                                                                                       'GHC.Generics.PrefixI
                                                                                       'GHC.Types.False)
                                                                                    GHC.Generics.U1)))
                            GHC.Generics.:+: ((GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1
                                               GHC.Generics.:+: (GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Pound"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1
                                                                 GHC.Generics.:+: GHC.Generics.C1
                                                                                    ('GHC.Generics.MetaCons
                                                                                       "Quart"
                                                                                       'GHC.Generics.PrefixI
                                                                                       'GHC.Types.False)
                                                                                    GHC.Generics.U1))
                                              GHC.Generics.:+: (GHC.Generics.C1
                                                                  ('GHC.Generics.MetaCons
                                                                     "Tablespoon"
                                                                     'GHC.Generics.PrefixI
                                                                     'GHC.Types.False)
                                                                  GHC.Generics.U1
                                                                GHC.Generics.:+: (GHC.Generics.C1
                                                                                    ('GHC.Generics.MetaCons
                                                                                       "Teaspoon"
                                                                                       'GHC.Generics.PrefixI
                                                                                       'GHC.Types.False)
                                                                                    GHC.Generics.U1
                                                                                  GHC.Generics.:+: GHC.Generics.C1
                                                                                                     ('GHC.Generics.MetaCons
                                                                                                        "Unnamed"
                                                                                                        'GHC.Generics.PrefixI
                                                                                                        'GHC.Types.False)
                                                                                                     GHC.Generics.U1))))
                           a1) ->
                 case x `cast`
                      (GHC.Generics.N:M1[0]
                           <GHC.Generics.D>_P
                           <'GHC.Generics.MetaData
                              "Unit"
                              "Duckling.Quantity.Types"
                              "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
                              'GHC.Types.False>_P
                           <((GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Custom"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   (GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         'GHC.Base.Nothing
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         Data.Text.Internal.Text))))
                             GHC.Generics.:+: (GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1
                                               GHC.Generics.:+: (GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Gram"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1
                                                                 GHC.Generics.:+: GHC.Generics.C1
                                                                                    ('GHC.Generics.MetaCons
                                                                                       "Ounce"
                                                                                       'GHC.Generics.PrefixI
                                                                                       'GHC.Types.False)
                                                                                    GHC.Generics.U1)))
                            GHC.Generics.:+: ((GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1
                                               GHC.Generics.:+: (GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Pound"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1
                                                                 GHC.Generics.:+: GHC.Generics.C1
                                                                                    ('GHC.Generics.MetaCons
                                                                                       "Quart"
                                                                                       'GHC.Generics.PrefixI
                                                                                       'GHC.Types.False)
                                                                                    GHC.Generics.U1))
                                              GHC.Generics.:+: (GHC.Generics.C1
                                                                  ('GHC.Generics.MetaCons
                                                                     "Tablespoon"
                                                                     'GHC.Generics.PrefixI
                                                                     'GHC.Types.False)
                                                                  GHC.Generics.U1
                                                                GHC.Generics.:+: (GHC.Generics.C1
                                                                                    ('GHC.Generics.MetaCons
                                                                                       "Teaspoon"
                                                                                       'GHC.Generics.PrefixI
                                                                                       'GHC.Types.False)
                                                                                    GHC.Generics.U1
                                                                                  GHC.Generics.:+: GHC.Generics.C1
                                                                                                     ('GHC.Generics.MetaCons
                                                                                                        "Unnamed"
                                                                                                        'GHC.Generics.PrefixI
                                                                                                        'GHC.Types.False)
                                                                                                     GHC.Generics.U1)))>_R <a1>_N) of wild {
                   GHC.Generics.L1 x1
                   -> Duckling.Quantity.Types.$fNFDataQuantityData3 @ a1 x1
                   GHC.Generics.R1 x1
                   -> Duckling.Quantity.Types.$fNFDataQuantityData2 @ a1 x1 }) -}
cc507958932a6d40d35b817e57a382bb
  $fNFDataUnit_$s$dmrnf :: Duckling.Quantity.Types.Unit -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (-3, True, False)
                (\ (eta :: Duckling.Quantity.Types.Unit) ->
                 Duckling.Quantity.Types.$fNFDataUnit1
                   `cast`
                 (Control.DeepSeq.N:GNFData[0]
                      <GHC.Types.*>_N (Sym (Duckling.Quantity.Types.Rep_Unit[0])))
                   @ GHC.Prim.Any
                   (Duckling.Quantity.Types.$fGenericUnit_$cfrom
                      @ GHC.Prim.Any
                      eta)) -}
8eb2fb9057740ab13264d610f0e647d3
  $fOrdIntervalDirection ::
    GHC.Classes.Ord Duckling.Quantity.Types.IntervalDirection
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.IntervalDirection
                  Duckling.Quantity.Types.$fEqIntervalDirection
                  Duckling.Quantity.Types.$fOrdIntervalDirection_$ccompare
                  Duckling.Quantity.Types.$fOrdIntervalDirection_$c<
                  Duckling.Quantity.Types.$fOrdIntervalDirection_$c<=
                  Duckling.Quantity.Types.$fOrdIntervalDirection_$c>
                  Duckling.Quantity.Types.$fOrdIntervalDirection_$c>=
                  Duckling.Quantity.Types.$fOrdIntervalDirection_$cmax
                  Duckling.Quantity.Types.$fOrdIntervalDirection_$cmin -}
8eb2fb9057740ab13264d610f0e647d3
  $fOrdIntervalDirection_$c< ::
    Duckling.Quantity.Types.IntervalDirection
    -> Duckling.Quantity.Types.IntervalDirection -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.Quantity.Types.IntervalDirection)
                   (b :: Duckling.Quantity.Types.IntervalDirection) ->
                 case a of wild {
                   Duckling.Quantity.Types.Above
                   -> case b of wild1 {
                        Duckling.Quantity.Types.Above -> GHC.Types.False
                        Duckling.Quantity.Types.Under -> GHC.Types.True }
                   Duckling.Quantity.Types.Under
                   -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
8eb2fb9057740ab13264d610f0e647d3
  $fOrdIntervalDirection_$c<= ::
    Duckling.Quantity.Types.IntervalDirection
    -> Duckling.Quantity.Types.IntervalDirection -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.Quantity.Types.IntervalDirection)
                   (b :: Duckling.Quantity.Types.IntervalDirection) ->
                 case a of wild {
                   Duckling.Quantity.Types.Above
                   -> case b of wild1 { DEFAULT -> GHC.Types.True }
                   Duckling.Quantity.Types.Under
                   -> case b of wild1 {
                        Duckling.Quantity.Types.Above -> GHC.Types.False
                        Duckling.Quantity.Types.Under -> GHC.Types.True } }) -}
8eb2fb9057740ab13264d610f0e647d3
  $fOrdIntervalDirection_$c> ::
    Duckling.Quantity.Types.IntervalDirection
    -> Duckling.Quantity.Types.IntervalDirection -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.Quantity.Types.IntervalDirection)
                   (b :: Duckling.Quantity.Types.IntervalDirection) ->
                 case a of wild {
                   Duckling.Quantity.Types.Above
                   -> case b of wild1 { DEFAULT -> GHC.Types.False }
                   Duckling.Quantity.Types.Under
                   -> case b of wild1 {
                        Duckling.Quantity.Types.Above -> GHC.Types.True
                        Duckling.Quantity.Types.Under -> GHC.Types.False } }) -}
8eb2fb9057740ab13264d610f0e647d3
  $fOrdIntervalDirection_$c>= ::
    Duckling.Quantity.Types.IntervalDirection
    -> Duckling.Quantity.Types.IntervalDirection -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.Quantity.Types.IntervalDirection)
                   (b :: Duckling.Quantity.Types.IntervalDirection) ->
                 case a of wild {
                   Duckling.Quantity.Types.Above
                   -> case b of wild1 {
                        Duckling.Quantity.Types.Above -> GHC.Types.True
                        Duckling.Quantity.Types.Under -> GHC.Types.False }
                   Duckling.Quantity.Types.Under
                   -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
8eb2fb9057740ab13264d610f0e647d3
  $fOrdIntervalDirection_$ccompare ::
    Duckling.Quantity.Types.IntervalDirection
    -> Duckling.Quantity.Types.IntervalDirection -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Duckling.Quantity.Types.IntervalDirection)
                   (b :: Duckling.Quantity.Types.IntervalDirection) ->
                 case a of wild {
                   Duckling.Quantity.Types.Above
                   -> case b of wild1 {
                        Duckling.Quantity.Types.Above -> GHC.Types.EQ
                        Duckling.Quantity.Types.Under -> GHC.Types.LT }
                   Duckling.Quantity.Types.Under
                   -> case b of wild1 {
                        Duckling.Quantity.Types.Above -> GHC.Types.GT
                        Duckling.Quantity.Types.Under -> GHC.Types.EQ } }) -}
8eb2fb9057740ab13264d610f0e647d3
  $fOrdIntervalDirection_$cmax ::
    Duckling.Quantity.Types.IntervalDirection
    -> Duckling.Quantity.Types.IntervalDirection
    -> Duckling.Quantity.Types.IntervalDirection
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Duckling.Quantity.Types.IntervalDirection)
                   (y :: Duckling.Quantity.Types.IntervalDirection) ->
                 case x of wild {
                   Duckling.Quantity.Types.Above -> y
                   Duckling.Quantity.Types.Under
                   -> case y of wild1 { DEFAULT ->
                      Duckling.Quantity.Types.Under } }) -}
8eb2fb9057740ab13264d610f0e647d3
  $fOrdIntervalDirection_$cmin ::
    Duckling.Quantity.Types.IntervalDirection
    -> Duckling.Quantity.Types.IntervalDirection
    -> Duckling.Quantity.Types.IntervalDirection
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Duckling.Quantity.Types.IntervalDirection)
                   (y :: Duckling.Quantity.Types.IntervalDirection) ->
                 case x of wild {
                   Duckling.Quantity.Types.Above
                   -> case y of wild1 { DEFAULT -> Duckling.Quantity.Types.Above }
                   Duckling.Quantity.Types.Under -> y }) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fOrdQuantityData ::
    GHC.Classes.Ord Duckling.Quantity.Types.QuantityData
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.QuantityData
                  Duckling.Quantity.Types.$fEqQuantityData
                  Duckling.Quantity.Types.$fOrdQuantityData_$ccompare
                  Duckling.Quantity.Types.$fOrdQuantityData_$c<
                  Duckling.Quantity.Types.$fOrdQuantityData_$c<=
                  Duckling.Quantity.Types.$fOrdQuantityData_$c>
                  Duckling.Quantity.Types.$fOrdQuantityData_$c>=
                  Duckling.Quantity.Types.$fOrdQuantityData_$cmax
                  Duckling.Quantity.Types.$fOrdQuantityData_$cmin -}
be6bba9b7c724f13379a9669ac27fcf8
  $fOrdQuantityData_$c< ::
    Duckling.Quantity.Types.QuantityData
    -> Duckling.Quantity.Types.QuantityData -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Quantity.Types.QuantityData)
                   (w1 :: Duckling.Quantity.Types.QuantityData) ->
                 case w of ww { Duckling.Quantity.Types.QuantityData ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Duckling.Quantity.Types.QuantityData ww7 ww8 ww9 ww10 ww11 ->
                 Duckling.Quantity.Types.$w$c<
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11 } }) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fOrdQuantityData_$c<= ::
    Duckling.Quantity.Types.QuantityData
    -> Duckling.Quantity.Types.QuantityData -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Quantity.Types.QuantityData)
                   (w1 :: Duckling.Quantity.Types.QuantityData) ->
                 case w of ww { Duckling.Quantity.Types.QuantityData ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Duckling.Quantity.Types.QuantityData ww7 ww8 ww9 ww10 ww11 ->
                 Duckling.Quantity.Types.$w$c<=
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11 } }) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fOrdQuantityData_$c> ::
    Duckling.Quantity.Types.QuantityData
    -> Duckling.Quantity.Types.QuantityData -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Quantity.Types.QuantityData)
                   (w1 :: Duckling.Quantity.Types.QuantityData) ->
                 case w of ww { Duckling.Quantity.Types.QuantityData ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Duckling.Quantity.Types.QuantityData ww7 ww8 ww9 ww10 ww11 ->
                 Duckling.Quantity.Types.$w$c>
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11 } }) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fOrdQuantityData_$c>= ::
    Duckling.Quantity.Types.QuantityData
    -> Duckling.Quantity.Types.QuantityData -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Quantity.Types.QuantityData)
                   (w1 :: Duckling.Quantity.Types.QuantityData) ->
                 case w of ww { Duckling.Quantity.Types.QuantityData ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Duckling.Quantity.Types.QuantityData ww7 ww8 ww9 ww10 ww11 ->
                 Duckling.Quantity.Types.$w$c>=
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11 } }) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fOrdQuantityData_$ccompare ::
    Duckling.Quantity.Types.QuantityData
    -> Duckling.Quantity.Types.QuantityData -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Quantity.Types.QuantityData)
                   (w1 :: Duckling.Quantity.Types.QuantityData) ->
                 case w of ww { Duckling.Quantity.Types.QuantityData ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Duckling.Quantity.Types.QuantityData ww7 ww8 ww9 ww10 ww11 ->
                 Duckling.Quantity.Types.$w$ccompare
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11 } }) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fOrdQuantityData_$cmax ::
    Duckling.Quantity.Types.QuantityData
    -> Duckling.Quantity.Types.QuantityData
    -> Duckling.Quantity.Types.QuantityData
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),U(U,U,U,U,U)><S(SLLLL),U(U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Duckling.Quantity.Types.QuantityData)
                   (y :: Duckling.Quantity.Types.QuantityData) ->
                 case Duckling.Quantity.Types.$fOrdQuantityData_$c<= x y of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fOrdQuantityData_$cmin ::
    Duckling.Quantity.Types.QuantityData
    -> Duckling.Quantity.Types.QuantityData
    -> Duckling.Quantity.Types.QuantityData
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),U(U,U,U,U,U)><S(SLLLL),U(U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Duckling.Quantity.Types.QuantityData)
                   (y :: Duckling.Quantity.Types.QuantityData) ->
                 case Duckling.Quantity.Types.$fOrdQuantityData_$c<= x y of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fOrdQuantityValue ::
    GHC.Classes.Ord Duckling.Quantity.Types.QuantityValue
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.QuantityValue
                  Duckling.Quantity.Types.$fEqQuantityValue
                  Duckling.Quantity.Types.$fOrdQuantityValue_$ccompare
                  Duckling.Quantity.Types.$fOrdQuantityValue_$c<
                  Duckling.Quantity.Types.$fOrdQuantityValue_$c<=
                  Duckling.Quantity.Types.$fOrdQuantityValue_$c>
                  Duckling.Quantity.Types.$fOrdQuantityValue_$c>=
                  Duckling.Quantity.Types.$fOrdQuantityValue_$cmax
                  Duckling.Quantity.Types.$fOrdQuantityValue_$cmin -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fOrdQuantityValue_$c< ::
    Duckling.Quantity.Types.QuantityValue
    -> Duckling.Quantity.Types.QuantityValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.Quantity.Types.QuantityValue)
                   (b :: Duckling.Quantity.Types.QuantityValue) ->
                 case a of wild {
                   Duckling.Quantity.Types.SimpleValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Quantity.Types.SimpleValue b1
                        -> Duckling.Quantity.Types.$fOrdQuantityValue_$c<1 a1 b1 }
                   Duckling.Quantity.Types.IntervalValue a1
                   -> case b of wild1 {
                        Duckling.Quantity.Types.SimpleValue ds -> GHC.Types.False
                        Duckling.Quantity.Types.IntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Quantity.Types.SingleValue ww8 ww9 ww10 ->
                           case ww4 of ww11 { Duckling.Quantity.Types.SingleValue ww12 ww13 ww14 ->
                           case Duckling.Quantity.Types.$w$ccompare1
                                  ww8
                                  ww9
                                  ww10
                                  ww12
                                  ww13
                                  ww14 of wild2 {
                             GHC.Types.LT -> GHC.Types.True
                             GHC.Types.EQ
                             -> Duckling.Quantity.Types.$fOrdQuantityValue_$c<1 ww2 ww5
                             GHC.Types.GT -> GHC.Types.False } } } } }
                        Duckling.Quantity.Types.OpenIntervalValue ipv -> GHC.Types.True }
                   Duckling.Quantity.Types.OpenIntervalValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Quantity.Types.OpenIntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Quantity.Types.SingleValue ww8 ww9 ww10 ->
                           case ww4 of ww11 { Duckling.Quantity.Types.SingleValue ww12 ww13 ww14 ->
                           case Duckling.Quantity.Types.$w$ccompare1
                                  ww8
                                  ww9
                                  ww10
                                  ww12
                                  ww13
                                  ww14 of wild2 {
                             GHC.Types.LT -> GHC.Types.True
                             GHC.Types.EQ
                             -> Duckling.Quantity.Types.$fOrdIntervalDirection_$c< ww2 ww5
                             GHC.Types.GT -> GHC.Types.False } } } } } } }) -}
e64b9042dac36283e0d466a7b36615e2
  $fOrdQuantityValue_$c<1 ::
    Duckling.Quantity.Types.SingleValue
    -> Duckling.Quantity.Types.SingleValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(U),1*U)><S(SLL),1*U(1*U,1*U(U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Quantity.Types.SingleValue)
                   (w1 :: Duckling.Quantity.Types.SingleValue) ->
                 case w of ww { Duckling.Quantity.Types.SingleValue ww1 ww2 ww3 ->
                 case w1 of ww4 { Duckling.Quantity.Types.SingleValue ww5 ww6 ww7 ->
                 Duckling.Quantity.Types.$w$c<1 ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fOrdQuantityValue_$c<= ::
    Duckling.Quantity.Types.QuantityValue
    -> Duckling.Quantity.Types.QuantityValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.Quantity.Types.QuantityValue)
                   (b :: Duckling.Quantity.Types.QuantityValue) ->
                 case a of wild {
                   Duckling.Quantity.Types.SimpleValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Quantity.Types.SimpleValue b1
                        -> Duckling.Quantity.Types.$fOrdQuantityValue_$c<=1 a1 b1 }
                   Duckling.Quantity.Types.IntervalValue a1
                   -> case b of wild1 {
                        Duckling.Quantity.Types.SimpleValue ds -> GHC.Types.False
                        Duckling.Quantity.Types.IntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Quantity.Types.SingleValue ww8 ww9 ww10 ->
                           case ww4 of ww11 { Duckling.Quantity.Types.SingleValue ww12 ww13 ww14 ->
                           case Duckling.Quantity.Types.$w$ccompare1
                                  ww8
                                  ww9
                                  ww10
                                  ww12
                                  ww13
                                  ww14 of wild2 {
                             GHC.Types.LT -> GHC.Types.True
                             GHC.Types.EQ
                             -> Duckling.Quantity.Types.$fOrdQuantityValue_$c<=1 ww2 ww5
                             GHC.Types.GT -> GHC.Types.False } } } } }
                        Duckling.Quantity.Types.OpenIntervalValue ipv -> GHC.Types.True }
                   Duckling.Quantity.Types.OpenIntervalValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Quantity.Types.OpenIntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Quantity.Types.SingleValue ww8 ww9 ww10 ->
                           case ww4 of ww11 { Duckling.Quantity.Types.SingleValue ww12 ww13 ww14 ->
                           case Duckling.Quantity.Types.$w$ccompare1
                                  ww8
                                  ww9
                                  ww10
                                  ww12
                                  ww13
                                  ww14 of wild2 {
                             GHC.Types.LT -> GHC.Types.True
                             GHC.Types.EQ
                             -> Duckling.Quantity.Types.$fOrdIntervalDirection_$c<= ww2 ww5
                             GHC.Types.GT -> GHC.Types.False } } } } } } }) -}
e64b9042dac36283e0d466a7b36615e2
  $fOrdQuantityValue_$c<=1 ::
    Duckling.Quantity.Types.SingleValue
    -> Duckling.Quantity.Types.SingleValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(U),1*U)><S(SLL),1*U(1*U,1*U(U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Quantity.Types.SingleValue)
                   (w1 :: Duckling.Quantity.Types.SingleValue) ->
                 case w of ww { Duckling.Quantity.Types.SingleValue ww1 ww2 ww3 ->
                 case w1 of ww4 { Duckling.Quantity.Types.SingleValue ww5 ww6 ww7 ->
                 Duckling.Quantity.Types.$w$c<=1 ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fOrdQuantityValue_$c> ::
    Duckling.Quantity.Types.QuantityValue
    -> Duckling.Quantity.Types.QuantityValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.Quantity.Types.QuantityValue)
                   (b :: Duckling.Quantity.Types.QuantityValue) ->
                 case a of wild {
                   Duckling.Quantity.Types.SimpleValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Quantity.Types.SimpleValue b1
                        -> Duckling.Quantity.Types.$fOrdQuantityValue_$c>1 a1 b1 }
                   Duckling.Quantity.Types.IntervalValue a1
                   -> case b of wild1 {
                        Duckling.Quantity.Types.SimpleValue ds -> GHC.Types.True
                        Duckling.Quantity.Types.IntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Quantity.Types.SingleValue ww8 ww9 ww10 ->
                           case ww4 of ww11 { Duckling.Quantity.Types.SingleValue ww12 ww13 ww14 ->
                           case Duckling.Quantity.Types.$w$ccompare1
                                  ww8
                                  ww9
                                  ww10
                                  ww12
                                  ww13
                                  ww14 of wild2 {
                             GHC.Types.LT -> GHC.Types.False
                             GHC.Types.EQ
                             -> Duckling.Quantity.Types.$fOrdQuantityValue_$c>1 ww2 ww5
                             GHC.Types.GT -> GHC.Types.True } } } } }
                        Duckling.Quantity.Types.OpenIntervalValue ipv -> GHC.Types.False }
                   Duckling.Quantity.Types.OpenIntervalValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Quantity.Types.OpenIntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Quantity.Types.SingleValue ww8 ww9 ww10 ->
                           case ww4 of ww11 { Duckling.Quantity.Types.SingleValue ww12 ww13 ww14 ->
                           case Duckling.Quantity.Types.$w$ccompare1
                                  ww8
                                  ww9
                                  ww10
                                  ww12
                                  ww13
                                  ww14 of wild2 {
                             GHC.Types.LT -> GHC.Types.False
                             GHC.Types.EQ
                             -> Duckling.Quantity.Types.$fOrdIntervalDirection_$c> ww2 ww5
                             GHC.Types.GT -> GHC.Types.True } } } } } } }) -}
e64b9042dac36283e0d466a7b36615e2
  $fOrdQuantityValue_$c>1 ::
    Duckling.Quantity.Types.SingleValue
    -> Duckling.Quantity.Types.SingleValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(U),1*U)><S(SLL),1*U(1*U,1*U(U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Quantity.Types.SingleValue)
                   (w1 :: Duckling.Quantity.Types.SingleValue) ->
                 case w of ww { Duckling.Quantity.Types.SingleValue ww1 ww2 ww3 ->
                 case w1 of ww4 { Duckling.Quantity.Types.SingleValue ww5 ww6 ww7 ->
                 Duckling.Quantity.Types.$w$c>1 ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fOrdQuantityValue_$c>= ::
    Duckling.Quantity.Types.QuantityValue
    -> Duckling.Quantity.Types.QuantityValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.Quantity.Types.QuantityValue)
                   (b :: Duckling.Quantity.Types.QuantityValue) ->
                 case a of wild {
                   Duckling.Quantity.Types.SimpleValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Duckling.Quantity.Types.SimpleValue b1
                        -> Duckling.Quantity.Types.$fOrdQuantityValue_$c>=1 a1 b1 }
                   Duckling.Quantity.Types.IntervalValue a1
                   -> case b of wild1 {
                        Duckling.Quantity.Types.SimpleValue ds -> GHC.Types.True
                        Duckling.Quantity.Types.IntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Quantity.Types.SingleValue ww8 ww9 ww10 ->
                           case ww4 of ww11 { Duckling.Quantity.Types.SingleValue ww12 ww13 ww14 ->
                           case Duckling.Quantity.Types.$w$ccompare1
                                  ww8
                                  ww9
                                  ww10
                                  ww12
                                  ww13
                                  ww14 of wild2 {
                             GHC.Types.LT -> GHC.Types.False
                             GHC.Types.EQ
                             -> Duckling.Quantity.Types.$fOrdQuantityValue_$c>=1 ww2 ww5
                             GHC.Types.GT -> GHC.Types.True } } } } }
                        Duckling.Quantity.Types.OpenIntervalValue ipv -> GHC.Types.False }
                   Duckling.Quantity.Types.OpenIntervalValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Duckling.Quantity.Types.OpenIntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Quantity.Types.SingleValue ww8 ww9 ww10 ->
                           case ww4 of ww11 { Duckling.Quantity.Types.SingleValue ww12 ww13 ww14 ->
                           case Duckling.Quantity.Types.$w$ccompare1
                                  ww8
                                  ww9
                                  ww10
                                  ww12
                                  ww13
                                  ww14 of wild2 {
                             GHC.Types.LT -> GHC.Types.False
                             GHC.Types.EQ
                             -> Duckling.Quantity.Types.$fOrdIntervalDirection_$c>= ww2 ww5
                             GHC.Types.GT -> GHC.Types.True } } } } } } }) -}
e64b9042dac36283e0d466a7b36615e2
  $fOrdQuantityValue_$c>=1 ::
    Duckling.Quantity.Types.SingleValue
    -> Duckling.Quantity.Types.SingleValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(U),1*U)><S(SLL),1*U(1*U,1*U(U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Quantity.Types.SingleValue)
                   (w1 :: Duckling.Quantity.Types.SingleValue) ->
                 case w of ww { Duckling.Quantity.Types.SingleValue ww1 ww2 ww3 ->
                 case w1 of ww4 { Duckling.Quantity.Types.SingleValue ww5 ww6 ww7 ->
                 Duckling.Quantity.Types.$w$c>=1 ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fOrdQuantityValue_$ccompare ::
    Duckling.Quantity.Types.QuantityValue
    -> Duckling.Quantity.Types.QuantityValue -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.Quantity.Types.QuantityValue)
                   (b :: Duckling.Quantity.Types.QuantityValue) ->
                 case a of wild {
                   Duckling.Quantity.Types.SimpleValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Duckling.Quantity.Types.SimpleValue b1
                        -> Duckling.Quantity.Types.$fOrdQuantityValue_$ccompare1 a1 b1 }
                   Duckling.Quantity.Types.IntervalValue a1
                   -> case b of wild1 {
                        Duckling.Quantity.Types.SimpleValue ds -> GHC.Types.GT
                        Duckling.Quantity.Types.IntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Quantity.Types.SingleValue ww8 ww9 ww10 ->
                           case ww4 of ww11 { Duckling.Quantity.Types.SingleValue ww12 ww13 ww14 ->
                           case Duckling.Quantity.Types.$w$ccompare1
                                  ww8
                                  ww9
                                  ww10
                                  ww12
                                  ww13
                                  ww14 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ
                             -> Duckling.Quantity.Types.$fOrdQuantityValue_$ccompare1 ww2 ww5
                             GHC.Types.GT -> GHC.Types.GT } } } } }
                        Duckling.Quantity.Types.OpenIntervalValue ipv -> GHC.Types.LT }
                   Duckling.Quantity.Types.OpenIntervalValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Duckling.Quantity.Types.OpenIntervalValue b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of ww7 { Duckling.Quantity.Types.SingleValue ww8 ww9 ww10 ->
                           case ww4 of ww11 { Duckling.Quantity.Types.SingleValue ww12 ww13 ww14 ->
                           case Duckling.Quantity.Types.$w$ccompare1
                                  ww8
                                  ww9
                                  ww10
                                  ww12
                                  ww13
                                  ww14 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ
                             -> Duckling.Quantity.Types.$fOrdIntervalDirection_$ccompare ww2 ww5
                             GHC.Types.GT -> GHC.Types.GT } } } } } } }) -}
e64b9042dac36283e0d466a7b36615e2
  $fOrdQuantityValue_$ccompare1 ::
    Duckling.Quantity.Types.SingleValue
    -> Duckling.Quantity.Types.SingleValue -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(U),1*U)><S(SLL),1*U(1*U,1*U(U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Duckling.Quantity.Types.SingleValue)
                   (w1 :: Duckling.Quantity.Types.SingleValue) ->
                 case w of ww { Duckling.Quantity.Types.SingleValue ww1 ww2 ww3 ->
                 case w1 of ww4 { Duckling.Quantity.Types.SingleValue ww5 ww6 ww7 ->
                 Duckling.Quantity.Types.$w$ccompare1
                   ww1
                   ww2
                   ww3
                   ww5
                   ww6
                   ww7 } }) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fOrdQuantityValue_$cmax ::
    Duckling.Quantity.Types.QuantityValue
    -> Duckling.Quantity.Types.QuantityValue
    -> Duckling.Quantity.Types.QuantityValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Duckling.Quantity.Types.QuantityValue)
                   (y :: Duckling.Quantity.Types.QuantityValue) ->
                 case Duckling.Quantity.Types.$fOrdQuantityValue_$c<= x y of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fOrdQuantityValue_$cmin ::
    Duckling.Quantity.Types.QuantityValue
    -> Duckling.Quantity.Types.QuantityValue
    -> Duckling.Quantity.Types.QuantityValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Duckling.Quantity.Types.QuantityValue)
                   (y :: Duckling.Quantity.Types.QuantityValue) ->
                 case Duckling.Quantity.Types.$fOrdQuantityValue_$c<= x y of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
e64b9042dac36283e0d466a7b36615e2
  $fOrdSingleValue ::
    GHC.Classes.Ord Duckling.Quantity.Types.SingleValue
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.SingleValue
                  Duckling.Quantity.Types.$fEqSingleValue
                  Duckling.Quantity.Types.$fOrdQuantityValue_$ccompare1
                  Duckling.Quantity.Types.$fOrdQuantityValue_$c<1
                  Duckling.Quantity.Types.$fOrdQuantityValue_$c<=1
                  Duckling.Quantity.Types.$fOrdQuantityValue_$c>1
                  Duckling.Quantity.Types.$fOrdQuantityValue_$c>=1
                  Duckling.Quantity.Types.$fOrdSingleValue_$cmax
                  Duckling.Quantity.Types.$fOrdSingleValue_$cmin -}
e64b9042dac36283e0d466a7b36615e2
  $fOrdSingleValue_$cmax ::
    Duckling.Quantity.Types.SingleValue
    -> Duckling.Quantity.Types.SingleValue
    -> Duckling.Quantity.Types.SingleValue
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),U(U,U(U),U)><S(SLL),U(U,U(U),U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Duckling.Quantity.Types.SingleValue)
                   (y :: Duckling.Quantity.Types.SingleValue) ->
                 case Duckling.Quantity.Types.$fOrdQuantityValue_$c<=1 x y of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
e64b9042dac36283e0d466a7b36615e2
  $fOrdSingleValue_$cmin ::
    Duckling.Quantity.Types.SingleValue
    -> Duckling.Quantity.Types.SingleValue
    -> Duckling.Quantity.Types.SingleValue
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),U(U,U(U),U)><S(SLL),U(U,U(U),U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Duckling.Quantity.Types.SingleValue)
                   (y :: Duckling.Quantity.Types.SingleValue) ->
                 case Duckling.Quantity.Types.$fOrdQuantityValue_$c<=1 x y of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
cc507958932a6d40d35b817e57a382bb
  $fOrdUnit :: GHC.Classes.Ord Duckling.Quantity.Types.Unit
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.Unit
                  Duckling.Quantity.Types.$fEqUnit
                  Duckling.Quantity.Types.$fOrdUnit_$ccompare
                  Duckling.Quantity.Types.$fOrdUnit_$c<
                  Duckling.Quantity.Types.$fOrdUnit_$c<=
                  Duckling.Quantity.Types.$fOrdUnit_$c>
                  Duckling.Quantity.Types.$fOrdUnit_$c>=
                  Duckling.Quantity.Types.$fOrdUnit_$cmax
                  Duckling.Quantity.Types.$fOrdUnit_$cmin -}
cc507958932a6d40d35b817e57a382bb
  $fOrdUnit_$c< ::
    Duckling.Quantity.Types.Unit
    -> Duckling.Quantity.Types.Unit -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Duckling.Quantity.Types.Unit)
                   (y :: Duckling.Quantity.Types.Unit) ->
                 case x of wild {
                   DEFAULT
                   -> GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<#
                           (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit wild)
                           (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit y))
                   Duckling.Quantity.Types.Custom a1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>#
                                (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit y)
                                2#) of wild1 {
                        GHC.Types.False
                        -> case y of wild2 {
                             DEFAULT -> GHC.Types.False
                             Duckling.Quantity.Types.Custom b1
                             -> case a1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                                case b1 of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                                case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild3 {
                                  DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True } } } }
                        GHC.Types.True -> GHC.Types.True } }) -}
cc507958932a6d40d35b817e57a382bb
  $fOrdUnit_$c<= ::
    Duckling.Quantity.Types.Unit
    -> Duckling.Quantity.Types.Unit -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Duckling.Quantity.Types.Unit)
                   (y :: Duckling.Quantity.Types.Unit) ->
                 case x of wild {
                   DEFAULT
                   -> let {
                        a# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit wild
                      } in
                      let {
                        b# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit y
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# a# b#) of wild1 {
                        GHC.Types.False
                        -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==# a# b#)
                        GHC.Types.True -> GHC.Types.True }
                   Duckling.Quantity.Types.Custom a1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>#
                                (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit y)
                                2#) of wild1 {
                        GHC.Types.False
                        -> case y of wild2 {
                             DEFAULT -> GHC.Types.False
                             Duckling.Quantity.Types.Custom b1
                             -> case a1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                                case b1 of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                                case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild3 {
                                  DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False } } } }
                        GHC.Types.True -> GHC.Types.True } }) -}
cc507958932a6d40d35b817e57a382bb
  $fOrdUnit_$c> ::
    Duckling.Quantity.Types.Unit
    -> Duckling.Quantity.Types.Unit -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Duckling.Quantity.Types.Unit)
                   (y :: Duckling.Quantity.Types.Unit) ->
                 case x of wild {
                   DEFAULT
                   -> let {
                        a# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit wild
                      } in
                      let {
                        b# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit y
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# a# b#) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# a# b#) of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False }
                        GHC.Types.True -> GHC.Types.False }
                   Duckling.Quantity.Types.Custom a1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>#
                                (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit y)
                                2#) of wild1 {
                        GHC.Types.False
                        -> case y of wild2 {
                             DEFAULT -> GHC.Types.True
                             Duckling.Quantity.Types.Custom b1
                             -> case a1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                                case b1 of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                                case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild3 {
                                  DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True } } } }
                        GHC.Types.True -> GHC.Types.False } }) -}
cc507958932a6d40d35b817e57a382bb
  $fOrdUnit_$c>= ::
    Duckling.Quantity.Types.Unit
    -> Duckling.Quantity.Types.Unit -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Duckling.Quantity.Types.Unit)
                   (y :: Duckling.Quantity.Types.Unit) ->
                 case x of wild {
                   DEFAULT
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<#
                                (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit wild)
                                (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit y)) of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False }
                   Duckling.Quantity.Types.Custom a1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>#
                                (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit y)
                                2#) of wild1 {
                        GHC.Types.False
                        -> case y of wild2 {
                             DEFAULT -> GHC.Types.True
                             Duckling.Quantity.Types.Custom b1
                             -> case a1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                                case b1 of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                                case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild3 {
                                  DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False } } } }
                        GHC.Types.True -> GHC.Types.False } }) -}
cc507958932a6d40d35b817e57a382bb
  $fOrdUnit_$ccompare ::
    Duckling.Quantity.Types.Unit
    -> Duckling.Quantity.Types.Unit -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Duckling.Quantity.Types.Unit)
                   (b :: Duckling.Quantity.Types.Unit) ->
                 case a of wild {
                   DEFAULT
                   -> let {
                        a# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit wild
                      } in
                      let {
                        b# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit b
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# a# b#) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# a# b#) of wild2 {
                             GHC.Types.False -> GHC.Types.GT GHC.Types.True -> GHC.Types.EQ }
                        GHC.Types.True -> GHC.Types.LT }
                   Duckling.Quantity.Types.Custom a1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>#
                                (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit b)
                                2#) of wild1 {
                        GHC.Types.False
                        -> case b of wild2 {
                             DEFAULT -> GHC.Types.GT
                             Duckling.Quantity.Types.Custom b1
                             -> Data.Text.$fOrdText_$ccompare a1 b1 }
                        GHC.Types.True -> GHC.Types.LT } }) -}
cc507958932a6d40d35b817e57a382bb
  $fOrdUnit_$cmax ::
    Duckling.Quantity.Types.Unit
    -> Duckling.Quantity.Types.Unit -> Duckling.Quantity.Types.Unit
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Duckling.Quantity.Types.Unit)
                   (y :: Duckling.Quantity.Types.Unit) ->
                 case x of wild {
                   DEFAULT
                   -> let {
                        a# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit wild
                      } in
                      let {
                        b# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit y
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# a# b#) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# a# b#) of wild2 {
                             GHC.Types.False -> wild GHC.Types.True -> y }
                        GHC.Types.True -> y }
                   Duckling.Quantity.Types.Custom a1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>#
                                (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit y)
                                2#) of wild1 {
                        GHC.Types.False
                        -> case y of wild2 {
                             DEFAULT -> wild
                             Duckling.Quantity.Types.Custom b1
                             -> case a1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                                case b1 of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                                case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild3 {
                                  DEFAULT -> wild2 GHC.Types.GT -> wild } } } }
                        GHC.Types.True -> y } }) -}
cc507958932a6d40d35b817e57a382bb
  $fOrdUnit_$cmin ::
    Duckling.Quantity.Types.Unit
    -> Duckling.Quantity.Types.Unit -> Duckling.Quantity.Types.Unit
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Duckling.Quantity.Types.Unit)
                   (y :: Duckling.Quantity.Types.Unit) ->
                 case x of wild {
                   DEFAULT
                   -> let {
                        a# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit wild
                      } in
                      let {
                        b# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit y
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# a# b#) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# a# b#) of wild2 {
                             GHC.Types.False -> y GHC.Types.True -> wild }
                        GHC.Types.True -> wild }
                   Duckling.Quantity.Types.Custom a1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>#
                                (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit y)
                                2#) of wild1 {
                        GHC.Types.False
                        -> case y of wild2 {
                             DEFAULT -> wild2
                             Duckling.Quantity.Types.Custom b1
                             -> case a1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                                case b1 of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                                case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild3 {
                                  DEFAULT -> wild GHC.Types.GT -> wild2 } } } }
                        GHC.Types.True -> wild } }) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fResolveQuantityData ::
    Duckling.Resolve.Resolve Duckling.Quantity.Types.QuantityData
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.QuantityData
                  Duckling.Quantity.Types.$fEqQuantityValue
                    `cast`
                  (GHC.Classes.Eq
                     (Sym (Duckling.Quantity.Types.D:R:ResolvedValueQuantityData[0])))_R
                  Duckling.Quantity.Types.$fShowQuantityValue
                    `cast`
                  (GHC.Show.Show
                     (Sym (Duckling.Quantity.Types.D:R:ResolvedValueQuantityData[0])))_R
                  Duckling.Quantity.Types.$fToJSONQuantityValue
                    `cast`
                  (Data.Aeson.Types.ToJSON.ToJSON
                     (Sym (Duckling.Quantity.Types.D:R:ResolvedValueQuantityData[0])))_R
                  Duckling.Quantity.Types.$fResolveQuantityData_$cresolve -}
be6bba9b7c724f13379a9669ac27fcf8
  $fResolveQuantityData_$cresolve ::
    Duckling.Resolve.Context
    -> Duckling.Resolve.Options
    -> Duckling.Quantity.Types.QuantityData
    -> GHC.Base.Maybe
         (Duckling.Resolve.ResolvedValue
            Duckling.Quantity.Types.QuantityData,
          GHC.Types.Bool)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,A><L,A><S(LSLLL),1*U(U,U,U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Duckling.Resolve.Context)
                   (w1 :: Duckling.Resolve.Options)
                   (w2 :: Duckling.Quantity.Types.QuantityData) ->
                 case w2 of ww { Duckling.Quantity.Types.QuantityData ww1 ww2 ww3 ww4 ww5 ->
                 Duckling.Quantity.Types.$w$cresolve ww1 ww2 ww3 ww4 ww5 }) -}
8eb2fb9057740ab13264d610f0e647d3
  $fShowIntervalDirection ::
    GHC.Show.Show Duckling.Quantity.Types.IntervalDirection
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.IntervalDirection
                  Duckling.Quantity.Types.$fShowIntervalDirection_$cshowsPrec
                  Duckling.Quantity.Types.$fShowIntervalDirection_$cshow
                  Duckling.Quantity.Types.$fShowIntervalDirection_$cshowList -}
8eb2fb9057740ab13264d610f0e647d3
  $fShowIntervalDirection1 ::
    Duckling.Quantity.Types.IntervalDirection -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Duckling.Quantity.Types.IntervalDirection)
                   (eta :: GHC.Base.String) ->
                 case ds of wild {
                   Duckling.Quantity.Types.Above
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Duckling.Quantity.Types.$fShowQuantityValue3)
                        eta
                   Duckling.Quantity.Types.Under
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Duckling.Quantity.Types.$fShowQuantityValue2)
                        eta }) -}
8eb2fb9057740ab13264d610f0e647d3
  $fShowIntervalDirection_$cshow ::
    Duckling.Quantity.Types.IntervalDirection -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Duckling.Quantity.Types.IntervalDirection) ->
                 case x of wild {
                   Duckling.Quantity.Types.Above
                   -> Duckling.Quantity.Types.$fShowQuantityValue3
                   Duckling.Quantity.Types.Under
                   -> Duckling.Quantity.Types.$fShowQuantityValue2 }) -}
8eb2fb9057740ab13264d610f0e647d3
  $fShowIntervalDirection_$cshowList ::
    [Duckling.Quantity.Types.IntervalDirection] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Duckling.Quantity.Types.IntervalDirection
                   Duckling.Quantity.Types.$fShowIntervalDirection1) -}
8eb2fb9057740ab13264d610f0e647d3
  $fShowIntervalDirection_$cshowsPrec ::
    GHC.Types.Int
    -> Duckling.Quantity.Types.IntervalDirection -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: Duckling.Quantity.Types.IntervalDirection)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   Duckling.Quantity.Types.Above
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Duckling.Quantity.Types.$fShowQuantityValue3)
                        eta
                   Duckling.Quantity.Types.Under
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Duckling.Quantity.Types.$fShowQuantityValue2)
                        eta }) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fShowQuantityData ::
    GHC.Show.Show Duckling.Quantity.Types.QuantityData
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.QuantityData
                  Duckling.Quantity.Types.$fShowQuantityData_$cshowsPrec
                  Duckling.Quantity.Types.$fShowQuantityData_$cshow
                  Duckling.Quantity.Types.$fShowQuantityData_$cshowList -}
be6bba9b7c724f13379a9669ac27fcf8
  $fShowQuantityData1 ::
    Duckling.Quantity.Types.QuantityData -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Duckling.Quantity.Types.QuantityData) ->
                 case w of ww { Duckling.Quantity.Types.QuantityData ww1 ww2 ww3 ww4 ww5 ->
                 Duckling.Quantity.Types.$w$cshowsPrec2 0# ww1 ww2 ww3 ww4 ww5 }) -}
60802aed1527658cb634a220f540615e
  $fShowQuantityData2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "maxValue = "#) -}
6745796c76d359e4381da1c7941aaaf7
  $fShowQuantityData3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "minValue = "#) -}
269d55425e94ac72242589dc298d0e2d
  $fShowQuantityData4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "aproduct = "#) -}
4efd2918ef7fd302aa82d4cf134caa45
  $fShowQuantityData5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "value = "#) -}
5635ca4cb484c0b6709ba2966debd43d
  $fShowQuantityData6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "unit = "#) -}
0d0c7cabefe8f01e86e1eec18290dc04
  $fShowQuantityData7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "QuantityData {"#) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fShowQuantityData_$cshow ::
    Duckling.Quantity.Types.QuantityData -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Duckling.Quantity.Types.QuantityData) ->
                 Duckling.Quantity.Types.$fShowQuantityData_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fShowQuantityData_$cshowList ::
    [Duckling.Quantity.Types.QuantityData] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Duckling.Quantity.Types.QuantityData
                   Duckling.Quantity.Types.$fShowQuantityData1) -}
be6bba9b7c724f13379a9669ac27fcf8
  $fShowQuantityData_$cshowsPrec ::
    GHC.Types.Int
    -> Duckling.Quantity.Types.QuantityData -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Duckling.Quantity.Types.QuantityData) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Duckling.Quantity.Types.QuantityData ww3 ww4 ww5 ww6 ww7 ->
                 Duckling.Quantity.Types.$w$cshowsPrec2
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7 } }) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fShowQuantityValue ::
    GHC.Show.Show Duckling.Quantity.Types.QuantityValue
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.QuantityValue
                  Duckling.Quantity.Types.$fShowQuantityValue_$cshowsPrec1
                  Duckling.Quantity.Types.$fShowQuantityValue_$cshow
                  Duckling.Quantity.Types.$fShowQuantityValue_$cshowList -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fShowQuantityValue1 ::
    Duckling.Quantity.Types.QuantityValue -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Duckling.Quantity.Types.QuantityValue) ->
                 Duckling.Quantity.Types.$w$cshowsPrec 0# w) -}
61246fc7654b793802584bdf937bc7a2
  $fShowQuantityValue10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
90364e6aad819b882e3c725b1341e30c
  $fShowQuantityValue11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Unnamed"#) -}
0047bf3d66d4133fac08e106ab935c98
  $fShowQuantityValue12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Teaspoon"#) -}
18e6ecfadfc167346194f3dc222f61cc
  $fShowQuantityValue13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Tablespoon"#) -}
0580a2ffe197e74f2be52e04aa16bdf9
  $fShowQuantityValue14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Quart"#) -}
4c12b73200565ac4346bbf199ca9b692
  $fShowQuantityValue15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Pound"#) -}
698462e775e9611d1984f5b7e5c931f2
  $fShowQuantityValue16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Pint"#) -}
9585f2a764a0d385411c048ebaa38e90
  $fShowQuantityValue17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Ounce"#) -}
de26ff9829362589a0d5f0ff985169d1
  $fShowQuantityValue18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Gram"#) -}
531ab429143aaec13c41ace051d5f1a6
  $fShowQuantityValue19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Dish"#) -}
ba7c1dc59e58d50b8ac3f52ed4e63e48
  $fShowQuantityValue2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Under"#) -}
fcaaf30d5446a61cc7e67c102e5b60d8
  $fShowQuantityValue20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Custom "#) -}
456a424a63e0e66034766ff8261af7a6
  $fShowQuantityValue21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Cup"#) -}
10aaa1167c4e5816bbbc2f063bc14f3e
  $fShowQuantityValue22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Bowl"#) -}
6a3ca87c448430555a6c3b021648b8bc
  $fShowQuantityValue23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "vUnit = "#) -}
27c55f4fb062e00ff19a4d8e8bcbfd0b
  $fShowQuantityValue24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SingleValue {"#) -}
c97363030b63d974d5c12029748ccb1e
  $fShowQuantityValue25 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
98437496b2162f51cab975b5857285d5
  $fShowQuantityValue26 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows4
                   (GHC.Types.[] @ GHC.Types.Char)) -}
95b4bbea1e0add3c3e168a39532da215
  $fShowQuantityValue3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Above"#) -}
2b4df0b7f88b44b8856e1517c4289818
  $fShowQuantityValue4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OpenIntervalValue "#) -}
5b4dd7d933d3787568dd1fe6ee61ed8d
  $fShowQuantityValue5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "IntervalValue "#) -}
41e1c37eed2ec3fa88fecc213e2cd5d8
  $fShowQuantityValue6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SimpleValue "#) -}
e63b61896163dcdcfa240bf0c5c71008
  $fShowQuantityValue7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
31215e21c7440c2a2b07e95890aeb722
  $fShowQuantityValue8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "vProduct = "#) -}
c48732e38d72ef77c714974a22cc8bad
  $fShowQuantityValue9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "vValue = "#) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fShowQuantityValue_$cshow ::
    Duckling.Quantity.Types.QuantityValue -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Duckling.Quantity.Types.QuantityValue) ->
                 case x of wild {
                   Duckling.Quantity.Types.SimpleValue b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Quantity.Types.$fShowQuantityValue6
                        (case b1 of ww { Duckling.Quantity.Types.SingleValue ww1 ww2 ww3 ->
                         Duckling.Quantity.Types.$w$cshowsPrec1
                           11#
                           ww1
                           ww2
                           ww3
                           (GHC.Types.[] @ GHC.Types.Char) })
                   Duckling.Quantity.Types.IntervalValue b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Quantity.Types.$fShowQuantityValue5
                        (case b1 of ww { (,) ww1 ww2 ->
                         GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.shows7
                           (case ww1 of ww4 { Duckling.Quantity.Types.SingleValue ww5 ww6 ww7 ->
                            Duckling.Quantity.Types.$w$cshowsPrec1
                              0#
                              ww5
                              ww6
                              ww7
                              (GHC.Types.:
                                 @ GHC.Types.Char
                                 GHC.Show.shows5
                                 (GHC.Show.$fShow(,)_$sgo
                                    Duckling.Quantity.Types.$fShowQuantityValue26
                                    (case ww2 of ww8 { Duckling.Quantity.Types.SingleValue ww9 ww10 ww11 ->
                                     Duckling.Quantity.Types.$w$cshowsPrec1 0# ww9 ww10 ww11 })
                                    (GHC.Types.[] @ GHC.Show.ShowS))) }) })
                   Duckling.Quantity.Types.OpenIntervalValue b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Quantity.Types.$fShowQuantityValue4
                        (case b1 of ww { (,) ww1 ww2 ->
                         GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.shows7
                           (case ww1 of ww4 { Duckling.Quantity.Types.SingleValue ww5 ww6 ww7 ->
                            Duckling.Quantity.Types.$w$cshowsPrec1
                              0#
                              ww5
                              ww6
                              ww7
                              (GHC.Types.:
                                 @ GHC.Types.Char
                                 GHC.Show.shows5
                                 (GHC.Show.$fShow(,)_$sgo
                                    Duckling.Quantity.Types.$fShowQuantityValue26
                                    (\ (eta :: GHC.Base.String) ->
                                     case ww2 of wild1 {
                                       Duckling.Quantity.Types.Above
                                       -> GHC.Base.++
                                            @ GHC.Types.Char
                                            Duckling.Quantity.Types.$fShowQuantityValue3
                                            eta
                                       Duckling.Quantity.Types.Under
                                       -> GHC.Base.++
                                            @ GHC.Types.Char
                                            Duckling.Quantity.Types.$fShowQuantityValue2
                                            eta })
                                    (GHC.Types.[] @ GHC.Show.ShowS))) }) }) }) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fShowQuantityValue_$cshowList ::
    [Duckling.Quantity.Types.QuantityValue] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Duckling.Quantity.Types.QuantityValue
                   Duckling.Quantity.Types.$fShowQuantityValue1) -}
cc507958932a6d40d35b817e57a382bb
  $fShowQuantityValue_$cshowsPrec ::
    GHC.Types.Int -> Duckling.Quantity.Types.Unit -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ (ds :: GHC.Types.Int)
                   (ds1 :: Duckling.Quantity.Types.Unit)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   Duckling.Quantity.Types.Bowl
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Quantity.Types.$fShowQuantityValue22
                        eta
                   Duckling.Quantity.Types.Cup
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Quantity.Types.$fShowQuantityValue21
                        eta
                   Duckling.Quantity.Types.Custom b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             Duckling.Quantity.Types.$fShowQuantityValue20
                             (case Data.Text.Show.$w$cshowsPrec b1 eta of ww { (#,#) ww1 ww2 ->
                              GHC.Types.: @ GHC.Types.Char ww1 ww2 })
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Duckling.Quantity.Types.$fShowQuantityValue20
                                (case Data.Text.Show.$w$cshowsPrec
                                        b1
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.shows4
                                           eta) of ww { (#,#) ww1 ww2 ->
                                 GHC.Types.: @ GHC.Types.Char ww1 ww2 })) } }
                   Duckling.Quantity.Types.Dish
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Quantity.Types.$fShowQuantityValue19
                        eta
                   Duckling.Quantity.Types.Gram
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Quantity.Types.$fShowQuantityValue18
                        eta
                   Duckling.Quantity.Types.Ounce
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Quantity.Types.$fShowQuantityValue17
                        eta
                   Duckling.Quantity.Types.Pint
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Quantity.Types.$fShowQuantityValue16
                        eta
                   Duckling.Quantity.Types.Pound
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Quantity.Types.$fShowQuantityValue15
                        eta
                   Duckling.Quantity.Types.Quart
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Quantity.Types.$fShowQuantityValue14
                        eta
                   Duckling.Quantity.Types.Tablespoon
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Quantity.Types.$fShowQuantityValue13
                        eta
                   Duckling.Quantity.Types.Teaspoon
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Quantity.Types.$fShowQuantityValue12
                        eta
                   Duckling.Quantity.Types.Unnamed
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Quantity.Types.$fShowQuantityValue11
                        eta }) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fShowQuantityValue_$cshowsPrec1 ::
    GHC.Types.Int
    -> Duckling.Quantity.Types.QuantityValue -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Duckling.Quantity.Types.QuantityValue) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Duckling.Quantity.Types.$w$cshowsPrec ww1 w1 }) -}
e64b9042dac36283e0d466a7b36615e2
  $fShowSingleValue ::
    GHC.Show.Show Duckling.Quantity.Types.SingleValue
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.SingleValue
                  Duckling.Quantity.Types.$fShowSingleValue_$cshowsPrec
                  Duckling.Quantity.Types.$fShowSingleValue_$cshow
                  Duckling.Quantity.Types.$fShowSingleValue_$cshowList -}
e64b9042dac36283e0d466a7b36615e2
  $fShowSingleValue1 ::
    Duckling.Quantity.Types.SingleValue -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Duckling.Quantity.Types.SingleValue) ->
                 case w of ww { Duckling.Quantity.Types.SingleValue ww1 ww2 ww3 ->
                 Duckling.Quantity.Types.$w$cshowsPrec1 0# ww1 ww2 ww3 }) -}
e64b9042dac36283e0d466a7b36615e2
  $fShowSingleValue_$cshow ::
    Duckling.Quantity.Types.SingleValue -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,1*U(U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Duckling.Quantity.Types.SingleValue) ->
                 Duckling.Quantity.Types.$fShowSingleValue_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
e64b9042dac36283e0d466a7b36615e2
  $fShowSingleValue_$cshowList ::
    [Duckling.Quantity.Types.SingleValue] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Duckling.Quantity.Types.SingleValue
                   Duckling.Quantity.Types.$fShowSingleValue1) -}
e64b9042dac36283e0d466a7b36615e2
  $fShowSingleValue_$cshowsPrec ::
    GHC.Types.Int
    -> Duckling.Quantity.Types.SingleValue -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(U,1*U(U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Duckling.Quantity.Types.SingleValue) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Duckling.Quantity.Types.SingleValue ww3 ww4 ww5 ->
                 Duckling.Quantity.Types.$w$cshowsPrec1 ww1 ww3 ww4 ww5 } }) -}
cc507958932a6d40d35b817e57a382bb
  $fShowUnit :: GHC.Show.Show Duckling.Quantity.Types.Unit
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.Unit
                  Duckling.Quantity.Types.$fShowQuantityValue_$cshowsPrec
                  Duckling.Quantity.Types.$fShowUnit_$cshow
                  Duckling.Quantity.Types.$fShowUnit_$cshowList -}
cc507958932a6d40d35b817e57a382bb
  $fShowUnit1 :: Duckling.Quantity.Types.Unit -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Duckling.Quantity.Types.$fShowQuantityValue_$cshowsPrec
                   Duckling.Quantity.Types.$fShowQuantityValue25) -}
cc507958932a6d40d35b817e57a382bb
  $fShowUnit_$cshow ::
    Duckling.Quantity.Types.Unit -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Duckling.Quantity.Types.Unit) ->
                 case x of wild {
                   Duckling.Quantity.Types.Bowl
                   -> Duckling.Quantity.Types.$fShowQuantityValue22
                   Duckling.Quantity.Types.Cup
                   -> Duckling.Quantity.Types.$fShowQuantityValue21
                   Duckling.Quantity.Types.Custom b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Duckling.Quantity.Types.$fShowQuantityValue20
                        (case Data.Text.Show.$w$cshowsPrec
                                b1
                                (GHC.Types.[] @ GHC.Types.Char) of ww { (#,#) ww1 ww2 ->
                         GHC.Types.: @ GHC.Types.Char ww1 ww2 })
                   Duckling.Quantity.Types.Dish
                   -> Duckling.Quantity.Types.$fShowQuantityValue19
                   Duckling.Quantity.Types.Gram
                   -> Duckling.Quantity.Types.$fShowQuantityValue18
                   Duckling.Quantity.Types.Ounce
                   -> Duckling.Quantity.Types.$fShowQuantityValue17
                   Duckling.Quantity.Types.Pint
                   -> Duckling.Quantity.Types.$fShowQuantityValue16
                   Duckling.Quantity.Types.Pound
                   -> Duckling.Quantity.Types.$fShowQuantityValue15
                   Duckling.Quantity.Types.Quart
                   -> Duckling.Quantity.Types.$fShowQuantityValue14
                   Duckling.Quantity.Types.Tablespoon
                   -> Duckling.Quantity.Types.$fShowQuantityValue13
                   Duckling.Quantity.Types.Teaspoon
                   -> Duckling.Quantity.Types.$fShowQuantityValue12
                   Duckling.Quantity.Types.Unnamed
                   -> Duckling.Quantity.Types.$fShowQuantityValue11 }) -}
cc507958932a6d40d35b817e57a382bb
  $fShowUnit_$cshowList ::
    [Duckling.Quantity.Types.Unit] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Duckling.Quantity.Types.Unit
                   Duckling.Quantity.Types.$fShowUnit1) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fToJSONQuantityValue ::
    Data.Aeson.Types.ToJSON.ToJSON
      Duckling.Quantity.Types.QuantityValue
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.QuantityValue
                  Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON
                  Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoEncoding
                  Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSONList
                  Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoEncodingList -}
26d9877227c313a3b53624eb6dc15240
  $fToJSONQuantityValue1 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "to"#) -}
d378134181d8d6ff0169b0c6d3ff95df
  $fToJSONQuantityValue2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "product"#) -}
030e950505b7c7186a43c88cc991d2fe
  $fToJSONQuantityValue3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "unit"#) -}
470eb32b0262e2340c5ed2c3a117a8a8
  $fToJSONQuantityValue4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "value"#) -}
cab867e19d199e18f2c8cbb836f6fd2c
  $fToJSONQuantityValue5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "from"#) -}
5240fb1cc9c49df8a497d27bd0c2fb0e
  $fToJSONQuantityValue6 :: Data.Aeson.Types.Internal.Pair
  {- Strictness: m,
     Unfolding: ((Duckling.Quantity.Types.$fToJSONQuantityValue8,
                  Duckling.Quantity.Types.$fToJSONQuantityValue7)) -}
f00b5c3e705b3049ae40787a553bda8b
  $fToJSONQuantityValue7 :: Data.Aeson.Types.Internal.Value
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "interval"# of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.String dt }) -}
a48c44c8964ecd8db10693a546c5005f
  $fToJSONQuantityValue8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "type"#) -}
f072747012918d176c203a5b0ce2ed04
  $fToJSONQuantityValue9 :: Data.Aeson.Types.Internal.Value
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "value"# of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.String dt }) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fToJSONQuantityValue_$ctoEncoding ::
    Duckling.Quantity.Types.QuantityValue
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Duckling.Quantity.Types.QuantityValue) ->
                 Data.Aeson.Encoding.Internal.value
                   (Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON eta)) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fToJSONQuantityValue_$ctoEncodingList ::
    [Duckling.Quantity.Types.QuantityValue]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Duckling.Quantity.Types.QuantityValue]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Duckling.Quantity.Types.QuantityValue
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Duckling.Quantity.Types.QuantityValue)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON
                                              v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Duckling.Quantity.Types.QuantityValue>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fToJSONQuantityValue_$ctoJSON ::
    Duckling.Quantity.Types.QuantityValue
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Duckling.Quantity.Types.QuantityValue) ->
                 case Duckling.Quantity.Types.$w$ctoJSON w of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.Object ww1 }) -}
e64b9042dac36283e0d466a7b36615e2
  $fToJSONQuantityValue_$ctoJSON1 ::
    Duckling.Quantity.Types.SingleValue
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(U),1*U)>m1,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Duckling.Quantity.Types.SingleValue) ->
                 case w of ww { Duckling.Quantity.Types.SingleValue ww1 ww2 ww3 ->
                 case Duckling.Quantity.Types.$w$ctoJSON1
                        ww1
                        ww2
                        ww3 of ww4 { Unit# ww5 ->
                 Data.Aeson.Types.Internal.Object ww5 } }) -}
cc507958932a6d40d35b817e57a382bb
  $fToJSONQuantityValue_$ctoJSON2 ::
    Duckling.Quantity.Types.Unit -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m3, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Duckling.Quantity.Types.Unit) ->
                 case Duckling.Quantity.Types.$w$ctoJSON2 w of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.String ww1 }) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $fToJSONQuantityValue_$ctoJSONList ::
    [Duckling.Quantity.Types.QuantityValue]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Duckling.Quantity.Types.QuantityValue]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Duckling.Quantity.Types.QuantityValue
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Duckling.Quantity.Types.QuantityValue
                                       c
                                       Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
e64b9042dac36283e0d466a7b36615e2
  $fToJSONSingleValue ::
    Data.Aeson.Types.ToJSON.ToJSON Duckling.Quantity.Types.SingleValue
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.SingleValue
                  Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON1
                  Duckling.Quantity.Types.$fToJSONSingleValue_$ctoEncoding
                  Duckling.Quantity.Types.$fToJSONSingleValue_$ctoJSONList
                  Duckling.Quantity.Types.$fToJSONSingleValue_$ctoEncodingList -}
e64b9042dac36283e0d466a7b36615e2
  $fToJSONSingleValue_$ctoEncoding ::
    Duckling.Quantity.Types.SingleValue
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(U),1*U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Duckling.Quantity.Types.SingleValue) ->
                 Data.Aeson.Encoding.Internal.value
                   (Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON1 eta)) -}
e64b9042dac36283e0d466a7b36615e2
  $fToJSONSingleValue_$ctoEncodingList ::
    [Duckling.Quantity.Types.SingleValue]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Duckling.Quantity.Types.SingleValue]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON1 x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Duckling.Quantity.Types.SingleValue
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Duckling.Quantity.Types.SingleValue)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON1
                                              v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Duckling.Quantity.Types.SingleValue>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
e64b9042dac36283e0d466a7b36615e2
  $fToJSONSingleValue_$ctoJSONList ::
    [Duckling.Quantity.Types.SingleValue]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Duckling.Quantity.Types.SingleValue]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Duckling.Quantity.Types.SingleValue
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Duckling.Quantity.Types.SingleValue
                                       c
                                       Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON1)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
cc507958932a6d40d35b817e57a382bb
  $fToJSONUnit ::
    Data.Aeson.Types.ToJSON.ToJSON Duckling.Quantity.Types.Unit
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Duckling.Quantity.Types.Unit
                  Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON2
                  Duckling.Quantity.Types.$fToJSONUnit_$ctoEncoding
                  Duckling.Quantity.Types.$fToJSONUnit_$ctoJSONList
                  Duckling.Quantity.Types.$fToJSONUnit_$ctoEncodingList -}
cc507958932a6d40d35b817e57a382bb
  $fToJSONUnit_$ctoEncoding ::
    Duckling.Quantity.Types.Unit
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Duckling.Quantity.Types.Unit) ->
                 Data.Aeson.Encoding.Internal.value
                   (Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON2 eta)) -}
cc507958932a6d40d35b817e57a382bb
  $fToJSONUnit_$ctoEncodingList ::
    [Duckling.Quantity.Types.Unit]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Duckling.Quantity.Types.Unit]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON2 x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Duckling.Quantity.Types.Unit
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Duckling.Quantity.Types.Unit)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON2
                                              v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Duckling.Quantity.Types.Unit>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
cc507958932a6d40d35b817e57a382bb
  $fToJSONUnit_$ctoJSONList ::
    [Duckling.Quantity.Types.Unit] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Duckling.Quantity.Types.Unit]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Duckling.Quantity.Types.Unit
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Duckling.Quantity.Types.Unit
                                       c
                                       Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON2)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
1eb7c81042e8c6988672894d4dff08a7
  $tc'Above :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16074443614116382476##
                   5596557549052124848##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tc'Above1) -}
f6e8a3c937601094aaf99b01edf8f333
  $tc'Above1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Above"#) -}
9ef81779ba768655d48e42dca717356d
  $tc'Bowl :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17435701799379673288##
                   5724511819096675644##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tc'Bowl1) -}
b610f87343dafb2591e3868d337bd529
  $tc'Bowl1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Bowl"#) -}
a589703482df0687028e02b299740e0a
  $tc'Cup :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12271225266915005286##
                   10974740219697474130##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tc'Cup1) -}
0b4bc91e7bb0c9aa5a065ac418704931
  $tc'Cup1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Cup"#) -}
a289df66970cf967e51f138aaf6b10b0
  $tc'Custom :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6165957099520233724##
                   11581460946640825675##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tc'Custom1) -}
95d14163bc9296cf485b5cded0112ec4
  $tc'Custom1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Custom"#) -}
d3903ead921b14b199e9cff360643f36
  $tc'Dish :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   434860514064491656##
                   11594078191741281217##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tc'Dish1) -}
fa04bc662bc76f4c4bb9edc66897ea11
  $tc'Dish1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Dish"#) -}
020a1bec2c54966d32a5875008e02a90
  $tc'Gram :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9053731340397304579##
                   8536611329049079648##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tc'Gram1) -}
37bd321e3de7b831268d37a95c5e84b2
  $tc'Gram1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Gram"#) -}
5617c6e340f07a1fcc97b080d49aa06e
  $tc'IntervalValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16388827056941545125##
                   1346386827498760224##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tc'IntervalValue1) -}
cb6817ffc75a3c59237e4d8a43630ffe
  $tc'IntervalValue1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'IntervalValue"#) -}
28a504a96e05a584352553d2cf24cd76
  $tc'OpenIntervalValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15203351594328593377##
                   12670900939009176311##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tc'OpenIntervalValue1) -}
d06f5bbcd106372330faef9d651ed29f
  $tc'OpenIntervalValue1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpenIntervalValue"#) -}
899f043ff00e994b18a36ed3e6b04987
  $tc'Ounce :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17140479876164114622##
                   13338509304731035846##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tc'Ounce1) -}
3d128df7995640fcca5abd563f339333
  $tc'Ounce1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Ounce"#) -}
780b0eeec02b104bc8b855705b549051
  $tc'Pint :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17221800590790313192##
                   10496804063987527302##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tc'Pint1) -}
f127d4c8da756210376df6a4bcc16501
  $tc'Pint1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Pint"#) -}
8ada78a44130bd79caddaea30b7e9d9d
  $tc'Pound :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2969292031793563024##
                   6078891139920017821##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tc'Pound1) -}
0528ec6d83f7b758c67a7ca2242cb9f6
  $tc'Pound1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Pound"#) -}
d15e42fd3ceb3509dbccfe4edea3592b
  $tc'QuantityData :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4451481625677018659##
                   5562109239529374521##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tc'QuantityData1) -}
769942fe49456e059c8b07f3976ba389
  $tc'QuantityData1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'QuantityData"#) -}
31c914da2f075991dec7788b9d7d2e3c
  $tc'Quart :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11250402613248294873##
                   18242412645673366303##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tc'Quart1) -}
43f083db5b505bce38207bb3abce104e
  $tc'Quart1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Quart"#) -}
b1555065a0ef0547f1e518688266cf3a
  $tc'SimpleValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3333799544996863215##
                   16469105616590972063##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tc'SimpleValue1) -}
1a226e72976d96452b453e95c40360af
  $tc'SimpleValue1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'SimpleValue"#) -}
3965b2ca7cc209367cdb507f2e5299e9
  $tc'SingleValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9429062294342245069##
                   13604269519192182036##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tc'SingleValue1) -}
291d4bbdcf262f0675812aeca2b5a8ae
  $tc'SingleValue1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'SingleValue"#) -}
c0e939164dab3b133e619dd5c730448e
  $tc'Tablespoon :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1293776892243817241##
                   10306246563735281585##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tc'Tablespoon1) -}
f4f40cb56215a07ecbeb7afadf555fb7
  $tc'Tablespoon1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Tablespoon"#) -}
71f15cbad2b7c5c8acb1d7a9f494ce6d
  $tc'Teaspoon :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4937095866634552950##
                   4027276880795872142##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tc'Teaspoon1) -}
dda84f57eb799635dbf658e0ee40e54d
  $tc'Teaspoon1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Teaspoon"#) -}
429ee1113326c6cfdf7660c500411886
  $tc'Under :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9951887441741449743##
                   199419995135736751##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tc'Under1) -}
607b8a8366f3a60d253467dd42a7b9ad
  $tc'Under1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Under"#) -}
0947199b6ce9567a7a3b684015a61dde
  $tc'Unnamed :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7892453085106672706##
                   16880029882564870432##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tc'Unnamed1) -}
962bd0e728fbef0cfae9b60e423e73ea
  $tc'Unnamed1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Unnamed"#) -}
fb2951a1c383fcc0191d2badb5b19556
  $tcIntervalDirection :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6512396355390227694##
                   13458763487139758156##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tcIntervalDirection1) -}
6bdd758afb8b96fc4e4746f5e98596a6
  $tcIntervalDirection1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "IntervalDirection"#) -}
22a457fe7670f6291361b6429fb7f5d3
  $tcQuantityData :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10073827756371623159##
                   14055505211735485052##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tcQuantityData1) -}
92dc4e59924efd80778fd2c2d028f5b0
  $tcQuantityData1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "QuantityData"#) -}
c1e9c2a3c745777fab871f970eebd675
  $tcQuantityValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11537268550920937769##
                   16884428558060176087##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tcQuantityValue1) -}
a4e81f4f0822cbf81f27544110535210
  $tcQuantityValue1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "QuantityValue"#) -}
e4e12ed0d1e41a828864315734476981
  $tcSingleValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9664871256951748960##
                   16960473552746282959##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tcSingleValue1) -}
0434daccf658cf5667147e82ed8d7ecf
  $tcSingleValue1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "SingleValue"#) -}
d37383f9ce020328c30b5ede0ce0330d
  $tcUnit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5501809355948722205##
                   13919173974574105076##
                   Duckling.Quantity.Types.$trModule
                   Duckling.Quantity.Types.$tcUnit1) -}
31ff7368c2c7356f9173ab0dae733840
  $tcUnit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Unit"#) -}
14d665140a3c375c9e11cc5b7ef87ea2
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Duckling.Quantity.Types.$trModule2
                   Duckling.Quantity.Types.$trModule1) -}
bd28a6f9ba0085be4f3ebe05a44b705f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Duckling.Quantity.Types"#) -}
2075eb2e66f70e235ee6f5119583decd
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"#) -}
4afa71d45df843d895a51d14eef75cf0
  $w$c< ::
    GHC.Base.Maybe Duckling.Quantity.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Duckling.Quantity.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
fdc9cb09ec73e1f063bd11e0b7e09f4c
  $w$c<1 ::
    Duckling.Quantity.Types.Unit
    -> GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Duckling.Quantity.Types.Unit
    -> GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U)><L,1*U><S,1*U><L,1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Duckling.Quantity.Types.Unit)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (ww3 :: Duckling.Quantity.Types.Unit)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Base.Maybe Data.Text.Internal.Text) ->
                 let {
                   $j :: GHC.Prim.Void# -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ (w :: GHC.Prim.Void#)[OneShot] ->
                     case ww1 of wild { GHC.Types.D# x ->
                     case ww4 of wild1 { GHC.Types.D# y ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<## x y) of wild2 {
                       GHC.Types.False
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.==## x y) of wild3 {
                            GHC.Types.False -> GHC.Types.False
                            GHC.Types.True
                            -> case ww2 of wild4 {
                                 GHC.Base.Nothing
                                 -> case ww5 of wild5 {
                                      GHC.Base.Nothing -> GHC.Types.False
                                      GHC.Base.Just ipv -> GHC.Types.True }
                                 GHC.Base.Just a2
                                 -> case ww5 of wild5 {
                                      GHC.Base.Nothing -> GHC.Types.False
                                      GHC.Base.Just b1 -> Data.Text.$fOrdText_$c< a2 b1 } } }
                       GHC.Types.True -> GHC.Types.True } } }
                 } in
                 case ww of wild {
                   DEFAULT
                   -> let {
                        a# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit wild
                      } in
                      let {
                        b# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit ww3
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# a# b#) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# a# b#) of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> $j GHC.Prim.void# }
                        GHC.Types.True -> GHC.Types.True }
                   Duckling.Quantity.Types.Custom a1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>#
                                (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit ww3)
                                2#) of wild1 {
                        GHC.Types.False
                        -> case ww3 of wild2 {
                             DEFAULT -> GHC.Types.False
                             Duckling.Quantity.Types.Custom b1
                             -> case a1 of ww6 { Data.Text.Internal.Text ww7 ww8 ww9 ->
                                case b1 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                                case Data.Text.$w$ccompare ww7 ww8 ww9 ww11 ww12 ww13 of wild3 {
                                  GHC.Types.LT -> GHC.Types.True
                                  GHC.Types.EQ -> $j GHC.Prim.void#
                                  GHC.Types.GT -> GHC.Types.False } } } }
                        GHC.Types.True -> GHC.Types.True } }) -}
b3a1a880eb93cd3b0cb6b4666a3a4e5b
  $w$c<= ::
    GHC.Base.Maybe Duckling.Quantity.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Duckling.Quantity.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
ea19e05fd30ebe91bda19aa5d157a94b
  $w$c<=1 ::
    Duckling.Quantity.Types.Unit
    -> GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Duckling.Quantity.Types.Unit
    -> GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U)><L,1*U><S,1*U><L,1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Duckling.Quantity.Types.Unit)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (ww3 :: Duckling.Quantity.Types.Unit)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Base.Maybe Data.Text.Internal.Text) ->
                 let {
                   $j :: GHC.Prim.Void# -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ (w :: GHC.Prim.Void#)[OneShot] ->
                     case ww1 of wild { GHC.Types.D# x ->
                     case ww4 of wild1 { GHC.Types.D# y ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<## x y) of wild2 {
                       GHC.Types.False
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.==## x y) of wild3 {
                            GHC.Types.False -> GHC.Types.False
                            GHC.Types.True
                            -> case ww2 of wild4 {
                                 GHC.Base.Nothing -> case ww5 of wild5 { DEFAULT -> GHC.Types.True }
                                 GHC.Base.Just a2
                                 -> case ww5 of wild5 {
                                      GHC.Base.Nothing -> GHC.Types.False
                                      GHC.Base.Just b1 -> Data.Text.$fOrdText_$c<= a2 b1 } } }
                       GHC.Types.True -> GHC.Types.True } } }
                 } in
                 case ww of wild {
                   DEFAULT
                   -> let {
                        a# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit wild
                      } in
                      let {
                        b# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit ww3
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# a# b#) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# a# b#) of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> $j GHC.Prim.void# }
                        GHC.Types.True -> GHC.Types.True }
                   Duckling.Quantity.Types.Custom a1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>#
                                (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit ww3)
                                2#) of wild1 {
                        GHC.Types.False
                        -> case ww3 of wild2 {
                             DEFAULT -> GHC.Types.False
                             Duckling.Quantity.Types.Custom b1
                             -> case a1 of ww6 { Data.Text.Internal.Text ww7 ww8 ww9 ->
                                case b1 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                                case Data.Text.$w$ccompare ww7 ww8 ww9 ww11 ww12 ww13 of wild3 {
                                  GHC.Types.LT -> GHC.Types.True
                                  GHC.Types.EQ -> $j GHC.Prim.void#
                                  GHC.Types.GT -> GHC.Types.False } } } }
                        GHC.Types.True -> GHC.Types.True } }) -}
a09e287dfaeb16c3320fcf95f7273896
  $w$c== ::
    GHC.Base.Maybe Duckling.Quantity.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Duckling.Quantity.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
857041cf8177785224b582af62caa4e0
  $w$c==1 ::
    Duckling.Quantity.Types.Unit
    -> GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Duckling.Quantity.Types.Unit
    -> GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U)><L,1*U><S,1*U><L,1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Duckling.Quantity.Types.Unit)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (ww3 :: Duckling.Quantity.Types.Unit)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Base.Maybe Data.Text.Internal.Text) ->
                 let {
                   $j :: GHC.Prim.Void# -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ (w :: GHC.Prim.Void#)[OneShot] ->
                     case ww1 of wild { GHC.Types.D# x ->
                     case ww4 of wild1 { GHC.Types.D# y ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.==## x y) of wild2 {
                       GHC.Types.False -> GHC.Types.False
                       GHC.Types.True
                       -> case ww2 of wild3 {
                            GHC.Base.Nothing
                            -> case ww5 of wild4 {
                                 GHC.Base.Nothing -> GHC.Types.True
                                 GHC.Base.Just ipv -> GHC.Types.False }
                            GHC.Base.Just a1
                            -> case ww5 of wild4 {
                                 GHC.Base.Nothing -> GHC.Types.False
                                 GHC.Base.Just b1 -> Data.Text.$fEqText_$c== a1 b1 } } } } }
                 } in
                 case ww of wild {
                   DEFAULT
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==#
                                (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit wild)
                                (GHC.Prim.dataToTag#
                                   @ Duckling.Quantity.Types.Unit
                                   ww3)) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True -> $j GHC.Prim.void# }
                   Duckling.Quantity.Types.Custom a1
                   -> case ww3 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag#
                                  @ Duckling.Quantity.Types.Unit
                                  wild1 of wild2 {
                             DEFAULT -> GHC.Types.False 2# -> $j GHC.Prim.void# }
                        Duckling.Quantity.Types.Custom b1
                        -> case a1 of wild2 { Data.Text.Internal.Text dt dt1 dt2 ->
                           case b1 of wild3 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# dt2 dt5) of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case {__pkg_ccall text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00 _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                                   -> GHC.Prim.Word#
                                                                                                                   -> GHC.Prim.ByteArray#
                                                                                                                   -> GHC.Prim.Word#
                                                                                                                   -> GHC.Prim.Word#
                                                                                                                   -> GHC.Prim.State#
                                                                                                                        GHC.Prim.RealWorld
                                                                                                                   -> (# GHC.Prim.State#
                                                                                                                           GHC.Prim.RealWorld,
                                                                                                                         GHC.Prim.Int# #)}
                                       dt
                                       (GHC.Prim.int2Word# dt1)
                                       dt3
                                       (GHC.Prim.int2Word# dt4)
                                       (GHC.Prim.int2Word# dt2)
                                       GHC.Prim.realWorld# of wild5 { (#,#) ds11 ds12 ->
                                case GHC.Prim.narrow32Int# ds12 of wild6 {
                                  DEFAULT -> GHC.Types.False
                                  0# -> $j GHC.Prim.void# } } } } } } }) -}
c1f1751f36d67bc50ec2b138f61aea29
  $w$c> ::
    GHC.Base.Maybe Duckling.Quantity.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Duckling.Quantity.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
ee76f263d6515146a38d948b2bf13565
  $w$c>1 ::
    Duckling.Quantity.Types.Unit
    -> GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Duckling.Quantity.Types.Unit
    -> GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U)><L,1*U><S,1*U><L,1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Duckling.Quantity.Types.Unit)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (ww3 :: Duckling.Quantity.Types.Unit)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Base.Maybe Data.Text.Internal.Text) ->
                 let {
                   $j :: GHC.Prim.Void# -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ (w :: GHC.Prim.Void#)[OneShot] ->
                     case ww1 of wild { GHC.Types.D# x ->
                     case ww4 of wild1 { GHC.Types.D# y ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<## x y) of wild2 {
                       GHC.Types.False
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.==## x y) of wild3 {
                            GHC.Types.False -> GHC.Types.True
                            GHC.Types.True
                            -> case ww2 of wild4 {
                                 GHC.Base.Nothing
                                 -> case ww5 of wild5 { DEFAULT -> GHC.Types.False }
                                 GHC.Base.Just a2
                                 -> case ww5 of wild5 {
                                      GHC.Base.Nothing -> GHC.Types.True
                                      GHC.Base.Just b1 -> Data.Text.$fOrdText_$c> a2 b1 } } }
                       GHC.Types.True -> GHC.Types.False } } }
                 } in
                 case ww of wild {
                   DEFAULT
                   -> let {
                        a# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit wild
                      } in
                      let {
                        b# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit ww3
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# a# b#) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# a# b#) of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> $j GHC.Prim.void# }
                        GHC.Types.True -> GHC.Types.False }
                   Duckling.Quantity.Types.Custom a1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>#
                                (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit ww3)
                                2#) of wild1 {
                        GHC.Types.False
                        -> case ww3 of wild2 {
                             DEFAULT -> GHC.Types.True
                             Duckling.Quantity.Types.Custom b1
                             -> case a1 of ww6 { Data.Text.Internal.Text ww7 ww8 ww9 ->
                                case b1 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                                case Data.Text.$w$ccompare ww7 ww8 ww9 ww11 ww12 ww13 of wild3 {
                                  GHC.Types.LT -> GHC.Types.False
                                  GHC.Types.EQ -> $j GHC.Prim.void#
                                  GHC.Types.GT -> GHC.Types.True } } } }
                        GHC.Types.True -> GHC.Types.False } }) -}
02299da82b31e136118475a780e966b1
  $w$c>= ::
    GHC.Base.Maybe Duckling.Quantity.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Duckling.Quantity.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
ca749ae0ef0c63c21aa942f9dc415f6b
  $w$c>=1 ::
    Duckling.Quantity.Types.Unit
    -> GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Duckling.Quantity.Types.Unit
    -> GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U)><L,1*U><S,1*U><L,1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Duckling.Quantity.Types.Unit)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (ww3 :: Duckling.Quantity.Types.Unit)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Base.Maybe Data.Text.Internal.Text) ->
                 let {
                   $j :: GHC.Prim.Void# -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ (w :: GHC.Prim.Void#)[OneShot] ->
                     case ww1 of wild { GHC.Types.D# x ->
                     case ww4 of wild1 { GHC.Types.D# y ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<## x y) of wild2 {
                       GHC.Types.False
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.==## x y) of wild3 {
                            GHC.Types.False -> GHC.Types.True
                            GHC.Types.True
                            -> case ww2 of wild4 {
                                 GHC.Base.Nothing
                                 -> case ww5 of wild5 {
                                      GHC.Base.Nothing -> GHC.Types.True
                                      GHC.Base.Just ipv -> GHC.Types.False }
                                 GHC.Base.Just a2
                                 -> case ww5 of wild5 {
                                      GHC.Base.Nothing -> GHC.Types.True
                                      GHC.Base.Just b1 -> Data.Text.$fOrdText_$c>= a2 b1 } } }
                       GHC.Types.True -> GHC.Types.False } } }
                 } in
                 case ww of wild {
                   DEFAULT
                   -> let {
                        a# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit wild
                      } in
                      let {
                        b# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit ww3
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# a# b#) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# a# b#) of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> $j GHC.Prim.void# }
                        GHC.Types.True -> GHC.Types.False }
                   Duckling.Quantity.Types.Custom a1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>#
                                (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit ww3)
                                2#) of wild1 {
                        GHC.Types.False
                        -> case ww3 of wild2 {
                             DEFAULT -> GHC.Types.True
                             Duckling.Quantity.Types.Custom b1
                             -> case a1 of ww6 { Data.Text.Internal.Text ww7 ww8 ww9 ->
                                case b1 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                                case Data.Text.$w$ccompare ww7 ww8 ww9 ww11 ww12 ww13 of wild3 {
                                  GHC.Types.LT -> GHC.Types.False
                                  GHC.Types.EQ -> $j GHC.Prim.void#
                                  GHC.Types.GT -> GHC.Types.True } } } }
                        GHC.Types.True -> GHC.Types.False } }) -}
113ad5ba4a6f5e143004221958fd50e8
  $w$ccompare ::
    GHC.Base.Maybe Duckling.Quantity.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Duckling.Quantity.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Types.Ordering
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
22dd68e854f47eef5fdbccc8dd7147bf
  $w$ccompare1 ::
    Duckling.Quantity.Types.Unit
    -> GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Duckling.Quantity.Types.Unit
    -> GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Types.Ordering
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U)><L,1*U><S,1*U><L,1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Duckling.Quantity.Types.Unit)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (ww3 :: Duckling.Quantity.Types.Unit)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Base.Maybe Data.Text.Internal.Text) ->
                 let {
                   $j :: GHC.Prim.Void# -> GHC.Types.Ordering
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ (w :: GHC.Prim.Void#)[OneShot] ->
                     case ww1 of wild { GHC.Types.D# x ->
                     case ww4 of wild1 { GHC.Types.D# y ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<## x y) of wild2 {
                       GHC.Types.False
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.==## x y) of wild3 {
                            GHC.Types.False -> GHC.Types.GT
                            GHC.Types.True
                            -> case ww2 of wild4 {
                                 GHC.Base.Nothing
                                 -> case ww5 of wild5 {
                                      GHC.Base.Nothing -> GHC.Types.EQ
                                      GHC.Base.Just ipv -> GHC.Types.LT }
                                 GHC.Base.Just a2
                                 -> case ww5 of wild5 {
                                      GHC.Base.Nothing -> GHC.Types.GT
                                      GHC.Base.Just b1 -> Data.Text.$fOrdText_$ccompare a2 b1 } } }
                       GHC.Types.True -> GHC.Types.LT } } }
                 } in
                 case ww of wild {
                   DEFAULT
                   -> let {
                        a# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit wild
                      } in
                      let {
                        b# :: GHC.Prim.Int#
                        = GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit ww3
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# a# b#) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# a# b#) of wild2 {
                             GHC.Types.False -> GHC.Types.GT
                             GHC.Types.True -> $j GHC.Prim.void# }
                        GHC.Types.True -> GHC.Types.LT }
                   Duckling.Quantity.Types.Custom a1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>#
                                (GHC.Prim.dataToTag# @ Duckling.Quantity.Types.Unit ww3)
                                2#) of wild1 {
                        GHC.Types.False
                        -> case ww3 of wild2 {
                             DEFAULT -> GHC.Types.GT
                             Duckling.Quantity.Types.Custom b1
                             -> case a1 of ww6 { Data.Text.Internal.Text ww7 ww8 ww9 ->
                                case b1 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                                case Data.Text.$w$ccompare ww7 ww8 ww9 ww11 ww12 ww13 of wild3 {
                                  GHC.Types.LT -> GHC.Types.LT
                                  GHC.Types.EQ -> $j GHC.Prim.void#
                                  GHC.Types.GT -> GHC.Types.GT } } } }
                        GHC.Types.True -> GHC.Types.LT } }) -}
cc507958932a6d40d35b817e57a382bb
  $w$chashWithSalt ::
    GHC.Prim.Int# -> Duckling.Quantity.Types.Unit -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Duckling.Quantity.Types.Unit) ->
                 case Duckling.Quantity.Types.$fGenericUnit1
                        @ GHC.Prim.Any
                        w of wild {
                   GHC.Generics.L1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1
                        -> case x1 of wild2 {
                             GHC.Generics.L1 x2
                             -> case x2 of tpl { DEFAULT ->
                                GHC.Prim.*# (GHC.Prim.*# ww 16777619#) 16777619# }
                             GHC.Generics.R1 x2
                             -> case x2 of wild3 {
                                  GHC.Generics.L1 x3
                                  -> case x3 of tpl { DEFAULT ->
                                     GHC.Prim.*#
                                       (GHC.Prim.xorI# (GHC.Prim.*# ww 16777619#) 1#)
                                       16777619# }
                                  GHC.Generics.R1 x3
                                  -> case x3
                                            `cast`
                                          (Trans
                                               (Trans
                                                    (GHC.Generics.N:M1[0]
                                                         <GHC.Generics.C>_P
                                                         <'GHC.Generics.MetaCons
                                                            "Custom"
                                                            'GHC.Generics.PrefixI
                                                            'GHC.Types.False>_P
                                                         <GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               'GHC.Base.Nothing
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.Rec0
                                                               Data.Text.Internal.Text)>_R)
                                                    (GHC.Generics.N:M1[0]
                                                         <GHC.Generics.S>_P
                                                         <'GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy>_P
                                                         <GHC.Generics.K1
                                                            GHC.Generics.R
                                                            Data.Text.Internal.Text>_R) <GHC.Prim.Any>_N)
                                               (GHC.Generics.N:K1[0]
                                                    <GHC.Generics.R>_P
                                                    <Data.Text.Internal.Text>_R
                                                    <GHC.Prim.Any>_P)) of wild4 { Data.Text.Internal.Text dt dt1 dt2 ->
                                     case {__pkg_ccall hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol hashable_fnv_hash_offset GHC.Prim.ByteArray#
                                                                                                                                         -> GHC.Prim.Int#
                                                                                                                                         -> GHC.Prim.Int#
                                                                                                                                         -> GHC.Prim.Int#
                                                                                                                                         -> GHC.Prim.State#
                                                                                                                                              GHC.Prim.RealWorld
                                                                                                                                         -> (# GHC.Prim.State#
                                                                                                                                                 GHC.Prim.RealWorld,
                                                                                                                                               GHC.Prim.Int# #)}
                                            dt
                                            (GHC.Prim.uncheckedIShiftL# dt1 1#)
                                            (GHC.Prim.uncheckedIShiftL# dt2 1#)
                                            (GHC.Prim.xorI# (GHC.Prim.*# ww 16777619#) 2#)
                                            GHC.Prim.realWorld# of wild5 { (#,#) ds1 ds2 ->
                                     ds2 } } } }
                        GHC.Generics.R1 x1
                        -> case x1 of wild2 {
                             GHC.Generics.L1 x2
                             -> case x2 of tpl { DEFAULT ->
                                GHC.Prim.*#
                                  (GHC.Prim.xorI# (GHC.Prim.*# ww 16777619#) 3#)
                                  16777619# }
                             GHC.Generics.R1 x2
                             -> case x2 of wild3 {
                                  GHC.Generics.L1 x3
                                  -> case x3 of tpl { DEFAULT ->
                                     GHC.Prim.*#
                                       (GHC.Prim.xorI# (GHC.Prim.*# ww 16777619#) 4#)
                                       16777619# }
                                  GHC.Generics.R1 x3
                                  -> case x3 of tpl { DEFAULT ->
                                     GHC.Prim.*#
                                       (GHC.Prim.xorI# (GHC.Prim.*# ww 16777619#) 5#)
                                       16777619# } } } }
                   GHC.Generics.R1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1
                        -> case x1 of wild2 {
                             GHC.Generics.L1 x2
                             -> case x2 of tpl { DEFAULT ->
                                GHC.Prim.*#
                                  (GHC.Prim.xorI# (GHC.Prim.*# ww 16777619#) 6#)
                                  16777619# }
                             GHC.Generics.R1 x2
                             -> case x2 of wild3 {
                                  GHC.Generics.L1 x3
                                  -> case x3 of tpl { DEFAULT ->
                                     GHC.Prim.*#
                                       (GHC.Prim.xorI# (GHC.Prim.*# ww 16777619#) 7#)
                                       16777619# }
                                  GHC.Generics.R1 x3
                                  -> case x3 of tpl { DEFAULT ->
                                     GHC.Prim.*#
                                       (GHC.Prim.xorI# (GHC.Prim.*# ww 16777619#) 8#)
                                       16777619# } } }
                        GHC.Generics.R1 x1
                        -> case x1 of wild2 {
                             GHC.Generics.L1 x2
                             -> case x2 of tpl { DEFAULT ->
                                GHC.Prim.*#
                                  (GHC.Prim.xorI# (GHC.Prim.*# ww 16777619#) 9#)
                                  16777619# }
                             GHC.Generics.R1 x2
                             -> case x2 of wild3 {
                                  GHC.Generics.L1 x3
                                  -> case x3 of tpl { DEFAULT ->
                                     GHC.Prim.*#
                                       (GHC.Prim.xorI# (GHC.Prim.*# ww 16777619#) 10#)
                                       16777619# }
                                  GHC.Generics.R1 x3
                                  -> case x3 of tpl { DEFAULT ->
                                     GHC.Prim.*#
                                       (GHC.Prim.xorI# (GHC.Prim.*# ww 16777619#) 11#)
                                       16777619# } } } } }) -}
be6bba9b7c724f13379a9669ac27fcf8
  $w$cresolve ::
    GHC.Base.Maybe Duckling.Quantity.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe
         (Duckling.Resolve.ResolvedValue
            Duckling.Quantity.Types.QuantityData,
          GHC.Types.Bool)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U><S,U><L,U><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.Maybe Duckling.Quantity.Types.Unit)
                   (ww1 :: GHC.Base.Maybe GHC.Types.Double)
                   (ww2 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (ww3 :: GHC.Base.Maybe GHC.Types.Double)
                   (ww4 :: GHC.Base.Maybe GHC.Types.Double) ->
                 let {
                   fail :: GHC.Prim.Void#
                           -> GHC.Base.Maybe
                                (Duckling.Resolve.ResolvedValue
                                   Duckling.Quantity.Types.QuantityData,
                                 GHC.Types.Bool)
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ (ds :: GHC.Prim.Void#)[OneShot] ->
                     case ww1 of wild {
                       GHC.Base.Nothing
                       -> case ww of wild1 {
                            GHC.Base.Nothing
                            -> (GHC.Base.Nothing
                                  @ (Duckling.Quantity.Types.QuantityValue, GHC.Types.Bool))
                                 `cast`
                               (GHC.Base.Maybe
                                  ((,)
                                     (Sub (Sym (Duckling.Quantity.Types.D:R:ResolvedValueQuantityData[0])))
                                     <GHC.Types.Bool>_R)_R)_R
                            GHC.Base.Just unit1
                            -> case ww3 of wild2 {
                                 GHC.Base.Nothing
                                 -> case ww4 of wild3 {
                                      GHC.Base.Nothing
                                      -> (GHC.Base.Nothing
                                            @ (Duckling.Quantity.Types.QuantityValue,
                                               GHC.Types.Bool))
                                           `cast`
                                         (GHC.Base.Maybe
                                            ((,)
                                               (Sub (Sym (Duckling.Quantity.Types.D:R:ResolvedValueQuantityData[0])))
                                               <GHC.Types.Bool>_R)_R)_R
                                      GHC.Base.Just to
                                      -> (GHC.Base.Just
                                            @ (Duckling.Quantity.Types.QuantityValue,
                                               GHC.Types.Bool)
                                            (Duckling.Quantity.Types.OpenIntervalValue
                                               (Duckling.Quantity.Types.SingleValue unit1 to ww2,
                                                Duckling.Quantity.Types.Under),
                                             GHC.Types.False))
                                           `cast`
                                         (GHC.Base.Maybe
                                            ((,)
                                               (Sub (Sym (Duckling.Quantity.Types.D:R:ResolvedValueQuantityData[0])))
                                               <GHC.Types.Bool>_R)_R)_R }
                                 GHC.Base.Just from
                                 -> case ww4 of wild3 {
                                      GHC.Base.Nothing
                                      -> (GHC.Base.Just
                                            @ (Duckling.Quantity.Types.QuantityValue,
                                               GHC.Types.Bool)
                                            (Duckling.Quantity.Types.OpenIntervalValue
                                               (Duckling.Quantity.Types.SingleValue unit1 from ww2,
                                                Duckling.Quantity.Types.Above),
                                             GHC.Types.False))
                                           `cast`
                                         (GHC.Base.Maybe
                                            ((,)
                                               (Sub (Sym (Duckling.Quantity.Types.D:R:ResolvedValueQuantityData[0])))
                                               <GHC.Types.Bool>_R)_R)_R
                                      GHC.Base.Just to
                                      -> (GHC.Base.Just
                                            @ (Duckling.Quantity.Types.QuantityValue,
                                               GHC.Types.Bool)
                                            (Duckling.Quantity.Types.IntervalValue
                                               (Duckling.Quantity.Types.SingleValue unit1 from ww2,
                                                Duckling.Quantity.Types.SingleValue unit1 to ww2),
                                             GHC.Types.False))
                                           `cast`
                                         (GHC.Base.Maybe
                                            ((,)
                                               (Sub (Sym (Duckling.Quantity.Types.D:R:ResolvedValueQuantityData[0])))
                                               <GHC.Types.Bool>_R)_R)_R } } }
                       GHC.Base.Just ipv
                       -> (GHC.Base.Nothing
                             @ (Duckling.Quantity.Types.QuantityValue, GHC.Types.Bool))
                            `cast`
                          (GHC.Base.Maybe
                             ((,)
                                (Sub (Sym (Duckling.Quantity.Types.D:R:ResolvedValueQuantityData[0])))
                                <GHC.Types.Bool>_R)_R)_R }
                 } in
                 case ww1 of wild {
                   GHC.Base.Nothing -> fail GHC.Prim.void#
                   GHC.Base.Just value1
                   -> case ww of wild1 {
                        GHC.Base.Nothing -> fail GHC.Prim.void#
                        GHC.Base.Just unit1
                        -> (GHC.Base.Just
                              @ (Duckling.Quantity.Types.QuantityValue, GHC.Types.Bool)
                              (Duckling.Quantity.Types.SimpleValue
                                 (Duckling.Quantity.Types.SingleValue unit1 value1 ww2),
                               GHC.Types.False))
                             `cast`
                           (GHC.Base.Maybe
                              ((,)
                                 (Sub (Sym (Duckling.Quantity.Types.D:R:ResolvedValueQuantityData[0])))
                                 <GHC.Types.Bool>_R)_R)_R } }) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Duckling.Quantity.Types.QuantityValue -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Duckling.Quantity.Types.QuantityValue) ->
                 case w of wild {
                   Duckling.Quantity.Types.SimpleValue b1
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = case b1 of ww1 { Duckling.Quantity.Types.SingleValue ww2 ww3 ww4 ->
                          Duckling.Quantity.Types.$w$cshowsPrec1 11# ww2 ww3 ww4 }
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Duckling.Quantity.Types.$fShowQuantityValue6
                             (g x)
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Duckling.Quantity.Types.$fShowQuantityValue6
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x))) }
                   Duckling.Quantity.Types.IntervalValue b1
                   -> let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Base.String) ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            Duckling.Quantity.Types.$fShowQuantityValue5
                            (case b1 of ww1 { (,) ww2 ww3 ->
                             GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.shows7
                               (case ww2 of ww4 { Duckling.Quantity.Types.SingleValue ww5 ww6 ww7 ->
                                Duckling.Quantity.Types.$w$cshowsPrec1
                                  0#
                                  ww5
                                  ww6
                                  ww7
                                  (GHC.Types.:
                                     @ GHC.Types.Char
                                     GHC.Show.shows5
                                     (GHC.Show.$fShow(,)_$sgo
                                        (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x)
                                        (case ww3 of ww8 { Duckling.Quantity.Types.SingleValue ww9 ww10 ww11 ->
                                         Duckling.Quantity.Types.$w$cshowsPrec1 0# ww9 ww10 ww11 })
                                        (GHC.Types.[] @ GHC.Show.ShowS))) }) })
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False -> p
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x)) }
                   Duckling.Quantity.Types.OpenIntervalValue b1
                   -> let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Base.String) ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            Duckling.Quantity.Types.$fShowQuantityValue4
                            (case b1 of ww1 { (,) ww2 ww3 ->
                             GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.shows7
                               (case ww2 of ww4 { Duckling.Quantity.Types.SingleValue ww5 ww6 ww7 ->
                                Duckling.Quantity.Types.$w$cshowsPrec1
                                  0#
                                  ww5
                                  ww6
                                  ww7
                                  (GHC.Types.:
                                     @ GHC.Types.Char
                                     GHC.Show.shows5
                                     (GHC.Show.$fShow(,)_$sgo
                                        (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x)
                                        (\ (eta :: GHC.Base.String) ->
                                         case ww3 of wild1 {
                                           Duckling.Quantity.Types.Above
                                           -> GHC.Base.++
                                                @ GHC.Types.Char
                                                Duckling.Quantity.Types.$fShowQuantityValue3
                                                eta
                                           Duckling.Quantity.Types.Under
                                           -> GHC.Base.++
                                                @ GHC.Types.Char
                                                Duckling.Quantity.Types.$fShowQuantityValue2
                                                eta })
                                        (GHC.Types.[] @ GHC.Show.ShowS))) }) })
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False -> p
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x)) } }) -}
815f9c0d872e857681ccad6b75635c32
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Duckling.Quantity.Types.Unit
    -> GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <S,U><L,U><L,1*U(U)><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Duckling.Quantity.Types.Unit)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Base.Maybe Data.Text.Internal.Text) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = case ww2 of ww4 { GHC.Types.D# ww5 ->
                     GHC.Float.$w$sshowSignedFloat
                       GHC.Float.$fShowDouble_$sshowFloat
                       Duckling.Quantity.Types.$fShowQuantityValue25
                       ww5 }
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ Data.Text.Internal.Text
                       Data.Text.Show.$fShowText
                       Duckling.Quantity.Types.$fShowQuantityValue25
                       ww3
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Duckling.Quantity.Types.$fShowQuantityValue24
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Duckling.Quantity.Types.$fShowQuantityValue23
                          (Duckling.Quantity.Types.$fShowQuantityValue_$cshowsPrec
                             Duckling.Quantity.Types.$fShowQuantityValue25
                             ww1
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Duckling.Quantity.Types.$fShowQuantityValue10
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Duckling.Quantity.Types.$fShowQuantityValue9
                                   (f (GHC.Base.++
                                         @ GHC.Types.Char
                                         Duckling.Quantity.Types.$fShowQuantityValue10
                                         (GHC.Base.++
                                            @ GHC.Types.Char
                                            Duckling.Quantity.Types.$fShowQuantityValue8
                                            (f1
                                               (GHC.Base.++
                                                  @ GHC.Types.Char
                                                  Duckling.Quantity.Types.$fShowQuantityValue7
                                                  x)))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p
                   GHC.Types.True
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x)) }) -}
f1936f6e88e8625567c007e2ca021196
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> GHC.Base.Maybe Duckling.Quantity.Types.Unit
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Show.ShowS
  {- Arity: 6, Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.Maybe Duckling.Quantity.Types.Unit)
                   (ww2 :: GHC.Base.Maybe GHC.Types.Double)
                   (ww3 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (ww4 :: GHC.Base.Maybe GHC.Types.Double)
                   (ww5 :: GHC.Base.Maybe GHC.Types.Double) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ Duckling.Quantity.Types.Unit
                       Duckling.Quantity.Types.$fShowUnit
                       Duckling.Quantity.Types.$fShowQuantityValue25
                       ww1
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ GHC.Types.Double
                       GHC.Float.$fShowDouble
                       Duckling.Quantity.Types.$fShowQuantityValue25
                       ww2
                 } in
                 let {
                   f2 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ Data.Text.Internal.Text
                       Data.Text.Show.$fShowText
                       Duckling.Quantity.Types.$fShowQuantityValue25
                       ww3
                 } in
                 let {
                   f3 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ GHC.Types.Double
                       GHC.Float.$fShowDouble
                       Duckling.Quantity.Types.$fShowQuantityValue25
                       ww4
                 } in
                 let {
                   f4 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ GHC.Types.Double
                       GHC.Float.$fShowDouble
                       Duckling.Quantity.Types.$fShowQuantityValue25
                       ww5
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Duckling.Quantity.Types.$fShowQuantityData7
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Duckling.Quantity.Types.$fShowQuantityData6
                          (f (GHC.Base.++
                                @ GHC.Types.Char
                                Duckling.Quantity.Types.$fShowQuantityValue10
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Duckling.Quantity.Types.$fShowQuantityData5
                                   (f1
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Duckling.Quantity.Types.$fShowQuantityValue10
                                         (GHC.Base.++
                                            @ GHC.Types.Char
                                            Duckling.Quantity.Types.$fShowQuantityData4
                                            (f2
                                               (GHC.Base.++
                                                  @ GHC.Types.Char
                                                  Duckling.Quantity.Types.$fShowQuantityValue10
                                                  (GHC.Base.++
                                                     @ GHC.Types.Char
                                                     Duckling.Quantity.Types.$fShowQuantityData3
                                                     (f3
                                                        (GHC.Base.++
                                                           @ GHC.Types.Char
                                                           Duckling.Quantity.Types.$fShowQuantityValue10
                                                           (GHC.Base.++
                                                              @ GHC.Types.Char
                                                              Duckling.Quantity.Types.$fShowQuantityData2
                                                              (f4
                                                                 (GHC.Base.++
                                                                    @ GHC.Types.Char
                                                                    Duckling.Quantity.Types.$fShowQuantityValue7
                                                                    x)))))))))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p
                   GHC.Types.True
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x)) }) -}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  $w$ctoJSON ::
    Duckling.Quantity.Types.QuantityValue
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Duckling.Quantity.Types.QuantityValue) ->
                 case w of wild {
                   Duckling.Quantity.Types.SimpleValue value1
                   -> case value1 of ww { Duckling.Quantity.Types.SingleValue ww1 ww2 ww3 ->
                      case Duckling.Quantity.Types.$w$ctoJSON1
                             ww1
                             ww2
                             ww3 of ww4 { Unit# ww5 ->
                      case Duckling.Quantity.Types.$fToJSONQuantityValue9 of v2 { DEFAULT ->
                      case Duckling.Quantity.Types.$fToJSONQuantityValue8 of ww6 { Data.Text.Internal.Text ww7 ww8 ww9 ->
                      case Duckling.Quantity.Types.$w$sinsert
                             @ Data.Aeson.Types.Internal.Value
                             ww7
                             ww8
                             ww9
                             v2
                             ww5 of dt { DEFAULT ->
                      (# dt #) } } } } }
                   Duckling.Quantity.Types.IntervalValue ds
                   -> case ds of wild1 { (,) from to ->
                      case Data.Aeson.Types.Internal.$sfromList1
                             @ Data.Aeson.Types.Internal.Value
                             (GHC.Types.:
                                @ Data.Aeson.Types.Internal.Pair
                                Duckling.Quantity.Types.$fToJSONQuantityValue6
                                (GHC.Types.:
                                   @ Data.Aeson.Types.Internal.Pair
                                   (Duckling.Quantity.Types.$fToJSONQuantityValue5,
                                    Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON1 from)
                                   (GHC.Types.:
                                      @ Data.Aeson.Types.Internal.Pair
                                      (Duckling.Quantity.Types.$fToJSONQuantityValue1,
                                       Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON1 to)
                                      (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))))
                             (Data.HashMap.Base.Empty
                                @ Data.Text.Internal.Text
                                @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                      (# dt #) } }
                   Duckling.Quantity.Types.OpenIntervalValue ds
                   -> case ds of wild1 { (,) from ds1 ->
                      case ds1 of wild2 {
                        Duckling.Quantity.Types.Above
                        -> case Data.Aeson.Types.Internal.$sfromList1
                                  @ Data.Aeson.Types.Internal.Value
                                  (GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Pair
                                     Duckling.Quantity.Types.$fToJSONQuantityValue6
                                     (GHC.Types.:
                                        @ Data.Aeson.Types.Internal.Pair
                                        (Duckling.Quantity.Types.$fToJSONQuantityValue5,
                                         Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON1
                                           from)
                                        (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                                  (Data.HashMap.Base.Empty
                                     @ Data.Text.Internal.Text
                                     @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                           (# dt #) }
                        Duckling.Quantity.Types.Under
                        -> case Data.Aeson.Types.Internal.$sfromList1
                                  @ Data.Aeson.Types.Internal.Value
                                  (GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Pair
                                     Duckling.Quantity.Types.$fToJSONQuantityValue6
                                     (GHC.Types.:
                                        @ Data.Aeson.Types.Internal.Pair
                                        (Duckling.Quantity.Types.$fToJSONQuantityValue1,
                                         Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON1
                                           from)
                                        (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                                  (Data.HashMap.Base.Empty
                                     @ Data.Text.Internal.Text
                                     @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                           (# dt #) } } } }) -}
9a6f0fe37cdf4f1959fef6254c6b8166
  $w$ctoJSON1 ::
    Duckling.Quantity.Types.Unit
    -> GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 3, Strictness: <L,1*U><L,1*U(U)><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Duckling.Quantity.Types.Unit)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Base.Maybe Data.Text.Internal.Text) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.:
                           @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                           (Duckling.Quantity.Types.$fToJSONQuantityValue4,
                            Data.Aeson.Types.ToJSON.$fToJSONDouble_$srealFloatToJSON ww1)
                           (GHC.Types.:
                              @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                              (Duckling.Quantity.Types.$fToJSONQuantityValue3,
                               Duckling.Quantity.Types.$fToJSONQuantityValue_$ctoJSON2 ww)
                              (case ww2 of wild {
                                 GHC.Base.Nothing
                                 -> GHC.Types.[]
                                      @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                                 GHC.Base.Just p
                                 -> GHC.Types.:
                                      @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                                      (Duckling.Quantity.Types.$fToJSONQuantityValue2,
                                       Data.Aeson.Types.Internal.$WString p)
                                      (GHC.Types.[]
                                         @ (Data.Text.Internal.Text,
                                            Data.Aeson.Types.Internal.Value)) })))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                 (# dt #) }) -}
cc507958932a6d40d35b817e57a382bb
  $w$ctoJSON2 ::
    Duckling.Quantity.Types.Unit -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
b1a742f5f9cafd4240d532b7f9162f52
  $w$dGHashable ::
    GHC.Prim.Int#
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "aproduct")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 (GHC.Base.Maybe Data.Text.Internal.Text))
         a1
    -> GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "minValue")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
         a1
    -> GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "maxValue")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
         a1
    -> GHC.Prim.Int#
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><S,1*U><S,1*U><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "aproduct")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 (GHC.Base.Maybe Data.Text.Internal.Text))
                             a1)
                   (ww2 :: GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "minValue")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
                             a1)
                   (ww3 :: GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "maxValue")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
                             a1) ->
                 let {
                   $j :: GHC.Prim.Int# -> GHC.Prim.Int# {- Arity: 1 -}
                   = \ (ww4 :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> GHC.Prim.Int# {- Arity: 1 -}
                       = \ (ww5 :: GHC.Prim.Int#)[OneShot] ->
                         case ww3
                                `cast`
                              (Trans
                                   (GHC.Generics.N:M1[0]
                                        <GHC.Generics.S>_P
                                        <'GHC.Generics.MetaSel
                                           ('GHC.Base.Just "maxValue")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy>_P
                                        <GHC.Generics.K1
                                           GHC.Generics.R
                                           (GHC.Base.Maybe GHC.Types.Double)>_R <a1>_N)
                                   (GHC.Generics.N:K1[0]
                                        <GHC.Generics.R>_P
                                        <GHC.Base.Maybe GHC.Types.Double>_R
                                        <a1>_P)) of wild {
                           GHC.Base.Nothing -> GHC.Prim.*# ww5 16777619#
                           GHC.Base.Just a2
                           -> case a2 of ww6 { GHC.Types.D# ww7 ->
                              case GHC.Magic.runRW#
                                     @ 'GHC.Types.PtrRepLifted
                                     @ GHC.Word.Word64
                                     (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                      case GHC.Prim.newAlignedPinnedByteArray#
                                             @ GHC.Prim.RealWorld
                                             8#
                                             8#
                                             eta of ds2 { (#,#) ipv ipv1 ->
                                      case GHC.Prim.unsafeFreezeByteArray#
                                             @ GHC.Prim.RealWorld
                                             ipv1
                                             ipv of ds3 { (#,#) ipv2 ipv3 ->
                                      let {
                                        ptr :: GHC.Prim.Addr# = GHC.Prim.byteArrayContents# ipv3
                                      } in
                                      case GHC.Prim.writeDoubleOffAddr#
                                             @ GHC.Prim.RealWorld
                                             ptr
                                             0#
                                             ww7
                                             ipv2 of s2 { DEFAULT ->
                                      case GHC.Prim.readWord64OffAddr#
                                             @ GHC.Prim.RealWorld
                                             ptr
                                             0#
                                             s2 of ds1 { (#,#) ipv4 ipv5 ->
                                      case GHC.Prim.touch#
                                             @ 'GHC.Types.PtrRepUnlifted
                                             @ GHC.Prim.ByteArray#
                                             ipv3
                                             ipv4 of s4 { DEFAULT ->
                                      (# s4,
                                         GHC.Word.W64# ipv5 #) } } } } }) of ds1 { (#,#) ipv ipv1 ->
                              case ipv1 of wild1 { GHC.Word.W64# x# ->
                              GHC.Prim.xorI#
                                (GHC.Prim.*#
                                   (GHC.Prim.xorI# (GHC.Prim.*# ww5 16777619#) 6148914691236517205#)
                                   16777619#)
                                (GHC.Prim.word2Int# x#) } } } }
                     } in
                     case ww2
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "minValue")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)>_R <a1>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P
                                    <GHC.Base.Maybe GHC.Types.Double>_R
                                    <a1>_P)) of wild {
                       GHC.Base.Nothing -> $j1 (GHC.Prim.*# ww4 16777619#)
                       GHC.Base.Just a2
                       -> case a2 of ww5 { GHC.Types.D# ww6 ->
                          case GHC.Magic.runRW#
                                 @ 'GHC.Types.PtrRepLifted
                                 @ GHC.Word.Word64
                                 (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case GHC.Prim.newAlignedPinnedByteArray#
                                         @ GHC.Prim.RealWorld
                                         8#
                                         8#
                                         eta of ds2 { (#,#) ipv ipv1 ->
                                  case GHC.Prim.unsafeFreezeByteArray#
                                         @ GHC.Prim.RealWorld
                                         ipv1
                                         ipv of ds3 { (#,#) ipv2 ipv3 ->
                                  let {
                                    ptr :: GHC.Prim.Addr# = GHC.Prim.byteArrayContents# ipv3
                                  } in
                                  case GHC.Prim.writeDoubleOffAddr#
                                         @ GHC.Prim.RealWorld
                                         ptr
                                         0#
                                         ww6
                                         ipv2 of s2 { DEFAULT ->
                                  case GHC.Prim.readWord64OffAddr#
                                         @ GHC.Prim.RealWorld
                                         ptr
                                         0#
                                         s2 of ds1 { (#,#) ipv4 ipv5 ->
                                  case GHC.Prim.touch#
                                         @ 'GHC.Types.PtrRepUnlifted
                                         @ GHC.Prim.ByteArray#
                                         ipv3
                                         ipv4 of s4 { DEFAULT ->
                                  (# s4, GHC.Word.W64# ipv5 #) } } } } }) of ds1 { (#,#) ipv ipv1 ->
                          case ipv1 of wild1 { GHC.Word.W64# x# ->
                          $j1
                            (GHC.Prim.xorI#
                               (GHC.Prim.*#
                                  (GHC.Prim.xorI# (GHC.Prim.*# ww4 16777619#) 6148914691236517205#)
                                  16777619#)
                               (GHC.Prim.word2Int# x#)) } } } }
                 } in
                 case ww1
                        `cast`
                      (Trans
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.S>_P
                                <'GHC.Generics.MetaSel
                                   ('GHC.Base.Just "aproduct")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy>_P
                                <GHC.Generics.K1
                                   GHC.Generics.R
                                   (GHC.Base.Maybe Data.Text.Internal.Text)>_R <a1>_N)
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P
                                <GHC.Base.Maybe Data.Text.Internal.Text>_R
                                <a1>_P)) of wild {
                   GHC.Base.Nothing -> $j (GHC.Prim.*# ww 16777619#)
                   GHC.Base.Just a2
                   -> case a2 of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                      case {__pkg_ccall hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol hashable_fnv_hash_offset GHC.Prim.ByteArray#
                                                                                                                          -> GHC.Prim.Int#
                                                                                                                          -> GHC.Prim.Int#
                                                                                                                          -> GHC.Prim.Int#
                                                                                                                          -> GHC.Prim.State#
                                                                                                                               GHC.Prim.RealWorld
                                                                                                                          -> (# GHC.Prim.State#
                                                                                                                                  GHC.Prim.RealWorld,
                                                                                                                                GHC.Prim.Int# #)}
                             dt
                             (GHC.Prim.uncheckedIShiftL# dt1 1#)
                             (GHC.Prim.uncheckedIShiftL# dt2 1#)
                             (GHC.Prim.xorI# (GHC.Prim.*# ww 16777619#) 6148914691236517205#)
                             GHC.Prim.realWorld# of wild2 { (#,#) ds1 ds2 ->
                      $j ds2 } } }) -}
bbad2215bc7b25f28bac2b95def447cf
  $w$dGHashable1 ::
    GHC.Prim.Int#
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "unit")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 (GHC.Base.Maybe Duckling.Quantity.Types.Unit))
         a1
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "value")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
         a1
    -> GHC.Prim.Int#
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><S,1*U><S,1*U>,
     Inline: [0] -}
7c6b194d2a40b99092b2b67eaf400070
  $w$dGHashable2 ::
    GHC.Prim.Int#
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "vUnit")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 Duckling.Quantity.Types.Unit)
         a1
    -> GHC.Prim.Double#
    -> GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "vProduct")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 (GHC.Base.Maybe Data.Text.Internal.Text))
         a1
    -> GHC.Prim.Int#
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><S,1*U><S,U><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "vUnit")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 Duckling.Quantity.Types.Unit)
                             a1)
                   (ww2 :: GHC.Prim.Double#)
                   (ww3 :: GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "vProduct")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 (GHC.Base.Maybe Data.Text.Internal.Text))
                             a1) ->
                 case ww3
                        `cast`
                      (Trans
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.S>_P
                                <'GHC.Generics.MetaSel
                                   ('GHC.Base.Just "vProduct")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy>_P
                                <GHC.Generics.K1
                                   GHC.Generics.R
                                   (GHC.Base.Maybe Data.Text.Internal.Text)>_R <a1>_N)
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P
                                <GHC.Base.Maybe Data.Text.Internal.Text>_R
                                <a1>_P)) of wild {
                   GHC.Base.Nothing
                   -> case Duckling.Quantity.Types.$w$chashWithSalt
                             ww
                             ww1
                               `cast`
                             (Trans
                                  (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "vUnit")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R Duckling.Quantity.Types.Unit>_R <a1>_N)
                                  (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P
                                       <Duckling.Quantity.Types.Unit>_R
                                       <a1>_P)) of ww4 { DEFAULT ->
                      case GHC.Magic.runRW#
                             @ 'GHC.Types.PtrRepLifted
                             @ GHC.Word.Word64
                             (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.newAlignedPinnedByteArray#
                                     @ GHC.Prim.RealWorld
                                     8#
                                     8#
                                     eta of ds2 { (#,#) ipv ipv1 ->
                              case GHC.Prim.unsafeFreezeByteArray#
                                     @ GHC.Prim.RealWorld
                                     ipv1
                                     ipv of ds3 { (#,#) ipv2 ipv3 ->
                              let {
                                ptr :: GHC.Prim.Addr# = GHC.Prim.byteArrayContents# ipv3
                              } in
                              case GHC.Prim.writeDoubleOffAddr#
                                     @ GHC.Prim.RealWorld
                                     ptr
                                     0#
                                     ww2
                                     ipv2 of s2 { DEFAULT ->
                              case GHC.Prim.readWord64OffAddr#
                                     @ GHC.Prim.RealWorld
                                     ptr
                                     0#
                                     s2 of ds1 { (#,#) ipv4 ipv5 ->
                              case GHC.Prim.touch#
                                     @ 'GHC.Types.PtrRepUnlifted
                                     @ GHC.Prim.ByteArray#
                                     ipv3
                                     ipv4 of s4 { DEFAULT ->
                              (# s4, GHC.Word.W64# ipv5 #) } } } } }) of ds1 { (#,#) ipv ipv1 ->
                      case ipv1 of wild1 { GHC.Word.W64# x# ->
                      GHC.Prim.*#
                        (GHC.Prim.xorI#
                           (GHC.Prim.*# ww4 16777619#)
                           (GHC.Prim.word2Int# x#))
                        16777619# } } }
                   GHC.Base.Just a2
                   -> case a2 of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                      case Duckling.Quantity.Types.$w$chashWithSalt
                             ww
                             ww1
                               `cast`
                             (Trans
                                  (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "vUnit")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R Duckling.Quantity.Types.Unit>_R <a1>_N)
                                  (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P
                                       <Duckling.Quantity.Types.Unit>_R
                                       <a1>_P)) of ww4 { DEFAULT ->
                      case GHC.Magic.runRW#
                             @ 'GHC.Types.PtrRepLifted
                             @ GHC.Word.Word64
                             (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.newAlignedPinnedByteArray#
                                     @ GHC.Prim.RealWorld
                                     8#
                                     8#
                                     eta of ds2 { (#,#) ipv ipv1 ->
                              case GHC.Prim.unsafeFreezeByteArray#
                                     @ GHC.Prim.RealWorld
                                     ipv1
                                     ipv of ds3 { (#,#) ipv2 ipv3 ->
                              let {
                                ptr :: GHC.Prim.Addr# = GHC.Prim.byteArrayContents# ipv3
                              } in
                              case GHC.Prim.writeDoubleOffAddr#
                                     @ GHC.Prim.RealWorld
                                     ptr
                                     0#
                                     ww2
                                     ipv2 of s2 { DEFAULT ->
                              case GHC.Prim.readWord64OffAddr#
                                     @ GHC.Prim.RealWorld
                                     ptr
                                     0#
                                     s2 of ds1 { (#,#) ipv4 ipv5 ->
                              case GHC.Prim.touch#
                                     @ 'GHC.Types.PtrRepUnlifted
                                     @ GHC.Prim.ByteArray#
                                     ipv3
                                     ipv4 of s4 { DEFAULT ->
                              (# s4, GHC.Word.W64# ipv5 #) } } } } }) of ds1 { (#,#) ipv ipv1 ->
                      case ipv1 of wild2 { GHC.Word.W64# x# ->
                      case {__pkg_ccall hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol hashable_fnv_hash_offset GHC.Prim.ByteArray#
                                                                                                                          -> GHC.Prim.Int#
                                                                                                                          -> GHC.Prim.Int#
                                                                                                                          -> GHC.Prim.Int#
                                                                                                                          -> GHC.Prim.State#
                                                                                                                               GHC.Prim.RealWorld
                                                                                                                          -> (# GHC.Prim.State#
                                                                                                                                  GHC.Prim.RealWorld,
                                                                                                                                GHC.Prim.Int# #)}
                             dt
                             (GHC.Prim.uncheckedIShiftL# dt1 1#)
                             (GHC.Prim.uncheckedIShiftL# dt2 1#)
                             (GHC.Prim.xorI#
                                (GHC.Prim.*#
                                   (GHC.Prim.xorI#
                                      (GHC.Prim.*# ww4 16777619#)
                                      (GHC.Prim.word2Int# x#))
                                   16777619#)
                                6148914691236517205#)
                             GHC.Prim.realWorld# of wild3 { (#,#) ds2 ds3 ->
                      ds3 } } } } } }) -}
06b3a2a51d1b6f2c41adef9577f982d7
  $w$dGNFData ::
    GHC.Generics.S1
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "unit")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
      (GHC.Generics.Rec0 (GHC.Base.Maybe Duckling.Quantity.Types.Unit))
      a1
    -> GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "value")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
         a1
    -> GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "aproduct")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 (GHC.Base.Maybe Data.Text.Internal.Text))
         a1
    -> GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "minValue")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
         a1
    -> GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "maxValue")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
         a1
    -> ()
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S,1*U><S,1*U><S,1*U><S,1*U><S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Generics.S1
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "unit")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.Rec0 (GHC.Base.Maybe Duckling.Quantity.Types.Unit))
                            a1)
                   (ww1 :: GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "value")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
                             a1)
                   (ww2 :: GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "aproduct")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 (GHC.Base.Maybe Data.Text.Internal.Text))
                             a1)
                   (ww3 :: GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "minValue")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
                             a1)
                   (ww4 :: GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "maxValue")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
                             a1) ->
                 case case ww
                             `cast`
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.S>_P
                                     <'GHC.Generics.MetaSel
                                        ('GHC.Base.Just "unit")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy>_P
                                     <GHC.Generics.K1
                                        GHC.Generics.R
                                        (GHC.Base.Maybe Duckling.Quantity.Types.Unit)>_R <a1>_N)
                                (GHC.Generics.N:K1[0]
                                     <GHC.Generics.R>_P
                                     <GHC.Base.Maybe Duckling.Quantity.Types.Unit>_R
                                     <a1>_P)) of wild {
                        GHC.Base.Nothing -> GHC.Tuple.()
                        GHC.Base.Just x
                        -> case Duckling.Quantity.Types.$fGenericUnit1
                                  @ GHC.Prim.Any
                                  x of wild1 {
                             GHC.Generics.L1 x1
                             -> Duckling.Quantity.Types.$fNFDataQuantityData3 @ GHC.Prim.Any x1
                             GHC.Generics.R1 x1
                             -> Duckling.Quantity.Types.$fNFDataQuantityData2
                                  @ GHC.Prim.Any
                                  x1 } } of wild1 { () ->
                 case case ww1
                             `cast`
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.S>_P
                                     <'GHC.Generics.MetaSel
                                        ('GHC.Base.Just "value")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy>_P
                                     <GHC.Generics.K1
                                        GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)>_R <a1>_N)
                                (GHC.Generics.N:K1[0]
                                     <GHC.Generics.R>_P
                                     <GHC.Base.Maybe GHC.Types.Double>_R
                                     <a1>_P)) of wild {
                        GHC.Base.Nothing -> GHC.Tuple.()
                        GHC.Base.Just x
                        -> Control.DeepSeq.$fNFDataDouble_$crnf x } of wild2 { () ->
                 case case ww2
                             `cast`
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.S>_P
                                     <'GHC.Generics.MetaSel
                                        ('GHC.Base.Just "aproduct")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy>_P
                                     <GHC.Generics.K1
                                        GHC.Generics.R
                                        (GHC.Base.Maybe Data.Text.Internal.Text)>_R <a1>_N)
                                (GHC.Generics.N:K1[0]
                                     <GHC.Generics.R>_P
                                     <GHC.Base.Maybe Data.Text.Internal.Text>_R
                                     <a1>_P)) of wild {
                        GHC.Base.Nothing -> GHC.Tuple.()
                        GHC.Base.Just x
                        -> Data.Text.$fNFDataText_$crnf x } of wild3 { () ->
                 case case ww3
                             `cast`
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.S>_P
                                     <'GHC.Generics.MetaSel
                                        ('GHC.Base.Just "minValue")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy>_P
                                     <GHC.Generics.K1
                                        GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)>_R <a1>_N)
                                (GHC.Generics.N:K1[0]
                                     <GHC.Generics.R>_P
                                     <GHC.Base.Maybe GHC.Types.Double>_R
                                     <a1>_P)) of wild {
                        GHC.Base.Nothing -> GHC.Tuple.()
                        GHC.Base.Just x
                        -> Control.DeepSeq.$fNFDataDouble_$crnf x } of wild4 { () ->
                 case ww4
                        `cast`
                      (Trans
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.S>_P
                                <'GHC.Generics.MetaSel
                                   ('GHC.Base.Just "maxValue")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy>_P
                                <GHC.Generics.K1
                                   GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)>_R <a1>_N)
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P
                                <GHC.Base.Maybe GHC.Types.Double>_R
                                <a1>_P)) of wild {
                   GHC.Base.Nothing -> GHC.Tuple.()
                   GHC.Base.Just x
                   -> Control.DeepSeq.$fNFDataDouble_$crnf x } } } } }) -}
1394598fd6931dd34115d36e3d5e202b
  $w$dGNFData1 ::
    GHC.Generics.M1
      GHC.Generics.S
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "vUnit")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
      (GHC.Generics.Rec0 Duckling.Quantity.Types.Unit)
      a1
    -> GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "vValue")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Types.Double)
         a1
    -> GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "vProduct")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 (GHC.Base.Maybe Data.Text.Internal.Text))
         a1
    -> ()
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S,1*U><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "vUnit")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.Rec0 Duckling.Quantity.Types.Unit)
                            a1)
                   (ww1 :: GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "vValue")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Types.Double)
                             a1)
                   (ww2 :: GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "vProduct")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 (GHC.Base.Maybe Data.Text.Internal.Text))
                             a1) ->
                 case case Duckling.Quantity.Types.$fGenericUnit1
                             @ GHC.Prim.Any
                             ww
                               `cast`
                             (Trans
                                  (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "vUnit")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R Duckling.Quantity.Types.Unit>_R <a1>_N)
                                  (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P
                                       <Duckling.Quantity.Types.Unit>_R
                                       <a1>_P)) of wild {
                        GHC.Generics.L1 x
                        -> Duckling.Quantity.Types.$fNFDataQuantityData3 @ GHC.Prim.Any x
                        GHC.Generics.R1 x
                        -> Duckling.Quantity.Types.$fNFDataQuantityData2
                             @ GHC.Prim.Any
                             x } of wild1 { () ->
                 case ww1 of tpl { DEFAULT ->
                 case ww2
                        `cast`
                      (Trans
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.S>_P
                                <'GHC.Generics.MetaSel
                                   ('GHC.Base.Just "vProduct")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy>_P
                                <GHC.Generics.K1
                                   GHC.Generics.R
                                   (GHC.Base.Maybe Data.Text.Internal.Text)>_R <a1>_N)
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P
                                <GHC.Base.Maybe Data.Text.Internal.Text>_R
                                <a1>_P)) of wild {
                   GHC.Base.Nothing -> GHC.Tuple.()
                   GHC.Base.Just x -> Data.Text.$fNFDataText_$crnf x } } }) -}
09ed5142b041791d01d97aadf6645b4a
  $w$s$wupdateOrSnocWithKey ::
    (Data.Text.Internal.Text -> v -> v -> v)
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> GHC.Prim.Array#
         (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
    -> GHC.Prim.Array#
         (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
  {- Arity: 6, Strictness: <L,C(C1(C1(U)))><L,U><L,U><L,U><L,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ v
                   (w :: Data.Text.Internal.Text -> v -> v -> v)
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (w1 :: v)
                   (w2 :: GHC.Prim.Array#
                            (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)) ->
                 letrec {
                   $wgo1 :: GHC.Prim.ByteArray#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> v
                            -> GHC.Prim.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                     {- Arity: 7, Strictness: <L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
                        Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.ByteArray#)
                       (ww4 :: GHC.Prim.Int#)
                       (ww5 :: GHC.Prim.Int#)
                       (w3 :: v)
                       (ww6 :: GHC.Prim.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v))
                       (ww7 :: GHC.Prim.Int#)
                       (ww8 :: GHC.Prim.Int#) ->
                     let {
                       k2 :: Data.Text.Internal.Text = Data.Text.Internal.Text ww3 ww4 ww5
                     } in
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww7 ww8) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.indexArray#
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 ww6
                                 ww7 of ds { Unit# ipv3 ->
                          case ipv3 of wild1 { Data.HashMap.Base.L kx y ->
                          case kx of wild2 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.==# ww5 dt5) of wild3 {
                            GHC.Types.False
                            -> $wgo1 ww3 ww4 ww5 w3 ww6 (GHC.Prim.+# ww7 1#) ww8
                            GHC.Types.True
                            -> case {__pkg_ccall text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00 _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                                  -> GHC.Prim.Word#
                                                                                                                  -> GHC.Prim.ByteArray#
                                                                                                                  -> GHC.Prim.Word#
                                                                                                                  -> GHC.Prim.Word#
                                                                                                                  -> GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld
                                                                                                                  -> (# GHC.Prim.State#
                                                                                                                          GHC.Prim.RealWorld,
                                                                                                                        GHC.Prim.Int# #)}
                                      ww3
                                      (GHC.Prim.int2Word# ww4)
                                      dt3
                                      (GHC.Prim.int2Word# dt4)
                                      (GHC.Prim.int2Word# ww5)
                                      GHC.Prim.realWorld# of wild4 { (#,#) ds11 ds12 ->
                               case GHC.Prim.narrow32Int# ds12 of wild5 {
                                 DEFAULT -> $wgo1 ww3 ww4 ww5 w3 ww6 (GHC.Prim.+# ww7 1#) ww8
                                 0#
                                 -> case GHC.Prim.thawArray#
                                           @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                           @ GHC.Prim.RealWorld
                                           ww6
                                           0#
                                           (GHC.Prim.sizeofArray#
                                              @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                              ww6)
                                           GHC.Prim.realWorld# of ds1 { (#,#) ipv4 ipv5 ->
                                    case GHC.Prim.writeArray#
                                           @ GHC.Prim.RealWorld
                                           @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                           ipv5
                                           ww7
                                           (Data.HashMap.Base.L
                                              @ Data.Text.Internal.Text
                                              @ v
                                              k2
                                              (w k2 w3 y))
                                           ipv4 of s' { DEFAULT ->
                                    case GHC.Prim.unsafeFreezeArray#
                                           @ GHC.Prim.RealWorld
                                           @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                           ipv5
                                           s' of ds2 { (#,#) ipv6 ipv7 ->
                                    ipv7 } } } } } } } } }
                       GHC.Types.True
                       -> case GHC.Prim.newArray#
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 @ GHC.Prim.RealWorld
                                 (GHC.Prim.+# ww8 1#)
                                 (Data.HashMap.Array.undefinedElem
                                    @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v))
                                 GHC.Prim.realWorld# of ds { (#,#) ipv3 ipv4 ->
                          case GHC.Prim.copyArray#
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 @ GHC.Prim.RealWorld
                                 ww6
                                 0#
                                 ipv4
                                 0#
                                 ww8
                                 ipv3 of s2 { DEFAULT ->
                          case GHC.Prim.writeArray#
                                 @ GHC.Prim.RealWorld
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 ipv4
                                 ww8
                                 (Data.HashMap.Base.L @ Data.Text.Internal.Text @ v k2 w3)
                                 s2 of s' { DEFAULT ->
                          case GHC.Prim.unsafeFreezeArray#
                                 @ GHC.Prim.RealWorld
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 ipv4
                                 s' of ds1 { (#,#) ipv5 ipv6 ->
                          ipv6 } } } } }
                 } in
                 $wgo1
                   ww
                   ww1
                   ww2
                   w1
                   w2
                   0#
                   (GHC.Prim.sizeofArray#
                      @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                      w2)) -}
91fc80dc760fbd97dca6b7fe4606e5c0
  $w$sinsert ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
  {- Arity: 5, Strictness: <S,U><S,U><S,U><L,U><S,1*U>, Inline: [0],
     Unfolding: (\ @ v
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (w :: v)
                   (w1 :: Data.HashMap.Base.HashMap Data.Text.Internal.Text v) ->
                 case {__pkg_ccall hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol hashable_fnv_hash_offset GHC.Prim.ByteArray#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.State#
                                                                                                                          GHC.Prim.RealWorld
                                                                                                                     -> (# GHC.Prim.State#
                                                                                                                             GHC.Prim.RealWorld,
                                                                                                                           GHC.Prim.Int# #)}
                        ww
                        (GHC.Prim.uncheckedIShiftL# ww1 1#)
                        (GHC.Prim.uncheckedIShiftL# ww2 1#)
                        -2578643520546668380#
                        GHC.Prim.realWorld# of wild1 { (#,#) ds1 ds2 ->
                 Duckling.Quantity.Types.$wpoly_go1
                   @ v
                   (GHC.Prim.int2Word# ds2)
                   ww
                   ww1
                   ww2
                   w
                   0#
                   w1 }) -}
53891d009e5ba5f6294845f1de99deb3
  $wpoly_go1 ::
    GHC.Prim.Word#
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> GHC.Prim.Int#
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
  {- Arity: 7, Strictness: <S,U><L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
be6bba9b7c724f13379a9669ac27fcf8
  axiom D:R:ResolvedValueQuantityData::
      Duckling.Resolve.ResolvedValue Duckling.Quantity.Types.QuantityData
        = Duckling.Quantity.Types.QuantityValue
8eb2fb9057740ab13264d610f0e647d3
  data IntervalDirection = Above | Under
be6bba9b7c724f13379a9669ac27fcf8
  data QuantityData
    = QuantityData {unit :: GHC.Base.Maybe
                              Duckling.Quantity.Types.Unit,
                    value :: GHC.Base.Maybe GHC.Types.Double,
                    aproduct :: GHC.Base.Maybe Data.Text.Internal.Text,
                    minValue :: GHC.Base.Maybe GHC.Types.Double,
                    maxValue :: GHC.Base.Maybe GHC.Types.Double}
9dcdd04ca5cd4be0ff66ddfb044bfd19
  data QuantityValue
    = SimpleValue Duckling.Quantity.Types.SingleValue
    | IntervalValue (Duckling.Quantity.Types.SingleValue,
                     Duckling.Quantity.Types.SingleValue)
    | OpenIntervalValue (Duckling.Quantity.Types.SingleValue,
                         Duckling.Quantity.Types.IntervalDirection)
8eb2fb9057740ab13264d610f0e647d3
  axiom Rep_IntervalDirection::
      GHC.Generics.Rep Duckling.Quantity.Types.IntervalDirection
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "IntervalDirection"
               "Duckling.Quantity.Types"
               "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Above" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Under" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
be6bba9b7c724f13379a9669ac27fcf8
  axiom Rep_QuantityData::
      GHC.Generics.Rep Duckling.Quantity.Types.QuantityData
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "QuantityData"
               "Duckling.Quantity.Types"
               "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "QuantityData" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "unit")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 (GHC.Base.Maybe Duckling.Quantity.Types.Unit))
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "value")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double)))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "aproduct")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 (GHC.Base.Maybe Data.Text.Internal.Text))
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "minValue")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         (GHC.Base.Maybe GHC.Types.Double))
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "maxValue")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          (GHC.Base.Maybe
                                                                             GHC.Types.Double))))))
e64b9042dac36283e0d466a7b36615e2
  axiom Rep_SingleValue::
      GHC.Generics.Rep Duckling.Quantity.Types.SingleValue
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "SingleValue"
               "Duckling.Quantity.Types"
               "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "SingleValue" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "vUnit")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 Duckling.Quantity.Types.Unit)
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "vValue")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Double)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "vProduct")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        (GHC.Base.Maybe Data.Text.Internal.Text)))))
cc507958932a6d40d35b817e57a382bb
  axiom Rep_Unit::
      GHC.Generics.Rep Duckling.Quantity.Types.Unit
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Unit"
               "Duckling.Quantity.Types"
               "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"
               'GHC.Types.False)
            (((GHC.Generics.C1
                 ('GHC.Generics.MetaCons
                    "Bowl" 'GHC.Generics.PrefixI 'GHC.Types.False)
                 GHC.Generics.U1
               GHC.Generics.:+: (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Cup" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Custom"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    (GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          'GHC.Base.Nothing
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0
                                                          Data.Text.Internal.Text))))
              GHC.Generics.:+: (GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "Dish" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: (GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Gram"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1
                                                  GHC.Generics.:+: GHC.Generics.C1
                                                                     ('GHC.Generics.MetaCons
                                                                        "Ounce"
                                                                        'GHC.Generics.PrefixI
                                                                        'GHC.Types.False)
                                                                     GHC.Generics.U1)))
             GHC.Generics.:+: ((GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "Pint" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: (GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Pound"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1
                                                  GHC.Generics.:+: GHC.Generics.C1
                                                                     ('GHC.Generics.MetaCons
                                                                        "Quart"
                                                                        'GHC.Generics.PrefixI
                                                                        'GHC.Types.False)
                                                                     GHC.Generics.U1))
                               GHC.Generics.:+: (GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "Tablespoon"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: (GHC.Generics.C1
                                                                     ('GHC.Generics.MetaCons
                                                                        "Teaspoon"
                                                                        'GHC.Generics.PrefixI
                                                                        'GHC.Types.False)
                                                                     GHC.Generics.U1
                                                                   GHC.Generics.:+: GHC.Generics.C1
                                                                                      ('GHC.Generics.MetaCons
                                                                                         "Unnamed"
                                                                                         'GHC.Generics.PrefixI
                                                                                         'GHC.Types.False)
                                                                                      GHC.Generics.U1))))
e64b9042dac36283e0d466a7b36615e2
  data SingleValue
    = SingleValue {vUnit :: Duckling.Quantity.Types.Unit,
                   vValue :: GHC.Types.Double,
                   vProduct :: GHC.Base.Maybe Data.Text.Internal.Text}
cc507958932a6d40d35b817e57a382bb
  data Unit
    = Bowl
    | Cup
    | Custom Data.Text.Internal.Text
    | Dish
    | Gram
    | Ounce
    | Pint
    | Pound
    | Quart
    | Tablespoon
    | Teaspoon
    | Unnamed
cc821dc57ad5099b1bfb97c2af2739a2
  above ::
    Duckling.Quantity.Types.Unit
    -> GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Duckling.Quantity.Types.QuantityValue
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><L,U>m3,
     Unfolding: InlineRule (3, True, False)
                (\ (u :: Duckling.Quantity.Types.Unit)
                   (v :: GHC.Types.Double)
                   (p :: GHC.Base.Maybe Data.Text.Internal.Text) ->
                 Duckling.Quantity.Types.OpenIntervalValue
                   (Duckling.Quantity.Types.SingleValue u v p,
                    Duckling.Quantity.Types.Above)) -}
e92d462f049ecbc819a3e0e1df5ebbbf
  aproduct ::
    Duckling.Quantity.Types.QuantityData
    -> GHC.Base.Maybe Data.Text.Internal.Text
  RecSel Left Duckling.Quantity.Types.QuantityData
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSLL),1*U(A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Duckling.Quantity.Types.QuantityData) ->
                 case ds of wild { Duckling.Quantity.Types.QuantityData ds1 ds2 ds3 ds4 ds5 ->
                 ds3 }) -}
73c5d0ed1d2f0480c967c81f2ac3cf0b
  between ::
    Duckling.Quantity.Types.Unit
    -> (GHC.Types.Double, GHC.Types.Double)
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Duckling.Quantity.Types.QuantityValue
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><S,1*U(U,U)><L,U>m2,
     Unfolding: InlineRule (3, True, False)
                (\ (u :: Duckling.Quantity.Types.Unit)
                   (ds :: (GHC.Types.Double, GHC.Types.Double))
                   (p :: GHC.Base.Maybe Data.Text.Internal.Text) ->
                 case ds of wild { (,) from to ->
                 Duckling.Quantity.Types.IntervalValue
                   (Duckling.Quantity.Types.SingleValue u from p,
                    Duckling.Quantity.Types.SingleValue u to p) }) -}
d165a2c7eea6653dc746969368091626
  maxValue ::
    Duckling.Quantity.Types.QuantityData
    -> GHC.Base.Maybe GHC.Types.Double
  RecSel Left Duckling.Quantity.Types.QuantityData
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Duckling.Quantity.Types.QuantityData) ->
                 case ds of wild { Duckling.Quantity.Types.QuantityData ds1 ds2 ds3 ds4 ds5 ->
                 ds5 }) -}
8a6e46ecdaf48170e9040d03e0c62ef4
  minValue ::
    Duckling.Quantity.Types.QuantityData
    -> GHC.Base.Maybe GHC.Types.Double
  RecSel Left Duckling.Quantity.Types.QuantityData
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLSL),1*U(A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Duckling.Quantity.Types.QuantityData) ->
                 case ds of wild { Duckling.Quantity.Types.QuantityData ds1 ds2 ds3 ds4 ds5 ->
                 ds4 }) -}
9da049845d267f978efe330c3eab10d2
  openInterval ::
    Duckling.Quantity.Types.IntervalDirection
    -> Duckling.Quantity.Types.Unit
    -> GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Duckling.Quantity.Types.QuantityValue
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><L,U>m3,
     Unfolding: InlineRule (4, True, False)
                (\ (direction :: Duckling.Quantity.Types.IntervalDirection)
                   (u :: Duckling.Quantity.Types.Unit)
                   (v :: GHC.Types.Double)
                   (p :: GHC.Base.Maybe Data.Text.Internal.Text) ->
                 Duckling.Quantity.Types.OpenIntervalValue
                   (Duckling.Quantity.Types.SingleValue u v p, direction)) -}
50064089b94e0adeb6bbb27d6f43288f
  simple ::
    Duckling.Quantity.Types.Unit
    -> GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Duckling.Quantity.Types.QuantityValue
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><L,U>m1,
     Unfolding: InlineRule (3, True, False)
                (\ (u :: Duckling.Quantity.Types.Unit)
                   (v :: GHC.Types.Double)
                   (p :: GHC.Base.Maybe Data.Text.Internal.Text) ->
                 Duckling.Quantity.Types.SimpleValue
                   (Duckling.Quantity.Types.SingleValue u v p)) -}
2f104411a12ddc1abf35f3db45259a7e
  single ::
    Duckling.Quantity.Types.Unit
    -> GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Duckling.Quantity.Types.SingleValue
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><L,U>m,
     Unfolding: InlineRule (0, True, True)
                Duckling.Quantity.Types.SingleValue -}
8898f6b5e50c0dd325f09db00bccad29
  under ::
    Duckling.Quantity.Types.Unit
    -> GHC.Types.Double
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Duckling.Quantity.Types.QuantityValue
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><L,U>m3,
     Unfolding: InlineRule (3, True, False)
                (\ (u :: Duckling.Quantity.Types.Unit)
                   (v :: GHC.Types.Double)
                   (p :: GHC.Base.Maybe Data.Text.Internal.Text) ->
                 Duckling.Quantity.Types.OpenIntervalValue
                   (Duckling.Quantity.Types.SingleValue u v p,
                    Duckling.Quantity.Types.Under)) -}
d3b08fda2fed89953badfbd8f8fb1096
  unit ::
    Duckling.Quantity.Types.QuantityData
    -> GHC.Base.Maybe Duckling.Quantity.Types.Unit
  RecSel Left Duckling.Quantity.Types.QuantityData
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLLL),1*U(1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Duckling.Quantity.Types.QuantityData) ->
                 case ds of wild { Duckling.Quantity.Types.QuantityData ds1 ds2 ds3 ds4 ds5 ->
                 ds1 }) -}
a6c277187e596b27babf4d0ee0c5d323
  vProduct ::
    Duckling.Quantity.Types.SingleValue
    -> GHC.Base.Maybe Data.Text.Internal.Text
  RecSel Left Duckling.Quantity.Types.SingleValue
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Duckling.Quantity.Types.SingleValue) ->
                 case ds of wild { Duckling.Quantity.Types.SingleValue ds1 ds2 ds3 ->
                 ds3 }) -}
d612c78862310d43ffd7f1000269fd6d
  vUnit ::
    Duckling.Quantity.Types.SingleValue -> Duckling.Quantity.Types.Unit
  RecSel Left Duckling.Quantity.Types.SingleValue
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Duckling.Quantity.Types.SingleValue) ->
                 case ds of wild { Duckling.Quantity.Types.SingleValue ds1 ds2 ds3 ->
                 ds1 }) -}
afff7f84171b232b83260f6aea9f1747
  vValue :: Duckling.Quantity.Types.SingleValue -> GHC.Types.Double
  RecSel Left Duckling.Quantity.Types.SingleValue
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Duckling.Quantity.Types.SingleValue) ->
                 case ds of wild { Duckling.Quantity.Types.SingleValue ds1 ds2 ds3 ->
                 ds2 }) -}
bc8ae2c84faf03eebe84421ae508468e
  value ::
    Duckling.Quantity.Types.QuantityData
    -> GHC.Base.Maybe GHC.Types.Double
  RecSel Left Duckling.Quantity.Types.QuantityData
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLLL),1*U(A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Duckling.Quantity.Types.QuantityData) ->
                 case ds of wild { Duckling.Quantity.Types.QuantityData ds1 ds2 ds3 ds4 ds5 ->
                 ds2 }) -}
instance GHC.Classes.Eq [Duckling.Quantity.Types.IntervalDirection]
  = Duckling.Quantity.Types.$fEqIntervalDirection
instance GHC.Classes.Eq [Duckling.Quantity.Types.QuantityData]
  = Duckling.Quantity.Types.$fEqQuantityData
instance GHC.Classes.Eq [Duckling.Quantity.Types.QuantityValue]
  = Duckling.Quantity.Types.$fEqQuantityValue
instance GHC.Classes.Eq [Duckling.Quantity.Types.SingleValue]
  = Duckling.Quantity.Types.$fEqSingleValue
instance GHC.Classes.Eq [Duckling.Quantity.Types.Unit]
  = Duckling.Quantity.Types.$fEqUnit
instance GHC.Generics.Generic [Duckling.Quantity.Types.IntervalDirection]
  = Duckling.Quantity.Types.$fGenericIntervalDirection
instance GHC.Generics.Generic [Duckling.Quantity.Types.QuantityData]
  = Duckling.Quantity.Types.$fGenericQuantityData
instance GHC.Generics.Generic [Duckling.Quantity.Types.SingleValue]
  = Duckling.Quantity.Types.$fGenericSingleValue
instance GHC.Generics.Generic [Duckling.Quantity.Types.Unit]
  = Duckling.Quantity.Types.$fGenericUnit
instance Data.Hashable.Class.Hashable [Duckling.Quantity.Types.IntervalDirection]
  = Duckling.Quantity.Types.$fHashableIntervalDirection
instance Data.Hashable.Class.Hashable [Duckling.Quantity.Types.QuantityData]
  = Duckling.Quantity.Types.$fHashableQuantityData
instance Data.Hashable.Class.Hashable [Duckling.Quantity.Types.SingleValue]
  = Duckling.Quantity.Types.$fHashableSingleValue
instance Data.Hashable.Class.Hashable [Duckling.Quantity.Types.Unit]
  = Duckling.Quantity.Types.$fHashableUnit
instance Control.DeepSeq.NFData [Duckling.Quantity.Types.IntervalDirection]
  = Duckling.Quantity.Types.$fNFDataIntervalDirection
instance Control.DeepSeq.NFData [Duckling.Quantity.Types.QuantityData]
  = Duckling.Quantity.Types.$fNFDataQuantityData
instance Control.DeepSeq.NFData [Duckling.Quantity.Types.SingleValue]
  = Duckling.Quantity.Types.$fNFDataSingleValue
instance Control.DeepSeq.NFData [Duckling.Quantity.Types.Unit]
  = Duckling.Quantity.Types.$fNFDataUnit
instance GHC.Classes.Ord [Duckling.Quantity.Types.IntervalDirection]
  = Duckling.Quantity.Types.$fOrdIntervalDirection
instance GHC.Classes.Ord [Duckling.Quantity.Types.QuantityData]
  = Duckling.Quantity.Types.$fOrdQuantityData
instance GHC.Classes.Ord [Duckling.Quantity.Types.QuantityValue]
  = Duckling.Quantity.Types.$fOrdQuantityValue
instance GHC.Classes.Ord [Duckling.Quantity.Types.SingleValue]
  = Duckling.Quantity.Types.$fOrdSingleValue
instance GHC.Classes.Ord [Duckling.Quantity.Types.Unit]
  = Duckling.Quantity.Types.$fOrdUnit
instance Duckling.Resolve.Resolve [Duckling.Quantity.Types.QuantityData]
  = Duckling.Quantity.Types.$fResolveQuantityData
instance GHC.Show.Show [Duckling.Quantity.Types.IntervalDirection]
  = Duckling.Quantity.Types.$fShowIntervalDirection
instance GHC.Show.Show [Duckling.Quantity.Types.QuantityData]
  = Duckling.Quantity.Types.$fShowQuantityData
instance GHC.Show.Show [Duckling.Quantity.Types.QuantityValue]
  = Duckling.Quantity.Types.$fShowQuantityValue
instance GHC.Show.Show [Duckling.Quantity.Types.SingleValue]
  = Duckling.Quantity.Types.$fShowSingleValue
instance GHC.Show.Show [Duckling.Quantity.Types.Unit]
  = Duckling.Quantity.Types.$fShowUnit
instance Data.Aeson.Types.ToJSON.ToJSON [Duckling.Quantity.Types.QuantityValue]
  = Duckling.Quantity.Types.$fToJSONQuantityValue
instance Data.Aeson.Types.ToJSON.ToJSON [Duckling.Quantity.Types.SingleValue]
  = Duckling.Quantity.Types.$fToJSONSingleValue
instance Data.Aeson.Types.ToJSON.ToJSON [Duckling.Quantity.Types.Unit]
  = Duckling.Quantity.Types.$fToJSONUnit
family instance GHC.Generics.Rep [Duckling.Quantity.Types.SingleValue]
  = Duckling.Quantity.Types.Rep_SingleValue
family instance GHC.Generics.Rep [Duckling.Quantity.Types.IntervalDirection]
  = Duckling.Quantity.Types.Rep_IntervalDirection
family instance GHC.Generics.Rep [Duckling.Quantity.Types.QuantityData]
  = Duckling.Quantity.Types.Rep_QuantityData
family instance GHC.Generics.Rep [Duckling.Quantity.Types.Unit]
  = Duckling.Quantity.Types.Rep_Unit
family instance Duckling.Resolve.ResolvedValue [Duckling.Quantity.Types.QuantityData]
  = Duckling.Quantity.Types.D:R:ResolvedValueQuantityData
"SPEC/Duckling.Quantity.Types $dmhashWithSalt @ IntervalDirection" [ALWAYS] forall ($dGHashable :: Data.Hashable.Class.GHashable
                                                                                                     Data.Hashable.Class.Zero
                                                                                                     (GHC.Generics.Rep
                                                                                                        Duckling.Quantity.Types.IntervalDirection))
                                                                                   ($dGeneric :: GHC.Generics.Generic
                                                                                                   Duckling.Quantity.Types.IntervalDirection)
                                                                                   ($dHashable :: Data.Hashable.Class.Hashable
                                                                                                    Duckling.Quantity.Types.IntervalDirection)
  Data.Hashable.Class.$dmhashWithSalt @ Duckling.Quantity.Types.IntervalDirection
                                      $dHashable
                                      $dGeneric
                                      $dGHashable
  = Duckling.Quantity.Types.$fHashableIntervalDirection_$s$dmhashWithSalt
"SPEC/Duckling.Quantity.Types $dmhashWithSalt @ SingleValue" [ALWAYS] forall ($dGHashable :: Data.Hashable.Class.GHashable
                                                                                               Data.Hashable.Class.Zero
                                                                                               (GHC.Generics.Rep
                                                                                                  Duckling.Quantity.Types.SingleValue))
                                                                             ($dGeneric :: GHC.Generics.Generic
                                                                                             Duckling.Quantity.Types.SingleValue)
                                                                             ($dHashable :: Data.Hashable.Class.Hashable
                                                                                              Duckling.Quantity.Types.SingleValue)
  Data.Hashable.Class.$dmhashWithSalt @ Duckling.Quantity.Types.SingleValue
                                      $dHashable
                                      $dGeneric
                                      $dGHashable
  = Duckling.Quantity.Types.$fHashableSingleValue_$s$dmhashWithSalt
"SPEC/Duckling.Quantity.Types $dmrnf @ IntervalDirection" [ALWAYS] forall ($dGNFData :: Control.DeepSeq.GNFData
                                                                                          (GHC.Generics.Rep
                                                                                             Duckling.Quantity.Types.IntervalDirection))
                                                                          ($dGeneric :: GHC.Generics.Generic
                                                                                          Duckling.Quantity.Types.IntervalDirection)
                                                                          ($dNFData :: Control.DeepSeq.NFData
                                                                                         Duckling.Quantity.Types.IntervalDirection)
  Control.DeepSeq.$dmrnf @ Duckling.Quantity.Types.IntervalDirection
                         $dNFData
                         $dGeneric
                         $dGNFData
  = Duckling.Quantity.Types.$fNFDataIntervalDirection_$s$dmrnf
"SPEC/Duckling.Quantity.Types $dmrnf @ Unit" [ALWAYS] forall ($dGNFData :: Control.DeepSeq.GNFData
                                                                             (GHC.Generics.Rep
                                                                                Duckling.Quantity.Types.Unit))
                                                             ($dGeneric :: GHC.Generics.Generic
                                                                             Duckling.Quantity.Types.Unit)
                                                             ($dNFData :: Control.DeepSeq.NFData
                                                                            Duckling.Quantity.Types.Unit)
  Control.DeepSeq.$dmrnf @ Duckling.Quantity.Types.Unit
                         $dNFData
                         $dGeneric
                         $dGNFData
  = Duckling.Quantity.Types.$fNFDataUnit_$s$dmrnf
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

