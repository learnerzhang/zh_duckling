
==================== FINAL INTERFACE ====================
2019-03-14 03:00:52.830397 UTC

interface duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Quantity.Rules 8002
  interface hash: aeb4755db7a4eb220fac602e10dfb189
  ABI hash: 423c16f249863fd1c3f9952d237b9c22
  export-list hash: 1cd6ec2bf610ef6c77211c4da0fa3b6a
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 6d3da675677bf6e55724740d48c08808
  sig of: Nothing
  used TH splices: False
  where
exports:
  Duckling.Quantity.Rules.rules
module dependencies: Duckling.AmountOfMoney.Types
                     Duckling.CreditCardNumber.Types Duckling.Dimensions.Types
                     Duckling.Distance.Types Duckling.Duration.Types
                     Duckling.Email.Types Duckling.Gender.Types Duckling.Identity.Types
                     Duckling.Locale Duckling.Numeral.Helpers Duckling.Numeral.Types
                     Duckling.Ordinal.Types Duckling.PhoneNumber.Types
                     Duckling.Quantity.Helpers Duckling.Quantity.Types
                     Duckling.Regex.Types Duckling.Region Duckling.Resolve
                     Duckling.Temperature.Types Duckling.Time.Types
                     Duckling.TimeGrain.Types Duckling.Types Duckling.Url.Types
                     Duckling.Volume.Types Duckling.Weight.Types
package dependencies: aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      dependent-sum-0.4@dependent-sum-0.4-32kCW1hJUMSBd03CvIwqZl
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      extra-1.5.3@extra-1.5.3-DgI7Z6Dwkeh8JGXDlNC5BL
                      generic-deriving-1.11.2@generic-deriving-1.11.2-FTRmVS5RM6G7R2MgyiZHgW
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      regex-base-0.93.2@regex-base-0.93.2-AYjYAsBidAc8f5XNm9b2Aa
                      regex-pcre-0.94.4@regex-pcre-0.94.4-Dlv5UOV35E3Fsya0hon6HM
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI
                      th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      timezone-series-0.1.8@timezone-series-0.1.8-4K4l0A0wjZPUt7r2oV8PT
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         dependent-sum-0.4@dependent-sum-0.4-32kCW1hJUMSBd03CvIwqZl:Data.GADT.Compare
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         regex-base-0.93.2@regex-base-0.93.2-AYjYAsBidAc8f5XNm9b2Aa:Text.Regex.Base.Context
         regex-pcre-0.94.4@regex-pcre-0.94.4-Dlv5UOV35E3Fsya0hon6HM:Text.Regex.PCRE.ByteString
         regex-pcre-0.94.4@regex-pcre-0.94.4-Dlv5UOV35E3Fsya0hon6HM:Text.Regex.PCRE.ByteString.Lazy
         regex-pcre-0.94.4@regex-pcre-0.94.4-Dlv5UOV35E3Fsya0hon6HM:Text.Regex.PCRE.Sequence
         regex-pcre-0.94.4@regex-pcre-0.94.4-Dlv5UOV35E3Fsya0hon6HM:Text.Regex.PCRE.String
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Applicative
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Concurrent
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Exception
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Control.Monad.ST
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Array
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Bool
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.ByteString
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Char
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Complex
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Data
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Dynamic
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Either
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Fixed
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Floating
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Compose
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Identity
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Product
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Functor.Sum
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Integral
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.List
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.List.NonEmpty
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Maybe
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Monoid
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Ord
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Proxy
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Ratio
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Semigroup
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Text
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Tuple
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Type.Coercion
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Type.Equality
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Typeable
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Version
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Data.Void
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Foreign.C.Types
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Foreign.Ptr
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Event
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Fingerprint
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Generics
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.RTS.Flags
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Stack
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.StaticPtr
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.Stats
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.GHC.TypeLits
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Numeric.Natural
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.System.Exit
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.System.IO
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.System.Posix.Types
         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Text.Read
         th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI:Language.Haskell.TH.Lift
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.AmountOfMoney.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.CreditCardNumber.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Distance.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Duration.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Email.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Gender.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Identity.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Locale
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Numeral.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Ordinal.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.PhoneNumber.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Quantity.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Regex.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Region
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Temperature.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Time.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.TimeGrain.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Url.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Volume.Types
                         duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1:Duckling.Weight.Types
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.FromStringTextShow
                         text-show-3.6@text-show-3.6-60Dmy5IB2MTJMsJHXN7mDI:TextShow.Options
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
import  -/  base-4.9.1.0:Data.String b34df69c7b6358cd40a379c8a0a78dcf
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  Duckling.Dimensions.Types 0550b66ebec07a66dfc3ea4104e21efe
  exports: 1d319a78c66b2cad5cc751ccac3cd721
import  -/  Duckling.Numeral.Helpers bd0dabecd11987616dc666a3e43dd924
  exports: e7d47526dd2b06e4e1d94c237fe469a9
  isPositive 833c10b9c2bf07ab2b69a2d355712775
  numberBetween 22deb48e7edff6d42fed476e13f1da21
import  -/  Duckling.Numeral.Types 5130bfd045a9ca6085fec0a42ae9c523
  exports: 94344b1dfc906561c4234f30cd403539
  NumeralData eed9cb1fe0950cfcb945c3cf09694611
  value 8ada7f17e1d24c76a72ee8a3669186b6
import  -/  Duckling.Quantity.Helpers c554fd9b3904b3e99a9921ab1a6847d7
  exports: e62c7ec8ee931094091c9b10fe8b3dcc
  quantity 09971b49883ac54d250bce811b66a6c2
import  -/  Duckling.Quantity.Types a54e787246c8f7674ea30ca428b1f9c0
  exports: 6769709567c3fb43c23de2aeddb3e791
  Gram 825d960e367ec25425796930c531b972
  Unit cc507958932a6d40d35b817e57a382bb
import  -/  Duckling.Regex.Types 02ee061ffbed7bfe03850219af82e91c
  exports: d44c9c4af09e2c2530be2e20de544b1d
  GroupMatch 537ad29f8ab71f1e1b7b5a2d9bd0ac47
import  -/  Duckling.Types 801e304eb17ff8eb30c8b6726b1646d0
  exports: 234683482d9f074d977aa6ca4a8259f1
  Numeral 37ea753945466ebddfe8bb90136c8911
  Predicate 7b23b72c5da11bf15a4943a8b0a1fdb3
  Quantity 8c238791106d0e5d948ebbe4b8795341
  RegexMatch 48a4c104f38c3a332becce55bbf47568
  Rule 68f6ad16b93bf0573b6e6f063820cf0e
  Rule 876893268fb58123567a47e946b5b6ba
  Token ed5ab3414f0516bc6b6fd996e839d3c3
  name 76f427769b73e82db2c2df59caa60288
  pattern 6666cdf07a41b137593bc737023ac7f1
  prod a4c6750bd517e049c9ce8428e1e5dff2
  regex c51097368a8c266ad9942dc9e3370fd5
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text f7d3d648ffeef1043fe2e522e7e66c1b
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Internal 9bfcbbbe07ecef48f631025a838df7da
import  -/  unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base 05331f9dbdce4e8225c18ce1a8ba2f88
import  -/  unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Strict 74fd7b14a4a2f9eaf95c7dc9a18e61b1
e4862f05919b91a2919bbe0151824217
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Duckling.Quantity.Rules.$trModule2
                   Duckling.Quantity.Rules.$trModule1) -}
fb524c1028e5406c806aefddc2539bb1
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Duckling.Quantity.Rules"#) -}
3eb7565ef61d3518b2c1f543bc8d7b2e
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "duckling-0.1.6.1-FuuoxNkK08bIA0dGJuhBV1"#) -}
a7d8dac7081d45dbfe16dde7e3213678
  $w$s$wupdateOrSnocWithKey ::
    (Data.Text.Internal.Text -> v -> v -> v)
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> GHC.Prim.Array#
         (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
    -> GHC.Prim.Array#
         (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
  {- Arity: 6, Strictness: <L,C(C1(C1(U)))><L,U><L,U><L,U><L,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ v
                   (w :: Data.Text.Internal.Text -> v -> v -> v)
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (w1 :: v)
                   (w2 :: GHC.Prim.Array#
                            (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)) ->
                 letrec {
                   $wgo1 :: GHC.Prim.ByteArray#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> v
                            -> GHC.Prim.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                     {- Arity: 7, Strictness: <L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
                        Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.ByteArray#)
                       (ww4 :: GHC.Prim.Int#)
                       (ww5 :: GHC.Prim.Int#)
                       (w3 :: v)
                       (ww6 :: GHC.Prim.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v))
                       (ww7 :: GHC.Prim.Int#)
                       (ww8 :: GHC.Prim.Int#) ->
                     let {
                       k2 :: Data.Text.Internal.Text = Data.Text.Internal.Text ww3 ww4 ww5
                     } in
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww7 ww8) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.indexArray#
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 ww6
                                 ww7 of ds { Unit# ipv3 ->
                          case ipv3 of wild1 { Data.HashMap.Base.L kx y ->
                          case kx of wild2 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.==# ww5 dt5) of wild3 {
                            GHC.Types.False
                            -> $wgo1 ww3 ww4 ww5 w3 ww6 (GHC.Prim.+# ww7 1#) ww8
                            GHC.Types.True
                            -> case {__pkg_ccall text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00 _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                                  -> GHC.Prim.Word#
                                                                                                                  -> GHC.Prim.ByteArray#
                                                                                                                  -> GHC.Prim.Word#
                                                                                                                  -> GHC.Prim.Word#
                                                                                                                  -> GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld
                                                                                                                  -> (# GHC.Prim.State#
                                                                                                                          GHC.Prim.RealWorld,
                                                                                                                        GHC.Prim.Int# #)}
                                      ww3
                                      (GHC.Prim.int2Word# ww4)
                                      dt3
                                      (GHC.Prim.int2Word# dt4)
                                      (GHC.Prim.int2Word# ww5)
                                      GHC.Prim.realWorld# of wild4 { (#,#) ds11 ds12 ->
                               case GHC.Prim.narrow32Int# ds12 of wild5 {
                                 DEFAULT -> $wgo1 ww3 ww4 ww5 w3 ww6 (GHC.Prim.+# ww7 1#) ww8
                                 0#
                                 -> case GHC.Prim.thawArray#
                                           @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                           @ GHC.Prim.RealWorld
                                           ww6
                                           0#
                                           (GHC.Prim.sizeofArray#
                                              @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                              ww6)
                                           GHC.Prim.realWorld# of ds1 { (#,#) ipv4 ipv5 ->
                                    case GHC.Prim.writeArray#
                                           @ GHC.Prim.RealWorld
                                           @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                           ipv5
                                           ww7
                                           (Data.HashMap.Base.L
                                              @ Data.Text.Internal.Text
                                              @ v
                                              k2
                                              (w k2 w3 y))
                                           ipv4 of s' { DEFAULT ->
                                    case GHC.Prim.unsafeFreezeArray#
                                           @ GHC.Prim.RealWorld
                                           @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                           ipv5
                                           s' of ds2 { (#,#) ipv6 ipv7 ->
                                    ipv7 } } } } } } } } }
                       GHC.Types.True
                       -> case GHC.Prim.newArray#
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 @ GHC.Prim.RealWorld
                                 (GHC.Prim.+# ww8 1#)
                                 (Data.HashMap.Array.undefinedElem
                                    @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v))
                                 GHC.Prim.realWorld# of ds { (#,#) ipv3 ipv4 ->
                          case GHC.Prim.copyArray#
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 @ GHC.Prim.RealWorld
                                 ww6
                                 0#
                                 ipv4
                                 0#
                                 ww8
                                 ipv3 of s2 { DEFAULT ->
                          case GHC.Prim.writeArray#
                                 @ GHC.Prim.RealWorld
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 ipv4
                                 ww8
                                 (Data.HashMap.Base.L @ Data.Text.Internal.Text @ v k2 w3)
                                 s2 of s' { DEFAULT ->
                          case GHC.Prim.unsafeFreezeArray#
                                 @ GHC.Prim.RealWorld
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 ipv4
                                 s' of ds1 { (#,#) ipv5 ipv6 ->
                          ipv6 } } } } }
                 } in
                 $wgo1
                   ww
                   ww1
                   ww2
                   w1
                   w2
                   0#
                   (GHC.Prim.sizeofArray#
                      @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                      w2)) -}
07522c7313eb49ae6baf4dd44e030e49
  $w$slookup ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
    -> GHC.Base.Maybe v
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><S,U><S,U><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ v
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (w :: Data.HashMap.Base.HashMap Data.Text.Internal.Text v) ->
                 case {__pkg_ccall hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol hashable_fnv_hash_offset GHC.Prim.ByteArray#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.State#
                                                                                                                          GHC.Prim.RealWorld
                                                                                                                     -> (# GHC.Prim.State#
                                                                                                                             GHC.Prim.RealWorld,
                                                                                                                           GHC.Prim.Int# #)}
                        ww
                        (GHC.Prim.uncheckedIShiftL# ww1 1#)
                        (GHC.Prim.uncheckedIShiftL# ww2 1#)
                        -2578643520546668380#
                        GHC.Prim.realWorld# of wild1 { (#,#) ds1 ds2 ->
                 Duckling.Quantity.Rules.$wpoly_go2
                   @ v
                   (GHC.Prim.int2Word# ds2)
                   ww
                   ww1
                   ww2
                   0#
                   w }) -}
17c322ad6620be5cbf6c6d6cdc34276c
  $w$sunsafeInsert ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
  {- Arity: 5, Strictness: <S,U><S,U><S,U><L,U><S,1*U>, Inline: [0],
     Unfolding: (\ @ v
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (w :: v)
                   (w1 :: Data.HashMap.Base.HashMap Data.Text.Internal.Text v) ->
                 case {__pkg_ccall hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol hashable_fnv_hash_offset GHC.Prim.ByteArray#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.State#
                                                                                                                          GHC.Prim.RealWorld
                                                                                                                     -> (# GHC.Prim.State#
                                                                                                                             GHC.Prim.RealWorld,
                                                                                                                           GHC.Prim.Int# #)}
                        ww
                        (GHC.Prim.uncheckedIShiftL# ww1 1#)
                        (GHC.Prim.uncheckedIShiftL# ww2 1#)
                        -2578643520546668380#
                        GHC.Prim.realWorld# of wild1 { (#,#) ds1 ds2 ->
                 case Duckling.Quantity.Rules.$wpoly_go3
                        @ GHC.Prim.RealWorld
                        @ v
                        (GHC.Prim.int2Word# ds2)
                        ww
                        ww1
                        ww2
                        w
                        0#
                        w1
                        GHC.Prim.realWorld# of ds { (#,#) ipv ipv1 ->
                 ipv1 } }) -}
939e3cc6d25167a489eb100b4ce006f1
  $wpoly_go1 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array#
         (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe v
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><S,U><S,U><S,U>, Inline: [0] -}
08e607a8798313313557e13867707d04
  $wpoly_go2 ::
    GHC.Prim.Word#
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
    -> GHC.Base.Maybe v
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>, Inline: [0] -}
d5b966e2a0ada43ff6854fadd415e42a
  $wpoly_go3 ::
    GHC.Prim.Word#
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> GHC.Prim.Int#
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          Data.HashMap.Base.HashMap Data.Text.Internal.Text v #)
  {- Arity: 8,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><S,1*U><L,U>,
     Inline: [0] -}
20e8006429f6ca99bb4761b8cd36e648
  rules :: [Duckling.Types.Rule]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Duckling.Types.Rule
                   Duckling.Quantity.Rules.rules28
                   Duckling.Quantity.Rules.rules1) -}
9f5ed1ed09ed4915d92a27ef88f44a23
  rules1 :: [Duckling.Types.Rule]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Duckling.Types.Rule
                   Duckling.Quantity.Rules.rules20
                   Duckling.Quantity.Rules.rules2) -}
4e303622c7ff16d8e1c2164d90cf0f78
  rules10 :: Duckling.Types.PatternItem
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Duckling.Types.Predicate
                   Duckling.Numeral.Helpers.isPositive) -}
a95dfad3c64425a33e387fff318c37cb
  rules11 :: Duckling.Types.Rule
  {- Strictness: m,
     Unfolding: (Duckling.Types.Rule
                   Duckling.Quantity.Rules.rules19
                   Duckling.Quantity.Rules.rules14
                   Duckling.Quantity.Rules.rules12) -}
268b2691c1f222c21784583219524416
  rules12 ::
    [Duckling.Types.Token] -> GHC.Base.Maybe Duckling.Types.Token
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [Duckling.Types.Token]) ->
                 case ds of wild {
                   [] -> GHC.Base.Nothing @ Duckling.Types.Token
                   : ds1 ds2
                   -> case ds1 of wild1 { Duckling.Types.Token a $dResolve $dEq $dHashable $dShow $dNFData ds3 ds4 ->
                      case ds3 of wild2 {
                        DEFAULT -> GHC.Base.Nothing @ Duckling.Types.Token
                        Duckling.Types.Numeral cobox0
                        -> case ds4
                                  `cast`
                                (Sub cobox0) of wild3 { Duckling.Numeral.Types.NumeralData ds5 ds6 ds7 ds8 ->
                           case ds2 of wild4 {
                             [] -> GHC.Base.Nothing @ Duckling.Types.Token
                             : ds9 ds10
                             -> case ds9 of wild5 { Duckling.Types.Token a1 $dResolve1 $dEq1 $dHashable1 $dShow1 $dNFData1 ds11 ds12 ->
                                case ds11 of wild6 {
                                  DEFAULT -> GHC.Base.Nothing @ Duckling.Types.Token
                                  Duckling.Types.RegexMatch cobox1
                                  -> case ds12 of tpl { DEFAULT ->
                                     GHC.Base.Just
                                       @ Duckling.Types.Token
                                       (Duckling.Types.Token
                                          @ Duckling.Quantity.Types.QuantityData
                                          Duckling.Quantity.Types.$fResolveQuantityData
                                          Duckling.Quantity.Types.$fEqQuantityData
                                          Duckling.Quantity.Types.$fHashableQuantityData
                                          Duckling.Quantity.Types.$fShowQuantityData
                                          Duckling.Quantity.Types.$fNFDataQuantityData_$crnf
                                            `cast`
                                          (Sym (Control.DeepSeq.N:NFData[0]
                                                    <Duckling.Quantity.Types.QuantityData>_N))
                                          Duckling.Types.$WQuantity
                                          (Duckling.Quantity.Types.QuantityData
                                             Duckling.Quantity.Rules.rules13
                                             (GHC.Base.Just
                                                @ GHC.Types.Double
                                                (case ds5 of wild7 { GHC.Types.D# x ->
                                                 GHC.Types.D#
                                                   (GHC.Prim.+## (GHC.Prim.*## x 50.0##) 25.0##) }))
                                             (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                             (GHC.Base.Nothing @ GHC.Types.Double)
                                             (GHC.Base.Nothing
                                                @ GHC.Types.Double))) } } } } } } } }) -}
46e91a5a22166326fc5665b20ace248c
  rules13 :: GHC.Base.Maybe Duckling.Quantity.Types.Unit
  {- HasNoCafRefs,
     Unfolding: (GHC.Base.Just
                   @ Duckling.Quantity.Types.Unit
                   Duckling.Quantity.Types.Gram) -}
361c99fe861ade5bfb0d506f5adf072b
  rules14 :: [Duckling.Types.PatternItem]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Duckling.Types.PatternItem
                   Duckling.Quantity.Rules.rules10
                   Duckling.Quantity.Rules.rules15) -}
2f0c07b232d541ff0014350b60794bbb
  rules15 :: [Duckling.Types.PatternItem]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Duckling.Types.PatternItem
                   Duckling.Quantity.Rules.rules16
                   (GHC.Types.[] @ Duckling.Types.PatternItem)) -}
3b09387275e838cd0565118f012998d0
  rules16 :: Duckling.Types.PatternItem
  {- Strictness: m1,
     Unfolding: (Duckling.Types.Regex
                   Duckling.Quantity.Rules.rules17) -}
3246980b66e452b4bdd0c7fcbdcede63
  rules17 :: Text.Regex.PCRE.Wrap.Regex
  {- Unfolding: (Text.Regex.PCRE.String.$fRegexMakerRegexCompOptionExecOption[]_$cmakeRegexOpts
                   Duckling.Types.regex1
                     `cast`
                   (Trans
                        (Sym (Foreign.C.Types.N:CInt[0]))
                        (Sym (Text.Regex.PCRE.Wrap.N:CompOption[0])))
                   Text.Regex.PCRE.Wrap.execBlank1
                     `cast`
                   (Trans
                        (Sym (Foreign.C.Types.N:CInt[0]))
                        (Sym (Text.Regex.PCRE.Wrap.N:ExecOption[0])))
                   Duckling.Quantity.Rules.rules18) -}
71c5c3869fc27d9594cd5947a1066f8d
  rules18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "(\\228\\184\\164|\\229\\133\\169)\\229\\141\\138"#) -}
9dec0292ab3eab4d00d15f635d772baa
  rules19 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<quantity> tael half"#) -}
e562e4c9743288d0c5c7e1930f168742
  rules2 :: [Duckling.Types.Rule]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Duckling.Types.Rule
                   Duckling.Quantity.Rules.rules11
                   Duckling.Quantity.Rules.rules3) -}
0c2bc0f22492888e1461bacec8b1a41b
  rules20 :: Duckling.Types.Rule
  {- Strictness: m,
     Unfolding: (Duckling.Types.Rule
                   Duckling.Quantity.Rules.rules27
                   Duckling.Quantity.Rules.rules22
                   Duckling.Quantity.Rules.rules21) -}
3076667f8cd8950cb790fcb736aa86b0
  rules21 ::
    [Duckling.Types.Token] -> GHC.Base.Maybe Duckling.Types.Token
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [Duckling.Types.Token]) ->
                 case ds of wild {
                   [] -> GHC.Base.Nothing @ Duckling.Types.Token
                   : ds1 ds2
                   -> case ds1 of wild1 { Duckling.Types.Token a $dResolve $dEq $dHashable $dShow $dNFData ds3 ds4 ->
                      case ds3 of wild2 {
                        DEFAULT -> GHC.Base.Nothing @ Duckling.Types.Token
                        Duckling.Types.Numeral cobox0
                        -> case ds4
                                  `cast`
                                (Sub cobox0) of wild3 { Duckling.Numeral.Types.NumeralData ds5 ds6 ds7 ds8 ->
                           case ds2 of wild4 {
                             [] -> GHC.Base.Nothing @ Duckling.Types.Token
                             : ds9 ds10
                             -> case ds9 of wild5 { Duckling.Types.Token a1 $dResolve1 $dEq1 $dHashable1 $dShow1 $dNFData1 ds11 ds12 ->
                                case ds11 of wild6 {
                                  DEFAULT -> GHC.Base.Nothing @ Duckling.Types.Token
                                  Duckling.Types.RegexMatch cobox1
                                  -> case ds12 of tpl { DEFAULT ->
                                     GHC.Base.Just
                                       @ Duckling.Types.Token
                                       (Duckling.Types.Token
                                          @ Duckling.Quantity.Types.QuantityData
                                          Duckling.Quantity.Types.$fResolveQuantityData
                                          Duckling.Quantity.Types.$fEqQuantityData
                                          Duckling.Quantity.Types.$fHashableQuantityData
                                          Duckling.Quantity.Types.$fShowQuantityData
                                          Duckling.Quantity.Types.$fNFDataQuantityData_$crnf
                                            `cast`
                                          (Sym (Control.DeepSeq.N:NFData[0]
                                                    <Duckling.Quantity.Types.QuantityData>_N))
                                          Duckling.Types.$WQuantity
                                          (Duckling.Quantity.Types.QuantityData
                                             Duckling.Quantity.Rules.rules13
                                             (GHC.Base.Just
                                                @ GHC.Types.Double
                                                (case ds5 of wild7 { GHC.Types.D# x ->
                                                 GHC.Types.D#
                                                   (GHC.Prim.+##
                                                      (GHC.Prim.*## x 500.0##)
                                                      250.0##) }))
                                             (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                             (GHC.Base.Nothing @ GHC.Types.Double)
                                             (GHC.Base.Nothing
                                                @ GHC.Types.Double))) } } } } } } } }) -}
084329988047d5987d42690c793b2172
  rules22 :: [Duckling.Types.PatternItem]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Duckling.Types.PatternItem
                   Duckling.Quantity.Rules.rules10
                   Duckling.Quantity.Rules.rules23) -}
f4adf46adf94aa56def254b65d4ea066
  rules23 :: [Duckling.Types.PatternItem]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Duckling.Types.PatternItem
                   Duckling.Quantity.Rules.rules24
                   (GHC.Types.[] @ Duckling.Types.PatternItem)) -}
a8089f4ec4312bbcf725227dafe92a0a
  rules24 :: Duckling.Types.PatternItem
  {- Strictness: m1,
     Unfolding: (Duckling.Types.Regex
                   Duckling.Quantity.Rules.rules25) -}
1534938cfeab90d298a50695df950a56
  rules25 :: Text.Regex.PCRE.Wrap.Regex
  {- Unfolding: (Text.Regex.PCRE.String.$fRegexMakerRegexCompOptionExecOption[]_$cmakeRegexOpts
                   Duckling.Types.regex1
                     `cast`
                   (Trans
                        (Sym (Foreign.C.Types.N:CInt[0]))
                        (Sym (Text.Regex.PCRE.Wrap.N:CompOption[0])))
                   Text.Regex.PCRE.Wrap.execBlank1
                     `cast`
                   (Trans
                        (Sym (Foreign.C.Types.N:CInt[0]))
                        (Sym (Text.Regex.PCRE.Wrap.N:ExecOption[0])))
                   Duckling.Quantity.Rules.rules26) -}
daa95dc68f69ce83a5f01a254c5d045f
  rules26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "\\230\\150\\164\\229\\141\\138"#) -}
f85e60436136427ba0b885d6643d4072
  rules27 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<quantity> catty half"#) -}
03f6c99018b32c3d08f10002e615b1f1
  rules28 :: Duckling.Types.Rule
  {- Strictness: m,
     Unfolding: (Duckling.Types.Rule
                   Duckling.Quantity.Rules.rules41
                   Duckling.Quantity.Rules.rules30
                   Duckling.Quantity.Rules.rules29) -}
ad7749094604b7a4035ee159aa213c2c
  rules29 ::
    [Duckling.Types.Token] -> GHC.Base.Maybe Duckling.Types.Token
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [Duckling.Types.Token]) ->
                 case ds of wild {
                   [] -> GHC.Base.Nothing @ Duckling.Types.Token
                   : ds1 ds2
                   -> case ds1 of wild1 { Duckling.Types.Token a $dResolve $dEq $dHashable $dShow $dNFData ds3 ds4 ->
                      case ds3 of wild2 {
                        DEFAULT -> GHC.Base.Nothing @ Duckling.Types.Token
                        Duckling.Types.Numeral cobox0
                        -> case ds4
                                  `cast`
                                (Sub cobox0) of wild3 { Duckling.Numeral.Types.NumeralData ds5 ds6 ds7 ds8 ->
                           case ds2 of wild4 {
                             [] -> GHC.Base.Nothing @ Duckling.Types.Token
                             : ds9 ds10
                             -> case ds9 of wild5 { Duckling.Types.Token a1 $dResolve1 $dEq1 $dHashable1 $dShow1 $dNFData1 ds11 ds12 ->
                                case ds11 of wild6 {
                                  DEFAULT -> GHC.Base.Nothing @ Duckling.Types.Token
                                  Duckling.Types.RegexMatch cobox1
                                  -> case ds12 of tpl { DEFAULT ->
                                     case ds10 of wild7 {
                                       [] -> GHC.Base.Nothing @ Duckling.Types.Token
                                       : ds13 ds14
                                       -> case ds13 of wild8 { Duckling.Types.Token a2 $dResolve2 $dEq2 $dHashable2 $dShow2 $dNFData2 ds15 ds16 ->
                                          case ds15 of wild9 {
                                            DEFAULT -> GHC.Base.Nothing @ Duckling.Types.Token
                                            Duckling.Types.Numeral cobox2
                                            -> case ds16
                                                      `cast`
                                                    (Sub cobox2) of wild10 { Duckling.Numeral.Types.NumeralData ds17 ds18 ds19 ds20 ->
                                               case ds14 of wild11 {
                                                 [] -> GHC.Base.Nothing @ Duckling.Types.Token
                                                 : ds21 ds22
                                                 -> case ds21 of wild12 { Duckling.Types.Token a3 $dResolve3 $dEq3 $dHashable3 $dShow3 $dNFData3 ds23 ds24 ->
                                                    case ds23 of wild13 {
                                                      DEFAULT
                                                      -> GHC.Base.Nothing @ Duckling.Types.Token
                                                      Duckling.Types.RegexMatch cobox3
                                                      -> case ds24 of tpl1 { DEFAULT ->
                                                         GHC.Base.Just
                                                           @ Duckling.Types.Token
                                                           (Duckling.Types.Token
                                                              @ Duckling.Quantity.Types.QuantityData
                                                              Duckling.Quantity.Types.$fResolveQuantityData
                                                              Duckling.Quantity.Types.$fEqQuantityData
                                                              Duckling.Quantity.Types.$fHashableQuantityData
                                                              Duckling.Quantity.Types.$fShowQuantityData
                                                              Duckling.Quantity.Types.$fNFDataQuantityData_$crnf
                                                                `cast`
                                                              (Sym (Control.DeepSeq.N:NFData[0]
                                                                        <Duckling.Quantity.Types.QuantityData>_N))
                                                              Duckling.Types.$WQuantity
                                                              (Duckling.Quantity.Types.QuantityData
                                                                 Duckling.Quantity.Rules.rules13
                                                                 (GHC.Base.Just
                                                                    @ GHC.Types.Double
                                                                    (case ds5 of wild14 { GHC.Types.D# x ->
                                                                     case ds17 of wild15 { GHC.Types.D# x1 ->
                                                                     GHC.Types.D#
                                                                       (GHC.Prim.+##
                                                                          (GHC.Prim.*## x 500.0##)
                                                                          (GHC.Prim.*##
                                                                             x1
                                                                             50.0##)) } }))
                                                                 (GHC.Base.Nothing
                                                                    @ Data.Text.Internal.Text)
                                                                 (GHC.Base.Nothing
                                                                    @ GHC.Types.Double)
                                                                 (GHC.Base.Nothing
                                                                    @ GHC.Types.Double))) } } } } } } } } } } } } } } } }) -}
16c00c4d6cab8fa5683da8f85cc0cfd4
  rules3 :: [Duckling.Types.Rule]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Duckling.Types.Rule
                   Duckling.Quantity.Rules.rules4
                   (GHC.Types.[] @ Duckling.Types.Rule)) -}
b07ae142db414abf5ebdcf0ab7c39aca
  rules30 :: [Duckling.Types.PatternItem]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Duckling.Types.PatternItem
                   Duckling.Quantity.Rules.rules10
                   Duckling.Quantity.Rules.rules31) -}
b37afb3c32800d482428c7f23af33a36
  rules31 :: [Duckling.Types.PatternItem]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Duckling.Types.PatternItem
                   Duckling.Quantity.Rules.rules38
                   Duckling.Quantity.Rules.rules32) -}
e7db9ed775ff89983db6b2d25d01d079
  rules32 :: [Duckling.Types.PatternItem]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Duckling.Types.PatternItem
                   Duckling.Quantity.Rules.rules37
                   Duckling.Quantity.Rules.rules33) -}
f839c43eb5644294efe981793a267171
  rules33 :: [Duckling.Types.PatternItem]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Duckling.Types.PatternItem
                   Duckling.Quantity.Rules.rules34
                   (GHC.Types.[] @ Duckling.Types.PatternItem)) -}
4449e6843c5e59a2eebb9528c45ba042
  rules34 :: Duckling.Types.PatternItem
  {- Strictness: m1,
     Unfolding: (Duckling.Types.Regex
                   Duckling.Quantity.Rules.rules35) -}
288f825a63594549428da1ebd5262aaa
  rules35 :: Text.Regex.PCRE.Wrap.Regex
  {- Unfolding: (Text.Regex.PCRE.String.$fRegexMakerRegexCompOptionExecOption[]_$cmakeRegexOpts
                   Duckling.Types.regex1
                     `cast`
                   (Trans
                        (Sym (Foreign.C.Types.N:CInt[0]))
                        (Sym (Text.Regex.PCRE.Wrap.N:CompOption[0])))
                   Text.Regex.PCRE.Wrap.execBlank1
                     `cast`
                   (Trans
                        (Sym (Foreign.C.Types.N:CInt[0]))
                        (Sym (Text.Regex.PCRE.Wrap.N:ExecOption[0])))
                   Duckling.Quantity.Rules.rules36) -}
e93f27e5f77b5ed5ec91ddb82ae4e3ae
  rules36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "\\228\\184\\164|\\229\\133\\169"#) -}
5796a9448b93380015792dbb3c9be1f2
  rules37 :: Duckling.Types.PatternItem
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Duckling.Types.Predicate
                   Duckling.Quantity.Rules.rules_ww1) -}
4fa2c022127b4af7f5df209fa6595751
  rules38 :: Duckling.Types.PatternItem
  {- Strictness: m1,
     Unfolding: (Duckling.Types.Regex
                   Duckling.Quantity.Rules.rules39) -}
53a75bd75c517c61d27a610a22c8c608
  rules39 :: Text.Regex.PCRE.Wrap.Regex
  {- Unfolding: (Text.Regex.PCRE.String.$fRegexMakerRegexCompOptionExecOption[]_$cmakeRegexOpts
                   Duckling.Types.regex1
                     `cast`
                   (Trans
                        (Sym (Foreign.C.Types.N:CInt[0]))
                        (Sym (Text.Regex.PCRE.Wrap.N:CompOption[0])))
                   Text.Regex.PCRE.Wrap.execBlank1
                     `cast`
                   (Trans
                        (Sym (Foreign.C.Types.N:CInt[0]))
                        (Sym (Text.Regex.PCRE.Wrap.N:ExecOption[0])))
                   Duckling.Quantity.Rules.rules40) -}
071c3fc06f2ba4ebeaa2cee5c0c06f49
  rules4 :: Duckling.Types.Rule
  {- Strictness: m,
     Unfolding: (Duckling.Types.Rule
                   Duckling.Quantity.Rules.rules_name
                   Duckling.Quantity.Rules.rules6
                   Duckling.Quantity.Rules.rules5) -}
47978afc051ffe424f13442516255d48
  rules40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "\\230\\150\\164"#) -}
232bf19882ab8ed778c58ef42f879fbf
  rules41 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<quantity> catty <quantity> tael"#) -}
e4217ebf006341574105c24a68844a48
  rules5 ::
    [Duckling.Types.Token] -> GHC.Base.Maybe Duckling.Types.Token
  {- Arity: 1, Strictness: <S,1*U> -}
1f7a7d41fdc5b0b7f7bbdd1831da9231
  rules6 :: [Duckling.Types.PatternItem]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Duckling.Types.PatternItem
                   Duckling.Quantity.Rules.rules10
                   Duckling.Quantity.Rules.rules7) -}
bf23988004e3faf03ebbf1e04bdab897
  rules7 :: [Duckling.Types.PatternItem]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Duckling.Types.PatternItem
                   Duckling.Quantity.Rules.rules8
                   (GHC.Types.[] @ Duckling.Types.PatternItem)) -}
5b6bbd06c1d60752f2fc8b3f58ce540c
  rules8 :: Duckling.Types.PatternItem
  {- Strictness: m1,
     Unfolding: (Duckling.Types.Regex Duckling.Quantity.Rules.rules9) -}
1c8130efdff841ff3c745be8c7e4fd92
  rules9 :: Text.Regex.PCRE.Wrap.Regex
  {- Unfolding: (Text.Regex.PCRE.String.$fRegexMakerRegexCompOptionExecOption[]_$cmakeRegexOpts
                   Duckling.Types.regex1
                     `cast`
                   (Trans
                        (Sym (Foreign.C.Types.N:CInt[0]))
                        (Sym (Text.Regex.PCRE.Wrap.N:CompOption[0])))
                   Text.Regex.PCRE.Wrap.execBlank1
                     `cast`
                   (Trans
                        (Sym (Foreign.C.Types.N:CInt[0]))
                        (Sym (Text.Regex.PCRE.Wrap.N:ExecOption[0])))
                   Duckling.Quantity.Rules.rules_regexPattern) -}
a5d1ea4174a58bc60c29eab6ce472065
  rules_name :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<quantity> grams"#) -}
b444efaec38659bbc28e0fb91dbc3bee
  rules_regexPattern :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "(\\229\\141\\131\\229\\133\\139|\\229\\133\\172\\230\\150\\164|\\230\\150\\164|\\228\\184\\164|\\229\\133\\169|\\229\\133\\139|\\230\\175\\171\\229\\133\\139|kg|g|mg)"#) -}
75a919c74c9c85d4574e1a3ce882429a
  rules_ww1 :: Duckling.Types.Predicate
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Duckling.Types.Token) ->
                 case x of wild { Duckling.Types.Token a $dResolve $dEq $dHashable $dShow $dNFData ds ds1 ->
                 case ds of wild1 {
                   DEFAULT -> GHC.Types.False
                   Duckling.Types.Numeral cobox0
                   -> case ds1
                             `cast`
                           (Sub cobox0) of wild2 { Duckling.Numeral.Types.NumeralData ds2 ds3 ds4 ds5 ->
                      case ds4 of wild3 {
                        GHC.Types.False
                        -> case ds2 of wild5 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=## 1.0## y) of wild6 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<## y 10.0##) } }
                        GHC.Types.True -> GHC.Types.False } } } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

